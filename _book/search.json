[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"(book ?)run entire pipeline illustration, pre-filtering actual GSA tool, several R packages required. provide overview packages must installed (already available) loaded. sections correspond individual steps, give overview locally required libraries.","code":""},{"path":"index.html","id":"required-r-packages","chapter":"1 About","heading":"1.1 Required R Packages","text":"tweeDEseqCountData: provides count data three RNA-Seq experiments together information conditions samples. work work gene expression data set provided Pickrell et al. (2010) illustrations.tweeDEseqCountData: provides count data three RNA-Seq experiments together information conditions samples. work work gene expression data set provided Pickrell et al. (2010) illustrations.BiocManager: offers functionalities install manage packages part Bioconductor project. , particularly use install required Bioconductor packages.BiocManager: offers functionalities install manage packages part Bioconductor project. , particularly use install required Bioconductor packages.clusterProfiler: offers functionalities explore functional characteristics high-throughput genomic data. , use functions perform ORA GSEA conversion gene IDs.clusterProfiler: offers functionalities explore functional characteristics high-throughput genomic data. , use functions perform ORA GSEA conversion gene IDs.org.Hs.eg.db: provides genome-wide annotation human organism. Note gene expression measurements extracted different organism, must adapt library accordingly. instance, organism mouse requires library org.Mm.eg.db.\nlibrary often required working library clusterProfiler.org.Hs.eg.db: provides genome-wide annotation human organism. Note gene expression measurements extracted different organism, must adapt library accordingly. instance, organism mouse requires library org.Mm.eg.db.\nlibrary often required working library clusterProfiler.limma: provides functionalities analysing data gene expression experiments. limma allows analysis microarray well RNA-Seq data analysis pipelines similar. use limma differential expression analysis make use transformation RNA-Seq data align characteristics microarray data.limma: provides functionalities analysing data gene expression experiments. limma allows analysis microarray well RNA-Seq data analysis pipelines similar. use limma differential expression analysis make use transformation RNA-Seq data align characteristics microarray data.edgeR: provides functionalities analyse data RNA sequencing technologies focuses differential expression analysis biological (opposed technical) replicates.edgeR: provides functionalities analyse data RNA sequencing technologies focuses differential expression analysis biological (opposed technical) replicates.DESeq2: offers functionalities visualization differential expression analysis RNA-Seq data.DESeq2: offers functionalities visualization differential expression analysis RNA-Seq data.dplyr: provides various functionalities data manipulation.\nuse unify results tables different methods differential expression analysis. necessary general, simplifies illustrations can use GSA pipelines following differential expression analysis, independent method differential expression analysis used.dplyr: provides various functionalities data manipulation.\nuse unify results tables different methods differential expression analysis. necessary general, simplifies illustrations can use GSA pipelines following differential expression analysis, independent method differential expression analysis used.goseq: implements GSA method GOSeq.goseq: implements GSA method GOSeq.PADOG: implements GSA method PADOG.ats book source files.PADOG: implements GSA method PADOG.ats book source files.","code":""},{"path":"prefiltering.html","id":"prefiltering","chapter":"2 Prefiltering","heading":"2 Prefiltering","text":"script, learn two options exclude genes sufficient number read counts across\nsamples. distinguish two approaches since different methods differential expression analysis (see file “Instructions_Differential_Expression_Analysis”) propose different methods pre-filtering.script, learn two options exclude genes sufficient number read counts across\nsamples. distinguish two approaches since different methods differential expression analysis (see file “Instructions_Differential_Expression_Analysis”) propose different methods pre-filtering.option 1: pre-filtering using function provided edgeRoption 1: pre-filtering using function provided edgeRoption 2: pre-filtering proposed DESeq2option 2: pre-filtering proposed DESeq2","code":""},{"path":"prefiltering.html","id":"libraries","chapter":"2 Prefiltering","heading":"2.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"tweeDESeqCountData\")\nBiocManager::install(\"edgeR\")"},{"path":"prefiltering.html","id":"load-libraries","chapter":"2 Prefiltering","heading":"2.1.1 Load Libraries","text":"Description packages:tweeDESeqCountData: library obtain gene expression data set use illustrations.tweeDESeqCountData: library obtain gene expression data set use illustrations.edgeR: edgeR offers function pre-filtering use .edgeR: edgeR offers function pre-filtering use .","code":"\n\nlibrary(tweeDEseqCountData)\nlibrary(edgeR)"},{"path":"prefiltering.html","id":"preparation-of-rna-seq-data-set-used-for-illustration","chapter":"2 Prefiltering","heading":"2.2 Preparation of RNA-Seq data set used for illustration","text":"RNA-Seq data set use illustration provided Pickrell et al. (2010) part library tweeDEseqCountData. data set, sample conditions (.e. phenotypes) respective samples correspond genders. purpose simplicity readability, store gene expression measurements sample conditions objects neutral names.","code":"\n# load pickrell data set \ndata(pickrell)\n\n# access and store gene expression measurements\nexpression_data <- Biobase::exprs(pickrell.eset)\n# access and store sample conditions \nsample_conditions <- pickrell.eset$gender \n\n\n# take a look at the gene expression measurements: \nhead(expression_data, n = 5)\n#>                 NA18486 NA18498 NA18499 NA18501 NA18502\n#> ENSG00000000003       0       0       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419      22     105      40      55      67\n#> ENSG00000000457      22     100     107      53      72\n#> ENSG00000000460       5      23      10      18      15\n#>                 NA18504 NA18505 NA18507 NA18508 NA18510\n#> ENSG00000000003       0       5       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419      37      88     127      70      43\n#> ENSG00000000457      38      98      69      66      43\n#> ENSG00000000460       8      11      16      18       7\n#>                 NA18511 NA18516 NA18517 NA18519 NA18520\n#> ENSG00000000003       0       0       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419     104      42      66      58      82\n#> ENSG00000000457     103      51      91      87      77\n#> ENSG00000000460       9       7      19      15      22\n#>                 NA18522 NA18523 NA18852 NA18853 NA18855\n#> ENSG00000000003       0       0       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419      95      40      32      30      34\n#> ENSG00000000457      87      39      65      50      43\n#> ENSG00000000460      17       7      14       8       5\n#>                 NA18856 NA18858 NA18861 NA18862 NA18870\n#> ENSG00000000003       0       1       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419      44      47     113      79      38\n#> ENSG00000000457      48      52     117      73      50\n#> ENSG00000000460      13      15      23      15       8\n#>                 NA18871 NA18909 NA18912 NA18913 NA18916\n#> ENSG00000000003       0       0       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419      41      95      45      54      49\n#> ENSG00000000457      72      93      44      73      81\n#> ENSG00000000460       8      17       2       7       8\n#>                 NA19093 NA19098 NA19099 NA19101 NA19102\n#> ENSG00000000003       0       0       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419      80      86      73      59      36\n#> ENSG00000000457     103     158     118      89      15\n#> ENSG00000000460      15      15      25      13       2\n#>                 NA19108 NA19114 NA19116 NA19119 NA19127\n#> ENSG00000000003       0       0       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419     124      56      64      25     104\n#> ENSG00000000457     108      19     150      16      38\n#> ENSG00000000460      16       6      28       2      18\n#>                 NA19128 NA19130 NA19131 NA19137 NA19138\n#> ENSG00000000003       0       0       0       0       1\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419      94     117      62      43      46\n#> ENSG00000000457      50     104     113      71     120\n#> ENSG00000000460      22      25      19      14      10\n#>                 NA19140 NA19143 NA19144 NA19147 NA19152\n#> ENSG00000000003       0       0       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419      94      82      56      96      66\n#> ENSG00000000457      46     106      74     116     102\n#> ENSG00000000460      21       6      16      13      24\n#>                 NA19153 NA19159 NA19160 NA19171 NA19172\n#> ENSG00000000003       0       0       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419      78      24      63      34      66\n#> ENSG00000000457     119      29      64      55      70\n#> ENSG00000000460      21       7       9      15      17\n#>                 NA19190 NA19192 NA19193 NA19200 NA19201\n#> ENSG00000000003       0       0       0       0       2\n#> ENSG00000000005       0       0       1       0       0\n#> ENSG00000000419      70      85      43      27      77\n#> ENSG00000000457     102      89      31      68      96\n#> ENSG00000000460       8      28      10       5      16\n#>                 NA19203 NA19204 NA19209 NA19210 NA19222\n#> ENSG00000000003       0       0       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419      82      57      63      89      60\n#> ENSG00000000457      58      86     113      48      71\n#> ENSG00000000460      10      19      17      12      12\n#>                 NA19225 NA19238 NA19239 NA19257\n#> ENSG00000000003       0       0       0       0\n#> ENSG00000000005       0       0       0       0\n#> ENSG00000000419      76      69      84      76\n#> ENSG00000000457      81      73      87      81\n#> ENSG00000000460       7      21      35      11\n# take a look at the sample conditions:\nsample_conditions\n#>  [1] male   male   female male   female male   female male  \n#>  [9] female male   female male   female male   female male  \n#> [17] female female male   female male   female female male  \n#> [25] female male   female female male   female female male  \n#> [33] female male   female female female female male   female\n#> [41] male   male   female female male   female female male  \n#> [49] female female male   female male   male   female female\n#> [57] male   female male   female male   female female male  \n#> [65] female female female male   female\n#> Levels: female male\n\n# inspect the number of genes (rows) and the number of samples (columns) in the gene expression data set \ndim(expression_data)\n#> [1] 52580    69"},{"path":"prefiltering.html","id":"option-1-pre-filtering-using-edgers-builting-function","chapter":"2 Prefiltering","heading":"2.2.1 Option 1: Pre-Filtering using edgeR’s builting function","text":"approach works function filterByExpr() package edgeR proposed method pre-filtering methods differential expression analysis edgeR voom/limma. approach operates cpm-transformed count data (cpm: counts-per-million), excludes genes certain number counts-per-million certain number samples. Note approach accounts differences library size different samples.","code":""},{"path":"prefiltering.html","id":"step-1-generate-input-object-required-by-filterbyexpr","chapter":"2 Prefiltering","heading":"2.2.1.1 step 1: Generate input object required by filterByExpr()","text":"Function description:DGEList(): object contain RNA sequencing measurements additional informationArgument description:counts: matrix RNA-Seq datagroup: vector contains condition sample","code":"\nexpression_data_filterByExpr <- DGEList(counts = expression_data, \n                                        group = sample_conditions)"},{"path":"prefiltering.html","id":"step-2-pre-filtering","chapter":"2 Prefiltering","heading":"2.2.1.2 step 2: Pre-filtering","text":"function filterByExpr() creates indicator genes sufficient amount read counts across samples. Based indicator, gene expression data set filtered.Note index “keep.lib.sizes = FALSE” ensures library size sample recalculated pre-filtering.","code":"\n# (i) for each gene, indicate if it fulfils the requirements to be kept for the subsequent analysis \nindicator_keep <- filterByExpr(expression_data_filterByExpr)\n\n# (ii) filter the gene expression data set such that only those genes are kept which fulfill the requirements\nexpression_data_filterByExpr <- expression_data_filterByExpr[indicator_keep,, keep.lib.sizes = FALSE]"},{"path":"prefiltering.html","id":"step-3-obtain-final-pre-filtered-gene-expression-data-set","chapter":"2 Prefiltering","heading":"2.2.1.3 step 3: Obtain final pre-filtered gene expression data set","text":"point, transform gene expression measurements back data frame. reason subsequent steps (conversion gene IDs work DGEList format).Observe number genes reduced compared original (unfiltered) gene expression data set.","code":"\nexpression_data_filterByExpr <- as.data.frame(expression_data_filterByExpr$counts)\n\n# inspect the number of genes and the number of samples in the final pre-filtered gene expression data set \nnrow(expression_data_filterByExpr)\n#> [1] 6246"},{"path":"prefiltering.html","id":"option-2-simpler-pre-filtering-approach-proposed-by-deseq2","chapter":"2 Prefiltering","heading":"2.2.2 Option 2: Simpler Pre-filtering approach (proposed by DESeq2)","text":"simpler approach pre-filtering proposed method differential expression analysis DESeq2 (see file “Instructions_Differential_Expression_Analysis”. approach, genes kept analysis pre-specified number counts X (10) across samples. higher value X thereby leads genes removed.\nNote DESeq2 proposes stricter version pre-filtering genes kept X number counts least Y samples.\nNote none two “simpler” approaches pre-filtering take differences library size account.","code":""},{"path":"prefiltering.html","id":"step-1-pre-filtering","chapter":"2 Prefiltering","heading":"2.2.2.1 step 1: Pre-Filtering","text":"","code":"\n# indicate which genes have at least 10 read counts across all samples:\nindicator_keep <- rowSums( expression_data ) >= 10 \n\n# alternative (and more strict) indicator:\n# indicator_keep <- rowSums( expression_data >=10) >= 10\n\n# subset gene expression data set accordingly \nexpression_data_filterDESEq2 <- expression_data[indicator_keep,]"},{"path":"prefiltering.html","id":"step-2-inspect-final-pre-filtered-gene-expression-data-set","chapter":"2 Prefiltering","heading":"2.2.2.2 step 2: Inspect final pre-filtered gene expression data set","text":"Note number genes gene expression data set decreased compared initial (unfiltered) gene expression data set.","code":"\ndim(expression_data_filterDESEq2)\n#> [1] 10151    69"},{"path":"gsea-preranking.html","id":"gsea-preranking","chapter":"3 GSEA Preranking","heading":"3 GSEA Preranking","text":"Skip Chapter 4 Differentiation Expression Analysis conversion gene IDs needed.script, go process preparing required input GSEAPreranked (part web-based tool GSEA)\nNote contrast remaining tools considered work, recom-\nmended GSEAPreranked provide input genes ID HGNC (HUGO) gene\nsymbols. reason described supplement work.Therefore, starting point pre-filtered gene expression data set \ngene IDs initial (Ensembl) ID format.proceed following order:Conversion gene IDs HGNC (HUGO) symbols removal resulting duplicated gene IDsConversion gene IDs HGNC (HUGO) symbols removal resulting duplicated gene IDsDifferential expression analysis using voom/limma, DESeq2, edgeRDifferential expression analysis using voom/limma, DESeq2, edgeRGeneration gene ranking results table generated (ii)Generation gene ranking results table generated (ii)Export gene rankings text fileExport gene rankings text fileLink information process gene rankings ExcelLink information process gene rankings Excel","code":""},{"path":"gsea-preranking.html","id":"libraries-1","chapter":"3 GSEA Preranking","heading":"3.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load libraries:Description libraries:clusterProfiler: convert Ensembl ID format HGNC (HUGO) gene symbolsclusterProfiler: convert Ensembl ID format HGNC (HUGO) gene symbolsorg.Hs.eg.db: indicate work human gene expression data (must adapted working different organism)org.Hs.eg.db: indicate work human gene expression data (must adapted working different organism)tweeDEseqCountData: obtain conditions samples gene expression data settweeDEseqCountData: obtain conditions samples gene expression data setlimma: differential expression analysis (based gene ranking generated)limma: differential expression analysis (based gene ranking generated)edgeR: differential expression analysis (based gene ranking generated)edgeR: differential expression analysis (based gene ranking generated)DESeq2: differential expression analysis (based gene ranking generated)DESeq2: differential expression analysis (based gene ranking generated)dplyr: unify relevant columns results differential expression analysis across three methodsdplyr: unify relevant columns results differential expression analysis across three methods","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"org.Hs.eg.db\")\nBiocManager::install(\"tweeDEseqCountData\")\nBiocManager::install(\"limma\")\nBiocManager::install(\"edgeR\")\nBiocManager::install(\"DESeq2\")\nBiocManager::install(\"dplyr\")\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db) \nlibrary(tweeDEseqCountData)\nlibrary(limma)\nlibrary(edgeR)\nlibrary(DESeq2)\nlibrary(dplyr)"},{"path":"gsea-preranking.html","id":"load-data","chapter":"3 GSEA Preranking","heading":"3.1.1 Load data","text":"proceed gene expression data set pre-filtered using edgeR’s filterByExpr.Alternatively, can also load gene expression data set manually pre-filtered (proposed DESeq2):simplified readability, proceed pre-filtered gene expression data set different name:","code":"\nload(\"./data/Results_PreFiltering/expression_data_filterByExpr.Rdata\")\n# load(\"./data/Results_PreFiltering/expression_data_filterDESeq2.Rdata\")\nexpression_data_filtered <- expression_data_filterByExpr"},{"path":"gsea-preranking.html","id":"step-1-convert-ensembl-ids-to-hgnc-symbols","chapter":"3 GSEA Preranking","heading":"3.2 Step 1: Convert Ensembl IDs to HGNC symbols","text":"","code":""},{"path":"gsea-preranking.html","id":"i-obtain-the-mapping-of-initial-ensembl-gene-ids-to-required-hgnc-gene-symbols","chapter":"3 GSEA Preranking","heading":"3.2.0.1 (i) Obtain the mapping of initial (Ensembl) gene IDs to required HGNC gene symbols:","text":"Function arguments:gene IDs: gene IDs converted (stored rownames gene expression data set)gene IDs: gene IDs converted (stored rownames gene expression data set)fromType: initial gene ID format convertedfromType: initial gene ID format convertedtoType: gene ID format converted totoType: gene ID format converted toOrgDb: annotation data base organisms gene expression measurements originate. corresponding argument must loaded library (see )OrgDb: annotation data base organisms gene expression measurements originate. corresponding argument must loaded library (see )Note arguments “fromType” “toType” must set one following, depending given required gene ID format:\nACCNUM, ALIAS, Ensembl, EnsemblPROT, EnsemblTRANS, ENTREZID, ENZYME, EVIDENCE, EVIDENCEALL, GENENAME, GENETYPE, GO, GOALL, IPI, MAP, OMIM, ONTOLOGY, ONTOLOGYALL, PATH, PFAM, PMID, PROSITE, REFSEQ, SYMBOL, UCSCKG, UNIPROT.","code":"\nbitr_EnsToSymb <- bitr(geneID = rownames(expression_data_filtered),\n                       fromType = \"ENSEMBL\",\n                       toType = \"SYMBOL\",\n                       OrgDb = org.Hs.eg.db)\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#> Warning in bitr(geneID =\n#> rownames(expression_data_filtered), fromType = \"ENSEMBL\", :\n#> 3.73% of input gene IDs are fail to map..."},{"path":"gsea-preranking.html","id":"ii-concatenate-the-initial-gene-expression-data-set-with-the-mapping-from-initial-ensembl-to-required-hgnc-symbols","chapter":"3 GSEA Preranking","heading":"3.2.0.2 (ii) Concatenate the initial gene expression data set with the mapping from initial (Ensembl) to required HGNC symbols","text":"Merge row names expression data set ENSEMBL ID gene ID mapping.Description function arguments:.x .y specify columns expression_data_filterByExpr bitr_EnsToEntr concatenated:.x .y specify columns expression_data_filterByExpr bitr_EnsToEntr concatenated:.x = 0: use row names expression_data_filterByExpr (row names contain gene IDs).x = 0: use row names expression_data_filterByExpr (row names contain gene IDs).y = “ENSEMBL”: use column contains Ensembl gene IDsby.y = “ENSEMBL”: use column contains Ensembl gene IDsAs can see document “Instructions_GeneID_Conversion_DuplicatesRemoval.R”, work three separate ways remove duplicate gene IDs result \ngene ID conversion. apply three approaches removal.","code":"\nexpression_data_merged <- merge(x = expression_data_filtered,\n                                             y = bitr_EnsToSymb,\n                                             by.x = 0, \n                                             by.y = \"ENSEMBL\",\n                                             sort=TRUE)"},{"path":"gsea-preranking.html","id":"step-2-remove-the-duplicated-gene-ids","chapter":"3 GSEA Preranking","heading":"3.3 Step 2: Remove the duplicated gene IDs","text":"","code":""},{"path":"gsea-preranking.html","id":"i-take-a-closer-look-at-the-duplicates","chapter":"3 GSEA Preranking","heading":"3.3.1 (i) Take a closer look at the duplicates","text":"","code":""},{"path":"gsea-preranking.html","id":"case-1-single-ensembl-ids-are-mapped-to-multiple-hgnc-symbols","chapter":"3 GSEA Preranking","heading":"3.3.1.1 Case 1: single ENSEMBL IDs are mapped to multiple HGNC symbols","text":"case, denote corresponding ENSEMBL IDs duplicated IDsIn following, can inspect conversion pattern Ensembl ID mapped multiple distinct HGNC symbols:can see perfectly Ensembl ID mapped multiple individual HGNC symbols.","code":"\n# obtain number of cases in which an ENSEMBL gene ID was converted to several HGNC symbols, i.e. the number of\n# times an Ensembl ID appears more than once in the mapping\nsum(duplicated(bitr_EnsToSymb$ENSEMBL))\n#> [1] 28\n# determine all duplicated ENSEMBL gene IDS (i.e. all ENSEMBL gene IDs that were mapped to multiple distinct HGNC gene symbols):\ndupl_ensembl<-unique(bitr_EnsToSymb$ENSEMBL[duplicated(bitr_EnsToSymb$ENSEMBL)])\n# number of ENSEMBL IDs that have at least one duplicate\nlength(dupl_ensembl)\n#> [1] 27\n# get subset conversion pattern of all duplicated Ensembl IDs \nduplicated_conversion_ens<-bitr_EnsToSymb[bitr_EnsToSymb$ENSEMBL %in% dupl_ensembl,]\n# take a look at conversion pattern for some of the duplicated Ensembl gene IDs:\nhead(duplicated_conversion_ens, n = 6)\n#>              ENSEMBL          SYMBOL\n#> 303  ENSG00000063587          ZNF275\n#> 304  ENSG00000063587    LOC105373378\n#> 615  ENSG00000088298           EDEM2\n#> 616  ENSG00000088298 MMP24-AS1-EDEM2\n#> 1521 ENSG00000111215            PRH1\n#> 1522 ENSG00000111215            PRR4"},{"path":"gsea-preranking.html","id":"case-2-multiple-ensembl-ids-are-mapped-to-the-same-hgnc-symbol","chapter":"3 GSEA Preranking","heading":"3.3.1.2 CASE 2: multiple ENSEMBL IDs are mapped to the same HGNC symbol","text":"case, denote corresponding HGNC symbols duplicated IDs.Obtain number cases multiple distinct Ensembl IDs converted HGNC gene symbolIn following, want take look conversion pattern duplicated HGNC symbols.","code":"\n# in these cases, the corresponding HGNC symbols appear repeatedly in the mapping:\nsum(duplicated(bitr_EnsToSymb$SYMBOL))\n#> [1] 2\n# determine all HGNC gene symbols affected by this duplication\ndupl_symbol<-unique(bitr_EnsToSymb$SYMBOL[duplicated(bitr_EnsToSymb$SYMBOL)])\n# number of HGNC symbols that have at least one duplicate\nlength(dupl_symbol)\n#> [1] 2\n# subset the conversion pattern to that of the duplicated HGNC symbols\nduplicated_conversion<-bitr_EnsToSymb[bitr_EnsToSymb$SYMBOL %in% dupl_symbol,]\n\n# for visibility: order the conversion pattern by the HGNC symbols\nduplicated_conversion <- duplicated_conversion[order(duplicated_conversion$SYMBOL),]\n\n# take a look at conversion pattern of the first few duplicated HGNC symbols:\nhead(duplicated_conversion, n = 6 )\n#>              ENSEMBL SYMBOL\n#> 2940 ENSG00000140543   DET1\n#> 4664 ENSG00000173867   DET1\n#> 250  ENSG00000054277   OPN3\n#> 5869 ENSG00000203668   OPN3"},{"path":"gsea-preranking.html","id":"ii-remove-the-duplicated-gene-ids","chapter":"3 GSEA Preranking","heading":"3.3.2 (ii) Remove the duplicated gene IDs","text":"subsequent analysis (whether differential expression analysis gene set analysis), need deal duplicated gene IDs remove suitable way one unique gene expression measurement among duplicates remains. recommended way proceed, .e. common approach presented official scientific puplication, instead several approaches suggested users corresponding user platforms, generally, manner duplicate gene ID removal performed discretion user. therefore present three approaches duplicate gene ID removal.","code":""},{"path":"gsea-preranking.html","id":"option-1-keep-the-duplicate-with-the-lowest-subscript","chapter":"3 GSEA Preranking","heading":"3.3.2.1 Option 1: Keep the duplicate with the lowest subscript","text":"simplest approach among three.now want inspect small part gene expression data set:","code":"\n#1. remove duplicated HGNC gene symbols\nexprdat_symbol_dupl1<-expression_data_merged[!duplicated(expression_data_merged$SYMBOL),]\n\n\n#2. remove duplicated ENSEMBL gene IDs\nexprdat_symbol_dupl1<-exprdat_symbol_dupl1[!duplicated(exprdat_symbol_dupl1$Row.names),]\ndim(exprdat_symbol_dupl1)\n#> [1] 6012   71\n\n#3. set HGNC gene symbols as rownames\nrownames(exprdat_symbol_dupl1)<-exprdat_symbol_dupl1$SYMBOL\n#Remove columns containing ENSEMBL and HGNC symbols\nexprdat_symbol_dupl1<-subset(exprdat_symbol_dupl1, select=-c(Row.names,SYMBOL))\ndim(exprdat_symbol_dupl1)\n#> [1] 6012   69\n# we particularly see that the number of columns is now at its initial number\nexprdat_symbol_dupl1[1:10, 1:10]\n#>          NA18486 NA18498 NA18499 NA18501 NA18502 NA18504\n#> DPM1          22     105      40      55      67      37\n#> SCYL3         22     100     107      53      72      38\n#> C1orf112       5      23      10      18      15       8\n#> FGR           36      70      41      33      59      29\n#> FUCA2         29      79      33      31      29      21\n#> NFYA         301     351     344     176     340     170\n#> LAS1L         32      22       4       8      15       5\n#> ENPP4         52     419     173     137     127      72\n#> BAD           48      81      65      19      59      57\n#> HS3ST1         8      15       8      18       4      27\n#>          NA18505 NA18507 NA18508 NA18510\n#> DPM1          88     127      70      43\n#> SCYL3         98      69      66      43\n#> C1orf112      11      16      18       7\n#> FGR           22      71      12      43\n#> FUCA2         42      62      41      25\n#> NFYA         238     247     226     227\n#> LAS1L         15      16      19      15\n#> ENPP4        267     247     154      81\n#> BAD           44      79      71      79\n#> HS3ST1         3      11       5       3"},{"path":"gsea-preranking.html","id":"option-2-keep-the-rounded-mean-expression-value-of-all-duplicated-gene-ids","chapter":"3 GSEA Preranking","heading":"3.3.2.2 Option 2: Keep the (rounded) mean expression value of all duplicated gene IDs","text":", remove duplicated HGNC gene symbols (case 2) removing duplicated Ensembl gene IDs (case 1). reason elaborated .","code":""},{"path":"gsea-preranking.html","id":"i-remove-the-duplicated-hgnc-gene-symbols-case-2","chapter":"3 GSEA Preranking","heading":"3.3.2.2.1 (i) Remove the duplicated HGNC gene symbols (case 2)","text":"","code":"\n#generate matrix to contain (rounded) mean expression values of all rows that have same HGNC gene symbol\n#ncol=ncol(expression_data_filterByExpr)-2 since data set contains 2 columns with IDs at this point\nmean_symbol <- matrix(nrow=0, ncol=ncol(expression_data_merged)-2)\n\n\n# for each duplicated HGNC gene symbol separately, we gather all rows with the corresponding gene expression data and then extract the (rounded) mean expression value of all rows\nfor(i in 1:length(dupl_symbol)){\n\n# go through each HGNC symbols which occurs multiple times\n# determine all rows whose HGNC symbols correspond to currently considered HGNC symbol\ncounts_dupl <- expression_data_merged[expression_data_merged$SYMBOL %in% unique(dupl_symbol)[i],]\n\n#compute the mean expression value of all rows that contain to the given HGNC gene symbol\ndupl_id <- round(colMeans(counts_dupl[,c(2:(ncol(expression_data_merged)-1))]))\n\n# store rounded mean expression value in matrix\n# this matrix is extended by a single row of gene expression data which corresponds to the (rounded) mean expression data that corresponds to the given HGNC gene symbol\nmean_symbol <- rbind(mean_symbol,dupl_id)\n\n\n}\n\n# after completing the for-loop, mean_symbol contains the mean expression measurements of each HGNC gene symbol which contains duplicates resulting from gene ID conversion\n# We want to take a look at a part of the data set \nmean_symbol[, 1:9]\n#>         NA18486 NA18498 NA18499 NA18501 NA18502 NA18504\n#> dupl_id      37     129      64      54      70      54\n#> dupl_id      50     182      82     118      60      52\n#>         NA18505 NA18507 NA18508\n#> dupl_id      62     123      70\n#> dupl_id     102      80      78\n\n#set corresponding HGNC gene symbols as rownames\nrownames(mean_symbol) <- unique(dupl_symbol)\n\n\n# test whether the number of rows in mean_symbol corresponds to the number HGNC symbols\n# that occur more than once\n# result should be TRUE\nnrow(mean_symbol) == length(dupl_symbol)\n#> [1] TRUE\n\n# remove all rows from the expression data whose HGNC symbol has at least one duplicate\n# intuition: we have just dealt with the corresponding rows and do not want them to be considered in the second step (which deals with case 2\n\nexprdat_symbol_dupl2 <- expression_data_merged[!expression_data_merged$SYMBOL %in% dupl_symbol,]\n\n# test whether number of rows in resulting data set equals nrow of inital data set minus number of genes with at least one duplicate\nnrow(exprdat_symbol_dupl2) == nrow(expression_data_merged)-nrow(duplicated_conversion)\n#> [1] TRUE\ndim(exprdat_symbol_dupl2)\n#> [1] 6037   71"},{"path":"gsea-preranking.html","id":"ii-remove-the-duplicated-ensembl-ids","chapter":"3 GSEA Preranking","heading":"3.3.2.2.2 (ii) Remove the duplicated ENSEMBL IDs","text":"Caution: Single ENSEMBL IDs mapped multiple HGNC symbol naturally generate identical count data corresponding HGNC symbols. therefore pointless compute mean expression values. verifiable looking data set containing ENSEMBL IDs mapped multiple HGNC symbols:see rows originate Ensembl ID contain identical count data.therefore proceed option 1 use HGNC symbol occurs first remove rest.","code":"\ntest_dupl_ensembl <- exprdat_symbol_dupl2[exprdat_symbol_dupl2$Row.names %in% dupl_ensembl,]\n\n# take a look at a few entries of the data set:\ntest_dupl_ensembl[1:6, 1:6]\n#>            Row.names NA18486 NA18498 NA18499 NA18501\n#> 299  ENSG00000063587     143     116     244      76\n#> 300  ENSG00000063587     143     116     244      76\n#> 610  ENSG00000088298     202     384     368     207\n#> 611  ENSG00000088298     202     384     368     207\n#> 1502 ENSG00000111215      17      12       9       2\n#> 1503 ENSG00000111215      17      12       9       2\n#>      NA18502\n#> 299      157\n#> 300      157\n#> 610      397\n#> 611      397\n#> 1502       8\n#> 1503       8\n# Keep HGNC symbol that occurs first\nexprdat_symbol_dupl2<-exprdat_symbol_dupl2[!duplicated(exprdat_symbol_dupl2$Row.names),]\n\n# inspect dimension\ndim(exprdat_symbol_dupl2)\n#> [1] 6010   71\n\n#set HGNC symbol as rownames\nrownames(exprdat_symbol_dupl2)<-exprdat_symbol_dupl2$SYMBOL\n\n#remove any columns containing IDs\nexprdat_symbol_dupl2<-subset(exprdat_symbol_dupl2,select= -c(Row.names,SYMBOL))\n\n#add those rows to data set that contain mean expression values of duplicate HGNC symbols\nexprdat_symbol_dupl2 <- rbind(exprdat_symbol_dupl2,mean_symbol)\n\n#inspect the dimension of the remaining gene expression data set\ndim(exprdat_symbol_dupl2)\n#> [1] 6012   69"},{"path":"gsea-preranking.html","id":"option-3-among-the-duplicates-keep-row-with-highest-overall-expression-values-i.e-highest-counts-across-all-samples","chapter":"3 GSEA Preranking","heading":"3.3.2.3 Option 3: Among the duplicates, keep row with highest overall expression values (i.e highest counts across all samples)","text":"intuituin behind approach row highest counts values highest power detected differentially expressed. option 2, applies duplicates result multiple ENSEMBL IDs mapped HGNC symbol.","code":""},{"path":"gsea-preranking.html","id":"i-remove-duplicated-hgnc-symbols","chapter":"3 GSEA Preranking","heading":"3.3.2.3.1 (i) Remove duplicated HGNC symbols","text":"","code":"\n# generate matrix to later contain row with highest count values among ID duplicates this data set is to be filled gradually and with each iteration of the follwing for-loop\nhighest_count_symbol<-matrix(, nrow=0, ncol=ncol(expression_data_filterByExpr))\n\n\n# for each duplicated HGNC gene symbol separately, we gather all rows with the corresponding gene expression data and then extract the row with the highest overall magnitude of counts\n\nfor(i in 1:length(dupl_symbol)){\n\n  # go through each HGNC symbols which occurs multiple times\n  # determine all rows whose HGNC symbols correspond to currently considered HGNC symbol\n  counts_dupl<-expression_data_merged[expression_data_merged$SYMBOL %in% unique(dupl_symbol)[i],]\n\n  # order rows in decreasing manner by their number of read counts across all samples\n  order_rowsums<-order(rowSums(counts_dupl[,2:(ncol(counts_dupl)-1)]),decreasing=TRUE)\n  \n  #detect row with highest number of read counts across all samples (i.e. row with rank 1)\n  dupl_id<-counts_dupl[order_rowsums==1,]\n  \n  #store corresponding expression\n  highest_count_symbol<-rbind(highest_count_symbol,dupl_id)\n  \n}\n\n\n#Remove all initial values with HGNC  duplicates from the dataset initial gene expression data set\nexprdat_symbol_dupl3<-expression_data_merged[! expression_data_merged$SYMBOL %in% unique(dupl_symbol),]"},{"path":"gsea-preranking.html","id":"case-2-remove-duplicated-ensembl-ids","chapter":"3 GSEA Preranking","heading":"3.3.2.3.2 Case 2: Remove duplicated ENSEMBL IDs","text":"option 2, pointless detect row highest count values rows\ncorrespond ENSEMBL ID rows naturally contain identical count data. therefore remove duplicate ENSEMBL ID occurs first (option 1).","code":"\n# Keep the corresponding ENSEMBL ID that occurs first\nexprdat_symbol_dupl3<-exprdat_symbol_dupl3[!duplicated(exprdat_symbol_dupl3$Row.names),]\n\n# Add the gene expression rows of all HGNC gene symbols that were initially duplicated\nexprdat_symbol_dupl3<-rbind(exprdat_symbol_dupl3,highest_count_symbol )\n\n#Set HGNC symbols as rownames\nrownames(exprdat_symbol_dupl3)<-exprdat_symbol_dupl3$SYMBOL\n#Remove any column that contains information on gene IDs\nexprdat_symbol_dupl3<-subset(exprdat_symbol_dupl3, select=-c(Row.names,SYMBOL))\n\n# Inspect the dimension of the resulting gene expression data set \ndim(exprdat_symbol_dupl3)\n#> [1] 6012   69\n# we see that the sample size (number of columns) is now back at its initial number"},{"path":"gsea-preranking.html","id":"intermediate-step-choose-which-converted-gene-expression-data-sets-to-proceed-with","chapter":"3 GSEA Preranking","heading":"3.4 Intermediate step: Choose which converted gene expression data sets to proceed with","text":"illustration, proceed one three gene expression data sets result conversion gene IDs removal duplications. , proceed first approach \nremoval duplicated gene IDs. However, can easily switch another approach discretion.proceed gene expression data set stored object “expression_data_filt_symbol”.","code":"\nexpression_data_filt_symbol <- exprdat_symbol_dupl1"},{"path":"gsea-preranking.html","id":"step-3-differential-expression-analysis","chapter":"3 GSEA Preranking","heading":"3.5 Step 3: Differential expression analysis","text":"corresponding results table differential expression analysis, later transform certain metrics (.e. columns) gene-level statistic gene based gene ranking generated.proceed analogously script “Instructions_Differential_Expression_Analysis”, perform differential expression analysis using three established methods, namelyvoom/limmaDESeq2edgeRWhile already count data hand working , additionally need conditions samples. Since work Pickrell data set illustrations, load corresponding data.","code":"\n# Load pickrell data \ndata(pickrell)\n\n# Store the sample conditions in the object sample_conditions \nsample_conditions <- pickrell.eset$gender"},{"path":"gsea-preranking.html","id":"option-1-differential-expression-analysis-using-limma","chapter":"3 GSEA Preranking","heading":"3.5.1 Option 1: Differential expression analysis using limma","text":"Note code illustrations based following user manual:  https://bioconductor.org/packages/devel/bioc/vignettes/limma/inst/doc/usersguide.pdf","code":""},{"path":"gsea-preranking.html","id":"i-generate-the-required-input-object-for-limma","chapter":"3 GSEA Preranking","heading":"3.5.1.1 (i) Generate the required input object for limma","text":"described “Instructions_Differential_Expression_Analysis”, gene expression data set expression_data_filt_symbol currently data frame needs converted DGEList object.Required function arguments:counts: matrix contains RNA-Seq data (.e. count data)Optional function arguments:group: indicates condition sample/library\nargument must specified sooner later (subsequent functions) just specify point.\nargument must specified sooner later (subsequent functions) just specify point.Note leave remaining arguments default state since corresponding info added following pipeline functions.","code":"\n# store expression data with corresponding sample conditions in object of class DGEList\ny <- DGEList(counts = expression_data_filt_symbol,\n             group = sample_conditions)"},{"path":"gsea-preranking.html","id":"ii-normalization","chapter":"3 GSEA Preranking","heading":"3.5.1.2 (ii) Normalization","text":"following piece code generates normalization factor sample. accounts sample-specific effects (differences library sizes effects compositionality). accounted , effects prevent comparison samples.Note function transform count data, rather generates normalization factor sample incorporated subsequent analysis separately.","code":"\ny <- calcNormFactors(y)"},{"path":"gsea-preranking.html","id":"iii-voom-transformation","chapter":"3 GSEA Preranking","heading":"3.5.1.3 (iii) voom transformation","text":"Note voom transformation facilitates use subsequent functions initially developed microarray data.","code":"\n# design matrix (rows correspond to samples, columns indicate which coefficients are to be estimated)\ndesign_matrix <- model.matrix(~sample_conditions)\n\n# voom transformation (transformation of count data to log-cpm values, computation of observation weight for each\n# gene based on mean-variance relationship)\ny <- voom(y, design = design_matrix)"},{"path":"gsea-preranking.html","id":"iv-differential-expression-analysis","chapter":"3 GSEA Preranking","heading":"3.5.1.4 (iv) Differential expression analysis","text":"","code":"\n# Fit a linear model for each gene\ny <- lmFit(y)\n\n# Calculate the statistics for the assessment of differential expression\ny <- eBayes(y)\n\n# Get the results table for each gene whose differential expression was assessed\nDE_results_limma <- topTable(y, number =  nrow(y))\n#> Removing intercept from test coefficients\n# Note that number = nrow(y) ensures that all genes are displayed in results, not just a subset"},{"path":"gsea-preranking.html","id":"v-rename-columns-in-results-table","chapter":"3 GSEA Preranking","heading":"3.5.1.5 (v) Rename columns in results table","text":"step required differential expression analysis subsequent use gene set analysis GENERAL.renaming columns (adjusted p-value) necessary context illustrations since different methods differential expression analysis typically differ column names results tables. unification column names required can use code illustrate conduct GSA subsequent code.Inspect first 10 genes results table:","code":"\n# First, we transform to results table to a data frame so that we see the results table directly when accessing it through the name \"res\"\nDE_results_limma <- as.data.frame(DE_results_limma)\n\n# Rename the column that contains the adjusted p-values: rename padj to p_adj\nDE_results_limma <- dplyr::rename(DE_results_limma, p_adj = `adj.P.Val`)\nhead(DE_results_limma, n = 10)\n#>              logFC   AveExpr         t      P.Value\n#> RPS4Y1   9.2108222 1.9863775 47.179852 1.030921e-55\n#> TMSB4Y   5.0808942 0.5129662 26.670268 6.040369e-39\n#> PNPLA4  -0.9237796 5.3334920 -8.775861 5.661613e-13\n#> PUDP    -0.8541771 2.1627703 -4.413691 3.518147e-05\n#> CXorf38 -0.5505387 3.7163801 -4.249159 6.357396e-05\n#> TXLNG   -0.4040253 5.1161343 -4.042236 1.316055e-04\n#> G0S2    -1.4699085 5.1923255 -3.854451 2.504228e-04\n#> JUN     -0.5877351 8.2731730 -3.918457 2.014918e-04\n#> APAF1    0.4049046 5.9682315  3.825437 2.761789e-04\n#> IL1A    -1.4852480 3.5436708 -3.665932 4.695371e-04\n#>                p_adj           B\n#> RPS4Y1  6.197899e-52 84.19116319\n#> TMSB4Y  1.815735e-35 62.68059267\n#> PNPLA4  1.134587e-09 19.20851972\n#> PUDP    5.287775e-02  2.14585449\n#> CXorf38 7.644132e-02  1.55146299\n#> TXLNG   1.318687e-01  0.73174212\n#> G0S2    1.844875e-01  0.15225728\n#> JUN     1.730527e-01  0.11384668\n#> APAF1   1.844875e-01 -0.06540026\n#> IL1A    2.645036e-01 -0.24633830"},{"path":"gsea-preranking.html","id":"option-2-differential-expression-analysis-using-deseq2","chapter":"3 GSEA Preranking","heading":"3.5.2 Option 2: Differential expression analysis using DESeq2","text":"official DESeq2 vignette can found following link:http://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html","code":""},{"path":"gsea-preranking.html","id":"i-generate-the-required-input-object-for-deseq2","chapter":"3 GSEA Preranking","heading":"3.5.2.1 (i) Generate the required input object for DESeq2","text":"DESeq2 operates format DESeqDataSet contains information count data, conditions samples design (information see ). Note gene expression data sets must imported R, additional steps necessary following code can run.","code":""},{"path":"gsea-preranking.html","id":"generate-a-data-frame-which-contains-the-condition-of-each-sample","chapter":"3 GSEA Preranking","heading":"3.5.2.1.1 Generate a data frame which contains the condition of each sample","text":", information sample conditions column data frame. However, variables (batch effects) controlled , corresponding variables must additionally added coldata.","code":"\n# Here, the information on the sample conditions is the only column in the data frame\n# However, if further variables (such as batch effects) are to be controlled for, the corresponding variables must additionally be added to coldata\n\n# The names of the samples are stored as the row names of the data frame\n# Important: make sure that the order of the conditions in sample_conditions corresponds to the order of the\n# samples in expression_data\ncoldata <- data.frame(sample_conditions,\n                      row.names = colnames(expression_data_filt_symbol))\n\n# Rename the column header to \"condition\"\ncolnames(coldata) <- \"condition\"\n\n# Recode the variable \"condition\" as a factor\n# Rename the sample conditions (in this case from \"female\" and \"male\") to \"untreated\" and \"treated\"\n# Note: make sure that the control level in variable condition is coded as the first level (i.e. \"untreated\")\ncoldata$condition <- factor(coldata$condition,\n                            labels = c(\"untreated\",\"treated\"))"},{"path":"gsea-preranking.html","id":"generate-the-deseqdataset","chapter":"3 GSEA Preranking","heading":"3.5.2.1.2 Generate the DESeqDataSet","text":"Relevant function arguments:countData: count data gene expression data setcountData: count data gene expression data setcolData: data frame contains information samples (see )\nconditions samples (required) possibly variables correct (batch effects)\ncolData: data frame contains information samples (see )conditions samples (required) possibly variables correct (batch effects)design: indicates variables colData used modelling\ndetailed: argument design used estimate dispersions log2 fold changes model\none variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: design ~ batch + condition\nmake sure variable interest (: variable represents conditions samples) placed end formula\ndesign: indicates variables colData used modellingmore detailed: argument design used estimate dispersions log2 fold changes modelif one variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: design ~ batch + conditionmake sure variable interest (: variable represents conditions samples) placed end formula","code":"\ndds <- DESeqDataSetFromMatrix(countData = expression_data_filt_symbol,\n                            colData = coldata,\n                            design = ~ condition)"},{"path":"gsea-preranking.html","id":"ii-differential-expression-analysis","chapter":"3 GSEA Preranking","heading":"3.5.2.2 (ii) Differential expression analysis","text":"Description functions:DESeq(): Estimation normalization factors, estimation dispersions, fitting generalized linear model, Wald statisticsDESeq(): Estimation normalization factors, estimation dispersions, fitting generalized linear model, Wald statisticsresults(): Provides base mean across samples, estimated log2 fold changes, standard errors, test statistics, p-values, adjusted p-valuesresults(): Provides base mean across samples, estimated log2 fold changes, standard errors, test statistics, p-values, adjusted p-values","code":"\n# 1. Perform default differential expression analysis\ndds <- DESeq(dds)\n# 2. Generate results table which provides\nDE_results_DESeq2 <- results(dds)"},{"path":"gsea-preranking.html","id":"iii-rename-columns-in-results-table","chapter":"3 GSEA Preranking","heading":"3.5.2.3 (iii) Rename columns in results table","text":"step required differential expression analysis subsequent use gene set analysis GENERAL.renaming columns (adjusted p-value) necessary context illustrations since different methods differential expression analysis typically differ column names results tables. unification column names required can use code illustrate conduct GSA subsequent code.Inspect first 10 genes results table:","code":"\n# First, we transform to results table to a data frame so that we see the results table directly when accessing it through the name \"res\"\nDE_results_DESeq2 <- as.data.frame(DE_results_DESeq2)\n\n# Rename the column that contains the adjusted p-values: rename padj to p_adj\nDE_results_DESeq2 <- dplyr::rename(DE_results_DESeq2, p_adj = \"padj\")\nhead(DE_results_DESeq2, n = 10)\n#>           baseMean log2FoldChange      lfcSE        stat\n#> DPM1      62.75469    0.039750916 0.11391821  0.34894259\n#> SCYL3     70.48070    0.029018887 0.11169067  0.25981478\n#> C1orf112  13.00584    0.165462332 0.15395569  1.07473997\n#> FGR       43.59294    0.114160979 0.19557799  0.58371076\n#> FUCA2     37.97983   -0.006418336 0.10904211 -0.05886108\n#> NFYA     228.55761    0.051517676 0.09634003  0.53474838\n#> LAS1L     11.53808    0.025279778 0.18769732  0.13468375\n#> ENPP4    175.90798    0.300378628 0.16292558  1.84365538\n#> BAD       66.39161   -0.264365320 0.10275897 -2.57267378\n#> HS3ST1    10.12732   -0.199017932 0.31888446 -0.62410671\n#>              pvalue     p_adj\n#> DPM1     0.72713241 0.9221794\n#> SCYL3    0.79500665 0.9425284\n#> C1orf112 0.28249116 0.7202446\n#> FGR      0.55941492 0.8668048\n#> FUCA2    0.95306276 0.9863983\n#> NFYA     0.59282386 0.8789008\n#> LAS1L    0.89286192 0.9709726\n#> ENPP4    0.06523338 0.4823900\n#> BAD      0.01009163 0.3001405\n#> HS3ST1   0.53255751 0.8522562"},{"path":"gsea-preranking.html","id":"option-3-differential-expression-analysis-using-edger","chapter":"3 GSEA Preranking","heading":"3.5.3 Option 3: Differential expression analysis using edgeR","text":"instructions edgeR based following vignette:  https://www.bioconductor.org/packages/release/bioc/vignettes/edgeR/inst/doc/edgeRUsersGuide.pdf","code":""},{"path":"gsea-preranking.html","id":"i-generate-the-required-input-object-for-edger","chapter":"3 GSEA Preranking","heading":"3.5.3.1 (i) Generate the required input object for edgeR","text":"Store expression data corresponding sample conditions object class DGEListRequired function arguments:counts: matrix contains RNA-Seq data (.e. count data)Optional function arguments:group: indicates condition sample/library\nargument must specified sooner later (subsequent functions) just specify point\nargument must specified sooner later (subsequent functions) just specify pointNote leave remaining arguments default state since corresponding info added subsequent pipeline functions.","code":"\ny <- DGEList(counts = expression_data_filt_symbol,\n             group = sample_conditions)"},{"path":"gsea-preranking.html","id":"ii-normalization-1","chapter":"3 GSEA Preranking","heading":"3.5.3.2 (ii) Normalization","text":"following piece code generates normalization factor sample. accounts sample-specific effects (differences library sizes effects compositionality). accounted , effects prevent comparison samplesNote: function transform count data, rather generates normalization factor sample incorporated subsequent analysis separately.","code":"\ny <- calcNormFactors(y)"},{"path":"gsea-preranking.html","id":"iii-estimation-of-the-dispersion","chapter":"3 GSEA Preranking","heading":"3.5.3.3 (iii) Estimation of the dispersion","text":"Estimate common tagwise dispersion quantify variation true abundance given gene different samples required assess differential expression realistically.","code":"\ny <- estimateDisp(y)\n#> Using classic mode."},{"path":"gsea-preranking.html","id":"iv-differential-expression-analysis-1","chapter":"3 GSEA Preranking","heading":"3.5.3.4 (iv) Differential expression analysis","text":"","code":"\n# Test each gene for differential expression:\nDE_results_edgeR <- exactTest(y)\n\n# Extract pre-specified number (n) of genes\nDE_results_edgeR <- topTags(DE_results_edgeR, n = nrow(DE_results_edgeR))\n\n# Note: argument n specifies the number of top differentially expressed genes to be displayed in the results\n# n = nrow(DE_results) ensures the results of all genes whose differential expression was assessed are displayed"},{"path":"gsea-preranking.html","id":"v-rename-columns-in-results-table-1","chapter":"3 GSEA Preranking","heading":"3.5.3.5 (v) Rename columns in results table","text":"step required differential expression analysis subsequent use gene set analysis GENERAL.renaming columns (adjusted p-value) necessary context illustrations since different methods differential expression analysis typically differ column names results tables. unification column names required can use code illustrate conduct GSA subsequent code.Inspect first 10 genes results table:Note one gene adjusted p-value 0. deal issue generating gene ranking edgeR.","code":"\n# first, we transform to results table to a data frame so that we see the results\n# table directly when accessing it through the name \"res\"\nDE_results_edgeR <- as.data.frame(DE_results_edgeR)\n\n# rename column that contains adjusted p-values: rename padj to p_adj\nDE_results_edgeR <- dplyr::rename(DE_results_edgeR, p_adj = \"FDR\")\nhead(DE_results_edgeR, n = 10)\n#>              logFC   logCPM        PValue         p_adj\n#> RPS4Y1  10.1333123 6.155249  0.000000e+00  0.000000e+00\n#> TMSB4Y   5.5794301 2.519825 6.410059e-121 1.926864e-117\n#> PNPLA4  -0.9445304 5.485374  1.886604e-17  3.780754e-14\n#> PUDP    -0.7765765 2.571056  3.068012e-06  4.611222e-03\n#> SNAI1   -1.6458976 3.288273  4.706338e-06  5.476681e-03\n#> GADD45G -1.5869489 2.679748  5.465750e-06  5.476681e-03\n#> THEM5   -1.1254688 2.303001  1.950080e-05  1.674840e-02\n#> CTSW     1.5021901 3.365996  2.908369e-05  2.185640e-02\n#> TXLNG   -0.4250226 5.207714  3.574779e-05  2.284273e-02\n#> TCFL5   -0.6026382 5.756625  3.799523e-05  2.284273e-02"},{"path":"gsea-preranking.html","id":"step-4-generate-gene-ranking","chapter":"3 GSEA Preranking","heading":"3.6 Step 4: Generate gene ranking","text":"now apply gene-level statistic results table differential expression analysis generate gene ranking serve input GSEAPreranked.performed differential expression analysis \n- voom/limma\n- DESeq2\n- edgeR,\nalso generate three gene rankings, one three methods.formula gene-level ranking metric  \n$ -1 * log10(p-value) * sign(log fold change)$.\nNote p-value, refer non-adjusted p-value.","code":""},{"path":"gsea-preranking.html","id":"option-1-generate-gene-ranking-from-limmavoom-results","chapter":"3 GSEA Preranking","heading":"3.6.1 Option 1: Generate gene ranking from limma/voom results","text":"Inspect first 10 genes gene ranking","code":"\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_limma <- !is.na(DE_results_limma$P.Value)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA <- DE_results_limma[ind_nonNA_pvalue_limma, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_limma <- sign(DE_results_noNA$logFC)*(-1)*log10(DE_results_noNA$P.Value)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_limma) <- rownames(DE_results_noNA)\n\n# 4. sort the vector in descending order\nrankvec_limma <- sort(rankvec_limma, decreasing=TRUE)\nhead(rankvec_limma, n = 10)\n#>    RPS4Y1    TMSB4Y     APAF1      LPXN     TRAM2   VIPAS39 \n#> 54.986774 38.218937  3.558810  3.205103  3.168007  3.079378 \n#>    MAP3K1    SLC9A6      PHKB     HCFC2 \n#>  3.021735  2.928611  2.878186  2.820192"},{"path":"gsea-preranking.html","id":"option-2-generate-gene-ranking-from-deseq2-results","chapter":"3 GSEA Preranking","heading":"3.6.2 Option 2: Generate gene ranking from DESeq2 results","text":"","code":""},{"path":"gsea-preranking.html","id":"i-shrink-estimated-log-fold-change-values","chapter":"3 GSEA Preranking","heading":"3.6.2.0.1 (i) Shrink estimated log fold change values","text":"generating gene ranking DESeq2 results, need perform additional shrinkage specific DESeq2. intuition behind shrinkage log fold change values follows: mentioned paper, RNA-Seq data consists (rare form) count data inherently heteroscedastic, .e. variance count data depends mean count count data. observable ratios counts considerably noisier low magnitudes counts compared higher magnitudes, .e.log fold changes conditions higher overall magnitude counts lower, independent acual extent gene differentially expressed samples. DESeq2 addresses issue shrinking estimated log fold changes direction 0. magnitude shrinkage higher available information gene lower (may low magnitude counts, high dispersion degrees freedom.) detailed description provided DESeq2 paper Love et al. (2014).shrinkage performed object dds, result function DESeq():Function arguments:type: method perform shrinkage\nopt default “apeglm” can choose two alternative options well\nopt default “apeglm” can choose two alternative options wellcoef: indicate coefficients shrunk\ncan obtain right argument following function call:\ncan obtain right argument following function call:shows us can either shrink intercept “condition_treated_vs_untreated”. Since want shrink intercept log fold changes, opt second option “condition_treated_vs_untreated”.Finish results table:Note estimated log fold change values (column log2FoldChange) smaller (absolute terms!) compared regular DESeq2 results, (adjusted non-adjusted) p-value remain unchanged.\nAlso performed shrinkage Instructions_Differential_Expression_Analysis , goal get list differentially expressed genes detected solely based adjusted p-value.","code":"\nif (!any(installed.packages() %in% \"apeglm\")) {\n  BiocManager::install(\"apeglm\", update = FALSE, ask = FALSE)\n}\nDE_results_DESeq2_shrink <- lfcShrink(dds,\n                                      coef = \"condition_treated_vs_untreated\",\n                                      type=\"apeglm\")\nresultsNames(dds)\n#> [1] \"Intercept\"                     \n#> [2] \"condition_treated_vs_untreated\"\n# transform results table to data frame\nDE_results_DESeq2_shrink <- as.data.frame(DE_results_DESeq2_shrink)\n\n# Inspect the first 10 genes from the results table: \nhead(DE_results_DESeq2_shrink, n = 10)\n#>           baseMean log2FoldChange      lfcSE     pvalue\n#> DPM1      62.75469    0.007239544 0.04886163 0.72713241\n#> SCYL3     70.48070    0.005442790 0.04843766 0.79500665\n#> C1orf112  13.00584    0.018952417 0.05474525 0.28249116\n#> FGR       43.59294    0.008111253 0.05228672 0.55941492\n#> FUCA2     37.97983   -0.001170671 0.04792965 0.95306276\n#> NFYA     228.55761    0.004565422 0.04684065 0.59282386\n#> LAS1L     11.53808    0.001892317 0.05136660 0.89286192\n#> ENPP4    175.90798    0.035048816 0.06668445 0.06523338\n#> BAD       66.39161   -0.153096248 0.13831883 0.01009163\n#> HS3ST1    10.12732   -0.005332940 0.05301329 0.53255751\n#>               padj\n#> DPM1     0.9221794\n#> SCYL3    0.9425284\n#> C1orf112 0.7202446\n#> FGR      0.8668048\n#> FUCA2    0.9863983\n#> NFYA     0.8789008\n#> LAS1L    0.9709726\n#> ENPP4    0.4823900\n#> BAD      0.3001405\n#> HS3ST1   0.8522562"},{"path":"gsea-preranking.html","id":"ii-generate-the-gene-ranking","chapter":"3 GSEA Preranking","heading":"3.6.2.0.2 (ii) Generate the gene ranking","text":"Inspect first 10 genes gene ranking","code":"\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue <- !is.na(DE_results_DESeq2_shrink$pvalue)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA <- DE_results_DESeq2_shrink[ind_nonNA_pvalue, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_DESeq2 <- sign(DE_results_noNA$log2FoldChange)*(-1)*log10(DE_results_noNA$pvalue)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_DESeq2) <- rownames(DE_results_noNA)\n\n# 4. sort the vector in descending order\nrankvec_DESeq2 <- sort(rankvec_DESeq2, decreasing=TRUE)\nhead(rankvec_DESeq2, n = 10)\n#>     RPS4Y1     TMSB4Y       CTSW      APAF1     SLC9A6 \n#> 204.389769  63.911362   4.463494   3.750030   3.568346 \n#>       LPXN      HCFC2     MAP3K1    VIPAS39      TRAM2 \n#>   3.559146   3.342299   3.281639   3.273736   3.174903"},{"path":"gsea-preranking.html","id":"option-3-generate-gene-ranking-from-edger-results","chapter":"3 GSEA Preranking","heading":"3.6.3 Option 3: Generate gene ranking from edgeR results","text":"Inspect first 10 genes gene rankingNote gene RPS4Y1 ranking value Inf (infinity). reason behind gene adjusted p-value 0 edgeR results differential expression analysis (already observed ). solve issue, however, common default approach. illustration purposes , replace value Inf second biggest ranking value ranking.","code":"\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e. \n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue <- !is.na(DE_results_edgeR$PValue)\n\n# subset gene expression data set to those genes with a p-value \nDE_results_noNA <- DE_results_edgeR[ind_nonNA_pvalue, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene \nrankvec_edgeR <- sign(DE_results_noNA$logFC)*(-1)*log10(DE_results_noNA$p_adj)\n\n# 3. assign respective gene ID to each value in the vector \nnames(rankvec_edgeR) <- rownames(DE_results_noNA)\n\n# 4. sort the vector in descending order \nrankvec_edgeR <- sort(rankvec_edgeR, decreasing = TRUE)\nhead(rankvec_edgeR, n = 10)\n#>      RPS4Y1      TMSB4Y        CTSW       APAF1        LPXN \n#>         Inf 116.7151490   1.6604215   1.0364270   1.0022766 \n#>      SLC9A6      MAP3K1       TRAM2        ATP8      MICAL2 \n#>   0.9838143   0.8656713   0.8517879   0.8455509   0.8230068\n# replace value Inf by second biggest value in the ranking \nrankvec_edgeR[rankvec_edgeR == Inf] <- max(rankvec_edgeR[rankvec_edgeR != Inf])\n\n# inspect ranking again\nhead(rankvec_edgeR, n = 10)\n#>      RPS4Y1      TMSB4Y        CTSW       APAF1        LPXN \n#> 116.7151490 116.7151490   1.6604215   1.0364270   1.0022766 \n#>      SLC9A6      MAP3K1       TRAM2        ATP8      MICAL2 \n#>   0.9838143   0.8656713   0.8517879   0.8455509   0.8230068"},{"path":"gsea-preranking.html","id":"step-5-export-gene-ranking-to-text-file","chapter":"3 GSEA Preranking","heading":"3.7 Step 5: Export gene ranking to text file","text":"purpose simplicity, export one gene rankings text file. , export ranking generated limma.Function arguments:x: object exported text filex: object exported text filefile: location (.e. folder file) object storedfile: location (.e. folder file) object storedquote = FALSE ensures none characters (case gene sample identifiers) surrounded double quotesquote = FALSE ensures none characters (case gene sample identifiers) surrounded double quotesrow.names = TRUE ensures gene IDs included exportrow.names = TRUE ensures gene IDs included exportcol.names = TRUE ensures gene information first row since web-based tool ignores whatever first rowcol.names = TRUE ensures gene information first row since web-based tool ignores whatever first row","code":"\n# this path indicates that we store the gene ranking as the text file \n# \"gene_ranking.txt\" in folder \"Input_Objects_GSEAPreranked\"\npath_conditions <- \"./data/Input_Objects_GSEAPreranked/gene_ranking.txt\"\n\nwrite.table(x = rankvec_limma,\n            file = path_conditions,\n            quote = FALSE,\n            row.names = TRUE,\n            col.names = TRUE)"},{"path":"gsea-preranking.html","id":"step-6-further-preparation-in-excel","chapter":"3 GSEA Preranking","heading":"3.8 Step 6: Further preparation in Excel","text":"step, follow instructions bottom following link:http://software.broadinstitute.org/cancer/software/gsea/wiki/index.php/Data_formatsThen, scroll section “RNK: Ranked list file format (*.rnk)“.","code":""},{"path":"gene-id-duplicate-removals.html","id":"gene-id-duplicate-removals","chapter":"4 Gene ID Duplicate Removals","heading":"4 Gene ID Duplicate Removals","text":"script, go process (1.) converting given gene IDs initial (Ensembl ID) format different (namely NCBI Entrez ID) format(2.) removing resulting duplicated gene IDsIn document, illustrate process one two pre-filtered gene expression data sets created file “Instructions_PreFiltering”:\n- expression_data_filterByExpr: gene expression data set pre-filtered using edgeR’s builtin function filterByExpr()corresponding R-Script “Instructions_GeneID_Conversion_DuplicatesRemoval.R”, additionally illustrate identical process gene expression data setexpression_data_filterDESeq2: gene expression data set pre-filtered using approach proposed DESeq2","code":""},{"path":"gene-id-duplicate-removals.html","id":"libraries-2","chapter":"4 Gene ID Duplicate Removals","heading":"4.0.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"org.Hs.eg.db\")"},{"path":"gene-id-duplicate-removals.html","id":"load-libraries-1","chapter":"4 Gene ID Duplicate Removals","heading":"4.0.1.1 Load libraries","text":"Description libraries:clusterProfiler: use clusterProfiler’s function gene ID conversion.clusterProfiler: use clusterProfiler’s function gene ID conversion.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (‘Overview_Packages’). Note library required running clusterProfiler’s function gene ID conversion.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (‘Overview_Packages’). Note library required running clusterProfiler’s function gene ID conversion.","code":"\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db)"},{"path":"gene-id-duplicate-removals.html","id":"load-pre-filtered-gene-expression-data-sets-generated-in-file-instructions_prefiltering-and-stored-in-file-results_prefiltering","chapter":"4 Gene ID Duplicate Removals","heading":"4.0.1.2 Load pre-filtered gene expression data sets generated in file “Instructions_PreFiltering” and stored in file “Results_PreFiltering”","text":"","code":"\nload(\"./data/Results_PreFiltering/expression_data_filterByExpr.Rdata\")\n# The alternative gene expression data set would be \n# load(\"./data/Results_PreFiltering/expression_data_filterDESeq2.Rdata\")"},{"path":"gene-id-duplicate-removals.html","id":"gene-id-conversion-for-expression_data_filterbyexpr","chapter":"4 Gene ID Duplicate Removals","heading":"4.1 Gene ID conversion for expression_data_filterByExpr","text":"","code":""},{"path":"gene-id-duplicate-removals.html","id":"step-1-obtain-mapping-from-ensembl-to-entrez-id-format","chapter":"4 Gene ID Duplicate Removals","heading":"4.1.1 step 1: Obtain mapping from Ensembl to Entrez ID format","text":"Observe warning message: gene IDs initial (Ensembl) ID format translated gene ID desired (Entrez) ID format.Description function: bitr() translates gene IDs format “fromType” format “toType”.Description arguments:gene IDs: gene IDs converted (stored rownames gene expression data set)fromType: initial gene ID format convertedtoType: gene ID format converted toOrgDb: annotation data base organisms gene expression measurements originate. corresponding argument must loaded library (see )Note arguments “fromType” “toType” must set one following, depending given \nrequired gene ID format:\nACCNUM, ALIAS, Ensembl, EnsemblPROT, EnsemblTRANS, ENTREZID, ENZYME, EVIDENCE,\nEVIDENCEALL, GENENAME, GENETYPE, GO, GOALL, IPI, MAP, OMIM, ONTOLOGY, ONTOLOGYALL, PATH, PFAM, PMID, PROSITE,\nREFSEQ, SYMBOL, UCSCKG, UNIPROT.","code":"\n# the rownames of the gene expression data set correspond to the gene IDs \nbitr_EnsToEntr <- bitr(gene = rownames(expression_data_filterByExpr), \n                         fromType = \"ENSEMBL\", \n                         toType = \"ENTREZID\", \n                         OrgDb = org.Hs.eg.db)\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#> Warning in bitr(gene =\n#> rownames(expression_data_filterByExpr), fromType =\n#> \"ENSEMBL\", : 3.73% of input gene IDs are fail to map..."},{"path":"gene-id-duplicate-removals.html","id":"inspect-object-bitr_enstoentr","chapter":"4 Gene ID Duplicate Removals","heading":"4.1.1.0.1 Inspect object bitr_EnsToEntr","text":"See bitr() results mapping initial (Ensembl ID) desired (Entrez ID) formatWe observe :\n- Ensembl gene IDs can mapped corresponding Entrez gene ID\n- individual Ensembl gene IDs mapped multiple distinct Entrez gene IDs\n- distinct Ensembl gene IDs mapped identical Entrez gene ID","code":"\nhead(bitr_EnsToEntr)\n#>           ENSEMBL ENTREZID\n#> 1 ENSG00000000419     8813\n#> 2 ENSG00000000457    57147\n#> 3 ENSG00000000460    55732\n#> 4 ENSG00000000938     2268\n#> 5 ENSG00000001036     2519\n#> 6 ENSG00000001167     4800"},{"path":"gene-id-duplicate-removals.html","id":"step-2-merge-mapping-with-initial-gene-expression-data-set","chapter":"4 Gene ID Duplicate Removals","heading":"4.1.2 step 2: Merge mapping with initial gene expression data set","text":"Concatenate initial gene expression data set mapping initial (Ensembl) required (Entrez) gene ID format. Merge row names expression data set Ensembl ID gene ID mappingDescription function arguments:.x .y specify columns expression_data_filterByExpr bitr_EnsToEntr concatenated:.x = 0: use row names expression_data_filterByExpr (row names contain gene IDs).y = “ENSEMBL”: use column contains Ensembl gene IDs","code":"\n\n  merged_expression_data_filterByExpr <- merge(x = expression_data_filterByExpr, \n                                               y = bitr_EnsToEntr, \n                                               by.x=0, \n                                               by.y=\"ENSEMBL\", \n                                               all.y=TRUE, sort=TRUE)\n  "},{"path":"gene-id-duplicate-removals.html","id":"take-a-look-at-the-dimension-of-resulting-data-set","chapter":"4 Gene ID Duplicate Removals","heading":"4.1.2.0.1 Take a look at the dimension of resulting data set:","text":"number genes merged_expression_data_filterByExpr decreased 6040\n-> directly caused circumstance typically, initial (Ensembl) gene IDs can converted required (Entrez) gene IDthe expression data set extended two columns:\n(1.) last column (called “ENTREZID” containing converted (Entrez) gene ID\n(2.) first column (called Row.names) initial (Ensembl) gene IDs originally stored row names","code":"\n\n  dim(merged_expression_data_filterByExpr)\n#> [1] 6041   71"},{"path":"gene-id-duplicate-removals.html","id":"step-3-take-a-closer-look-at-the-duplicated-gene-ids","chapter":"4 Gene ID Duplicate Removals","heading":"4.1.3 step 3: Take a closer look at the duplicated gene IDs","text":"","code":""},{"path":"gene-id-duplicate-removals.html","id":"case-1-a-single-ensembl-id-is-mapped-to-multiple-distinct-entrez-ids","chapter":"4 Gene ID Duplicate Removals","heading":"4.1.3.0.1 case 1: A single Ensembl ID is mapped to multiple distinct Entrez IDs","text":"mapping, obtain number cases Ensembl gene ID converted several ENTREZ IDs, .e. number times Ensembl ID appears mapping:Obtain list duplicated Ensembl IDs (.e. Ensembl IDs mapped multiple distinct Entrez gene IDs) inspect corresponding conversion pattern Entrez ID.","code":"\n sum(duplicated(bitr_EnsToEntr$ENSEMBL)) \n#> [1] 28\n# indicate which Ensembl IDs are duplicated \nind_duplicated <- duplicated(bitr_EnsToEntr$ENSEMBL)\n\n# filter the list of all Ensembl IDs to those that are mapped to multiple Entrez IDs \ndupl_ensembl<-unique(bitr_EnsToEntr$ENSEMBL[ind_duplicated])\n\n# take a look at some of the Ensembl IDs\nhead(dupl_ensembl, n = 5)\n#> [1] \"ENSG00000063587\" \"ENSG00000088298\" \"ENSG00000111215\"\n#> [4] \"ENSG00000111850\" \"ENSG00000137843\"\n\n\n# filter mapping to those Ensembl IDs that are mapped to multiple Entrez IDs \nduplicated_conversion_ens <- bitr_EnsToEntr[bitr_EnsToEntr$ENSEMBL %in% dupl_ensembl,]\n      \n\n# take a look at the mapping resulting in duplicated Ensembl IDs \nhead(duplicated_conversion_ens, n = 6)\n#>              ENSEMBL  ENTREZID\n#> 303  ENSG00000063587     10838\n#> 304  ENSG00000063587 105373378\n#> 615  ENSG00000088298     55741\n#> 616  ENSG00000088298 111089941\n#> 1521 ENSG00000111215      5554\n#> 1522 ENSG00000111215     11272"},{"path":"gene-id-duplicate-removals.html","id":"case-2-multiple-ensembl-ids-are-mapped-to-the-same-entrez-id","chapter":"4 Gene ID Duplicate Removals","heading":"4.1.3.0.2 case 2: Multiple Ensembl IDs are mapped to the same Entrez ID","text":"case, corresponding Entrez IDs appear repeatedly mapping.mapping, obtain number cases multiple Ensembl IDs mapped Entrez ID.Obtain list duplicated Entrez IDs, .e. Entrez IDs appear mapping, inspect corresponding conversion pattern.following, propose three ways remove duplicates.","code":"\nsum(duplicated(bitr_EnsToEntr$ENTREZ)) \n#> [1] 2\n# indicate which Entrez IDs appear more then once in the mapping: \nind_duplicated <- duplicated(bitr_EnsToEntr$ENTREZID)\n\n# filter the list of all Entrez IDs to the duplicated ones \ndupl_entrez<-unique(bitr_EnsToEntr$ENTREZID[ind_duplicated])\n\n\n# filter the mapping to those Entrez gene IDs appearing repeatedly\nduplicated_conversion_entrez<-bitr_EnsToEntr[bitr_EnsToEntr$ENTREZID %in% dupl_entrez,]\n\n# for illustration purposed: order by the column containing the Entrez gene IDs \nduplicated_conversion_entrez <- duplicated_conversion_entrez[order(duplicated_conversion_entrez$ENTREZID), ]\n\n\n# take a look at conversion pattern: \nhead(duplicated_conversion_entrez, n = 6 )\n#>              ENSEMBL ENTREZID\n#> 250  ENSG00000054277    23596\n#> 5869 ENSG00000203668    23596\n#> 2940 ENSG00000140543    55070\n#> 4664 ENSG00000173867    55070"},{"path":"gene-id-duplicate-removals.html","id":"step-4-remove-duplicated-gene-ids","chapter":"4 Gene ID Duplicate Removals","heading":"4.1.4 step 4: Remove duplicated gene IDs","text":"subsequent analysis (whether differential expression analysis gene set analysis), need deal duplicated gene IDs remove suitable way one unique gene expression measurement among duplicates remains. recommended way proceed, .e. common approach presented official scientific publications, instead several approaches suggested users corresponding user platforms. therefore introduce three approaches remove duplicated gene IDs.","code":""},{"path":"gene-id-duplicate-removals.html","id":"option-1-keep-the-first-subscript-among-the-duplicates-simplest-approach","chapter":"4 Gene ID Duplicate Removals","heading":"4.1.4.0.1 option 1: Keep the first subscript among the duplicates (simplest approach)","text":"Note function duplicated() indicates elements vector duplicates element smaller subscripts. Therefore, first corresponding element occurs considered subscript.Remove duplicated ENTREZ gene IDsRemove duplicated ENSEMBL gene IDs","code":"\n# indicate which Entrez IDs are duplicates of one with a smaller subscript \nind_duplicates <- duplicated(merged_expression_data_filterByExpr$ENTREZID)\n\n# filter the gene expression data set to those Entrez IDs that are NO duplicates\nexprdat_filterByExpr_dupl1 <- merged_expression_data_filterByExpr[!ind_duplicates,]\n# indicate which Ensembl IDs are duplicates of one with a smaller subscript\nind_duplicates <- duplicated(exprdat_filterByExpr_dupl1$Row.names)\n\n# filter the gene expression data set to those Ensembl IDs that are NO duplicates\nexprdat_filterByExpr_dupl1<-exprdat_filterByExpr_dupl1[!ind_duplicates,]\n\n#3. set Entrez gene IDs as rownames \nrownames(exprdat_filterByExpr_dupl1)<-exprdat_filterByExpr_dupl1$ENTREZID\n\n#Remove columns containing ENSEMBL and ENTREZ IDs\nexprdat_filterByExpr_dupl1 <- subset(exprdat_filterByExpr_dupl1, select=-c(Row.names,ENTREZID))\n\n# inspect dimension of gene expression data set without duplicates \ndim(exprdat_filterByExpr_dupl1)\n#> [1] 6012   69"},{"path":"gene-id-duplicate-removals.html","id":"option-2-keep-the-rounded-mean-expression-value-of-all-duplicated-gene-ids-1","chapter":"4 Gene ID Duplicate Removals","heading":"4.1.4.0.2 option 2: Keep the (rounded) mean expression value of all duplicated gene IDs","text":"option, want combine corresponding duplicated gene IDs one taking (rounded) mean count value sample. , switch order remove duplicates first addressing duplicated Ensembl IDs duplicated Entrez IDs.1.Remove duplicated ENTREZ gene IDs, .e. multiple different ENSEMBL IDs mapped single ENTREZ ID (case 2):Note add mean values gene expression data set end step 2.Remove duplicated ENSEMBL IDsCaution: Single ENSEMBL IDs mapped multiple ENTREZ ID naturally generate identical count data corresponding ENTREZ IDsIt therefore pointless compute mean expression valuesWe therefore proceed option 1 use ENTREZ ID occurs first remove rest","code":"\n# generate empty matrix to contain (rounded) mean expression values of all rows that\n# have same ENTREZ gene ID\nmean_entrez<-matrix(, nrow=0, ncol=ncol(merged_expression_data_filterByExpr)-2)\n# note: we set ncol = ncol(expression_data_filterByExpr)-2 since data set contains 2 columns with IDs at this point for which \n# we won't calculate any mean value. \n\n\n# for each duplicated Entrez gene ID separately, we gather all rows with the corresponding gene expression data\n# and then extract the (rounded) mean expression value of all rows\n    for(i in 1:length(dupl_entrez)){\n\n      #go through each ENTREZ IDs which occurs multiple times\n      #determine all rows whose ENTREZ IDs correspond to currently considered ENTREZ ID\n      counts_dupl <- merged_expression_data_filterByExpr[merged_expression_data_filterByExpr$ENTREZID %in% unique(dupl_entrez)[i],]\n\n      #compute the mean expression value of all rows that correspond to the given Entrez gene ID\n      dupl_id <- round(colMeans(counts_dupl[,c(2:(ncol(merged_expression_data_filterByExpr)-1))]))\n      #store rounded mean expression value in matrix\n      # this matrix is iteratively extended by a single row of gene expression data which corresponds to the\n      # (rounded) mean expression data that corresponds to the given Entrez gene ID\n      mean_entrez <- rbind(mean_entrez,dupl_id)\n      \n    }\n\n#set corresponding ENTREZ gene IDs as rownames\nrownames(mean_entrez) <- unique(dupl_entrez)\n\n\n# test whether the number of rows in mean_entrez corresponds to the number ENTREZ IDs\n# that occur more than once\n# result should be TRUE\nnrow(mean_entrez) == length(dupl_entrez)\n#> [1] TRUE\n\n# remove all rows from the expression data whose ENTREZ ID has at least one duplicate\n# intuition: we have just dealt with the corresponding rows and do not want them to be considered\n# in the second step (which deals with case 2)\n\nexprdat_filterByExpr_dupl2 <- merged_expression_data_filterByExpr[!merged_expression_data_filterByExpr$ENTREZID %in%  dupl_entrez,]\n\n# test whether the number of rows in the resulting data set equals the number of rows in the initial gene expression data set \n# minus number of genes with at least one duplicate\nnrow(exprdat_filterByExpr_dupl2) == nrow(merged_expression_data_filterByExpr)-nrow(duplicated_conversion_entrez)\n#> [1] TRUE\n\n\n\n# Inspect the dimension of the resulting gene expression data set with converted gene IDs\ndim(exprdat_filterByExpr_dupl2)\n#> [1] 6037   71\n# indicate which Ensembl IDs are duplicated in the gene expression data set\nind_duplicates <- duplicated(exprdat_filterByExpr_dupl2$Row.names)\n\n# filter gene expression data set to all Ensembl IDs that are NOT duplicated \nexprdat_filterByExpr_dupl2 <- exprdat_filterByExpr_dupl2[!ind_duplicates,]\n\n\n#set ENTREZ IDs as rownames\nrownames(exprdat_filterByExpr_dupl2) <- exprdat_filterByExpr_dupl2$ENTREZID\n#remove any columns containing IDs\nexprdat_filterByExpr_dupl2 <- subset(exprdat_filterByExpr_dupl2,select= -c(Row.names,ENTREZID))\n    \n#add rows to data set that contain mean expression values of duplicate ENTREZ IDs (from step 2)\nexprdat_filterByExpr_dupl2 <- rbind(exprdat_filterByExpr_dupl2,mean_entrez)\n    \n# Inspect the dimension of the resulting gene expression data set with converted gene IDs\ndim(exprdat_filterByExpr_dupl2)\n#> [1] 6012   69"},{"path":"gene-id-duplicate-removals.html","id":"option-3-among-the-duplicates-keep-row-with-highest-overall-expression-values","chapter":"4 Gene ID Duplicate Removals","heading":"4.1.4.0.3 option 3: Among the duplicates, keep row with highest overall expression values","text":"option, summarize gene expression data corresponding duplicated gene IDs detecting row highest counts across samples. intuition behind approach row highest counts values highest statistical power detected differentially expressed. option 2, sensible duplicates result multiple ENSEMBL IDs mapped ENTREZ ID.Remove duplicated Entrez IDsRemove duplicated Ensembl IDsJust like option 2, pointless detect row highest count values rows corresponding ENSEMBL ID naturally contain identical count data. therefore keep row corresponding duplicatd ENSEMBL ID occurs first.","code":"\n # generate empty matrix to later contain row with highest count values among ID duplicates\n# this data set is to be filled gradually and with each iteration of the follwing for-loop\nhighest_count_entrez<-matrix(, nrow=0, ncol=ncol(merged_expression_data_filterByExpr)-2)\n# note: we set ncol = ncol(expression_data_filterByExpr)-2 since data set contains 2 columns with IDs at this point for which \n# we won't calculate any \"highest\" value. \n\n\n# for each duplicated Entrez ID separately, we gather all rows with the corresponding gene expression data\n# and then extract the row with the highest overall magnitude of counts\n\n      for(i in 1:length(dupl_entrez)){\n\n        # go through each ENTREZ IDs which occurs multiple times\n        # determine all rows whose ENTREZ IDs correspond to currently considered ENTREZ ID\n        counts_dupl<-merged_expression_data_filterByExpr[merged_expression_data_filterByExpr$ENTREZID %in% unique(dupl_entrez)[i],]\n\n        # order rows in decreasing manner by their (added up) number of read counts across all samples\n        order_rowsums<-order(rowSums(counts_dupl[,2:(ncol(counts_dupl)-1)]),decreasing=TRUE)\n        #detect row with highest number of read counts across all samples (i.e. row with rank 1)\n        dupl_id<-counts_dupl[order_rowsums==1,]\n        #store corresponding expression values in the matrix \n        highest_count_entrez<-rbind(highest_count_entrez,dupl_id)\n      }\n\n\n#Remove all initial values with ENTREZ duplicates from the initial gene expression data set\nexprdat_filterByExpr_dupl3<-merged_expression_data_filterByExpr[! merged_expression_data_filterByExpr$ENTREZID %in% unique(dupl_entrez),]\n# indicate duplicated Ensembl IDs \nind_duplicates <- duplicated(exprdat_filterByExpr_dupl3$Row.names)\n\n# filter the gene expression data set to those Ensembl IDs that are NOT duplicated \nexprdat_filterByExpr_dupl3<-exprdat_filterByExpr_dupl3[!ind_duplicates,]\n\n# add gene expression rows of all Entrez gene IDs that were initially duplicated\nexprdat_filterByExpr_dupl3<-rbind(exprdat_filterByExpr_dupl3, highest_count_entrez)\n\n# Set ENTREZ IDs as rownames\nrownames(exprdat_filterByExpr_dupl3)<-exprdat_filterByExpr_dupl3$ENTREZID\n# Remove any column that contains information on gene IDs\nexprdat_filterByExpr_dupl3<-subset(exprdat_filterByExpr_dupl3, select=-c(Row.names,ENTREZID))\n\n\n# Inspect the dimension of the resulting gene expression data set with converted gene IDs\ndim(exprdat_filterByExpr_dupl3)\n#> [1] 6012   69"},{"path":"differential-expression-analysis.html","id":"differential-expression-analysis","chapter":"5 Differential Expression Analysis","heading":"5 Differential Expression Analysis","text":"","code":""},{"path":"differential-expression-analysis.html","id":"overview","chapter":"5 Differential Expression Analysis","heading":"5.1 Overview","text":"script, perform differential expression analysis three parametric methods:\n- voom/limma\n- DESeq2\n- edgeRHere, illustrate process two gene ID format Entrez IDs, additionally present identical process format Ensembl ID R script “Instructions_Differential_Expression_Analysis.R”.Note end illustration method, rename columns corresponding results tables unify across different methods. step required differential expression analysis subsequent use gene set analysis GENERAL, renaming columns (adjusted p-value) necessary context can use code illustrate conduct GSA following R scripts, independent method differential expression analysis used.","code":""},{"path":"differential-expression-analysis.html","id":"libraries-3","chapter":"5 Differential Expression Analysis","heading":"5.2 Libraries","text":"","code":""},{"path":"differential-expression-analysis.html","id":"install-libraries","chapter":"5 Differential Expression Analysis","heading":"5.2.1 Install Libraries","text":"necessary packages available Bioconductor, installed already available machine.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"tweeDESeqCountData\")\nBiocManager::install(\"limma\")\nBiocManager::install(\"DESeq2\")\nBiocManager::install(\"edgeR\")\nBiocManager::install(\"dplyr\")"},{"path":"differential-expression-analysis.html","id":"load-libraries-2","chapter":"5 Differential Expression Analysis","heading":"5.2.2 Load libraries","text":"Description stats libraries:","code":"\nlibrary(tweeDEseqCountData)\nlibrary(limma)\nlibrary(DESeq2)\nlibrary(edgeR)\nlibrary(dplyr)"},{"path":"differential-expression-analysis.html","id":"tweedeseqcountdata","chapter":"5 Differential Expression Analysis","heading":"5.2.2.1 tweeDESeqCountData","text":"Info package …","code":""},{"path":"differential-expression-analysis.html","id":"limma","chapter":"5 Differential Expression Analysis","heading":"5.2.2.2 limma","text":"","code":""},{"path":"differential-expression-analysis.html","id":"deseq2","chapter":"5 Differential Expression Analysis","heading":"5.2.2.3 DESeq2","text":"","code":""},{"path":"differential-expression-analysis.html","id":"edger","chapter":"5 Differential Expression Analysis","heading":"5.2.2.4 edgeR","text":"","code":""},{"path":"differential-expression-analysis.html","id":"load-data-1","chapter":"5 Differential Expression Analysis","heading":"5.2.3 Load data","text":"Note depending method differential expression analysis, different methods pre-filtering proposed:voom/limma egdeR: pre-filtering using edgeR’s built-function filterByExpr()DESeq2: manual/simple pre-filteringWe therefore work pre-filtered gene expression data sets generated “Instructions_PreFiltering”:","code":""},{"path":"differential-expression-analysis.html","id":"previously-generated","chapter":"5 Differential Expression Analysis","heading":"5.2.3.1 Previously Generated","text":"","code":"\n# data is not yet in the folder. set to eval=FALSE for now\nload(\"./data/Results_GeneID_Conversion_DuplicatesRemoval/exprdat_filter_conv_DESeq2.Rdata\")\nload(\"./data/Results_GeneID_Conversion_DuplicatesRemoval/exprdat_filter_conv_filterByExpr.Rdata\")"},{"path":"differential-expression-analysis.html","id":"pickrell-sample-data","chapter":"5 Differential Expression Analysis","heading":"5.2.3.2 {pickrell} Sample Data","text":"Obtain sample conditions (.e. phenotypes) pickrell data set store object “sample_conditions”:","code":"\n# load pickrell data set \ndata(pickrell)\n\n# the conditions/phenotypes of the samples can be addressed with the following syntax: \npickrell.eset$gender\n#>  [1] male   male   female male   female male   female male  \n#>  [9] female male   female male   female male   female male  \n#> [17] female female male   female male   female female male  \n#> [25] female male   female female male   female female male  \n#> [33] female male   female female female female male   female\n#> [41] male   male   female female male   female female male  \n#> [49] female female male   female male   male   female female\n#> [57] male   female male   female male   female female male  \n#> [65] female female female male   female\n#> Levels: female male\n\n# store sample conditions \nsample_conditions <- pickrell.eset$gender"},{"path":"differential-expression-analysis.html","id":"differential-expression-analysis-with-entrez-gene-id","chapter":"5 Differential Expression Analysis","heading":"5.3 Differential Expression Analysis (with Entrez gene ID)","text":"(Provide brief description options people know one jump )","code":""},{"path":"differential-expression-analysis.html","id":"option-1-differential-expression-analysis-using-limma-1","chapter":"5 Differential Expression Analysis","heading":"5.3.1 Option 1: Differential expression analysis using limma","text":"","code":""},{"path":"differential-expression-analysis.html","id":"step-1-generate-required-input-object","chapter":"5 Differential Expression Analysis","heading":"5.3.1.1 step 1: Generate required input object","text":"described “Instructions_Differential_Expression_Analysis.R”, gene expression data set exprdat_filter_conv_filterByExpr \ndata frame needs converted DGEList object.required function arguments:counts: matrix contains RNA-Seq data (.e. count data)optional function arguments:group: indicates condition sample/library. argument must specified sooner later (subsequent functions) just specify pointNote: leave remaining arguments default state since corresponding info added following pipeline functions.","code":"\n# store expression data with corresponding sample conditions in object of class DGEList\n\ny <- DGEList(counts = exprdat_filter_conv_filterByExpr, \n              group = sample_conditions)"},{"path":"differential-expression-analysis.html","id":"step-2-normalization","chapter":"5 Differential Expression Analysis","heading":"5.3.1.2 step 2: Normalization","text":"following piece code generates normalization factor sample accounts sample-specific effect (differences library sizes effects compositionality). accounted , effects prevent comparison samples.Note function transform count data, rather generates normalization factor sample separately incorporated subsequent analysis.","code":"\ny <- calcNormFactors(y)"},{"path":"differential-expression-analysis.html","id":"step-3-voom-transformation","chapter":"5 Differential Expression Analysis","heading":"5.3.1.3 step 3: voom transformation","text":"Perform voom transformation make limma, initially developed microarray measurements, available RNA-Seq data. voom transforms RNA-Seq data log counts-per-million generates precision weight entry gene expression data sets incorporated limma pipeline.","code":"\n# (i) generate design matrix (rows correspond to samples, columns indicate which coefficients are to be estimated)\ndesign_matrix <- model.matrix( ~ sample_conditions)\n\n# (ii) voom transformation \ny <- voom(y, design = design_matrix)"},{"path":"differential-expression-analysis.html","id":"step-4-differential-expression-analysis","chapter":"5 Differential Expression Analysis","heading":"5.3.1.4 step 4: Differential expression analysis","text":"","code":"\n# (i) fit a linear model for each gene\ny <- lmFit(y)\n\n# (ii) calculate the statistics for the assessment of differential expression \ny <- eBayes(y)\n\n# (iii) Get the result table for each gene whose differential expression was assessed \nDE_results_limma_Entrez <- topTable(y, number =  nrow(y))\n#> Removing intercept from test coefficients\n# number = nrow(y) ensures that all genes are displayed in results"},{"path":"differential-expression-analysis.html","id":"step-5-rename-columns-in-results-of-differential-expression-analysis","chapter":"5 Differential Expression Analysis","heading":"5.3.1.5 step 5: Rename columns in results of differential expression analysis","text":"rename columns results table unify across different methods differential expression analysis. , use function rename() provided library dplyr.","code":"\n# first, we transform the results table to a data frame so that we see the results\n# table directly when accessing it through the name \"res\"\nDE_results_limma_Entrez <- as.data.frame(DE_results_limma_Entrez)\n\n# rename column that contains adjusted p-values: rename padj to p_adj\nDE_results_limma_Entrez <- dplyr::rename(DE_results_limma_Entrez, p_adj = \"adj.P.Val\")\n\n\n# take a look at the results table: \nhead(DE_results_limma_Entrez, n = 20)\n#>             logFC   AveExpr         t      P.Value\n#> 6192    9.2105431 1.9863048 47.186499 1.020114e-55\n#> 9087    5.0806396 0.5128935 26.668835 6.058859e-39\n#> 8228   -0.9240302 5.3334193 -8.779270 5.579187e-13\n#> 8226   -0.8544468 2.1626976 -4.415343 3.497072e-05\n#> 159013 -0.5508457 3.7163074 -4.251355 6.307821e-05\n#> 55787  -0.4042722 5.1160616 -4.045191 1.302619e-04\n#> 50486  -1.4703261 5.1922528 -3.855673 2.493894e-04\n#> 3725   -0.5880074 8.2731003 -3.920361 2.001855e-04\n#> 317     0.4046249 5.9681588  3.822268 2.791390e-04\n#> 3552   -1.4855077 3.5435981 -3.666767 4.682471e-04\n#> 284486 -1.0824842 1.6291231 -3.567807 6.466165e-04\n#> 4092   -0.3090285 7.2622871 -3.660091 4.786317e-04\n#> 63933  -0.3410894 5.3603234 -3.587703 6.062388e-04\n#> 2275   -0.6200465 3.3046963 -3.481030 8.544975e-04\n#> 9404    0.3288050 9.5202902  3.575849 6.299981e-04\n#> 9697    0.4792856 7.6786140  3.549883 6.851673e-04\n#> 10732  -0.5086504 5.5892686 -3.492114 8.247942e-04\n#> 4214    0.5165346 4.7408391  3.445856 9.556092e-04\n#> 63894   0.1859711 7.0457057  3.483087 8.489115e-04\n#> 857    -0.9967185 2.0665254 -3.262960 1.690566e-03\n#>               p_adj           B\n#> 6192   6.133944e-52 84.20170055\n#> 9087   1.821596e-35 62.68255252\n#> 8228   1.118255e-09 19.22260877\n#> 8226   5.256973e-02  2.15126317\n#> 159013 7.585786e-02  1.55871370\n#> 55787  1.305441e-01  0.74145045\n#> 50486  1.864959e-01  0.15615850\n#> 3725   1.719594e-01  0.11995311\n#> 317    1.864959e-01 -0.07537785\n#> 3552   2.616375e-01 -0.24387530\n#> 284486 2.746607e-01 -0.43082603\n#> 4092   2.616375e-01 -0.66791157\n#> 63933  2.746607e-01 -0.72462491\n#> 2275   2.831770e-01 -0.79305058\n#> 9404   2.746607e-01 -0.97053199\n#> 9697   2.746607e-01 -1.02933463\n#> 10732  2.831770e-01 -1.03194804\n#> 4214   2.831770e-01 -1.09133522\n#> 63894  2.831770e-01 -1.19771238\n#> 857    3.428077e-01 -1.28178906"},{"path":"differential-expression-analysis.html","id":"option-2-differential-expression-analysis-using-deseq2-1","chapter":"5 Differential Expression Analysis","heading":"5.3.2 option 2: Differential expression analysis using DESeq2","text":"","code":""},{"path":"differential-expression-analysis.html","id":"step-1-generate-object-required-by-deseq2","chapter":"5 Differential Expression Analysis","heading":"5.3.2.1 step 1: Generate object required by DESeq2","text":"DESeq2 operates format DESeqDataSet contains information count data, conditions samples design. Note gene expression data sets must imported R, additional steps necessary following code can run.","code":""},{"path":"differential-expression-analysis.html","id":"generate-a-data-frame-which-contains-the-condition-of-each-sample-1","chapter":"5 Differential Expression Analysis","heading":"5.3.2.1.1 Generate a data frame which contains the condition of each sample","text":", information sample conditions column data frame. However, variables (batch effects) controlled , corresponding variables must additionally added coldata.","code":"\n# the names of the samples are stored as the row names of the data frame\n# -> important: make sure that the order of the conditions in sample_conditions corresponds to the order of the \n# samples in expression_data\ncoldata <- data.frame(sample_conditions, \n                      row.names = colnames(exprdat_filter_conv_DESeq2))\n\n# rename the column header to \"condition\" \ncolnames(coldata) <- \"condition\"\n\n# recode the variable condition as a factor \n# rename the sample conditions (in this case from \"female\" and \"male\") to \"untreated\" and \"treated\"\n# note: make sure that the control level in variable condition is coded as the first level (i.e. \"untreated\")\ncoldata$condition <- factor(coldata$condition, \n                            labels = c(\"untreated\",\"treated\"))"},{"path":"differential-expression-analysis.html","id":"generate-the-deseqdataset-1","chapter":"5 Differential Expression Analysis","heading":"5.3.2.1.2 Generate the DESeqDataSet","text":"Relevant arguments function DESeqDataSetFromMatrix:countData: count data gene expression data setcountData: count data gene expression data setcolData: data frame contains information samples (see ) conditions samples (required) possibly variables correct (batch effects)colData: data frame contains information samples (see ) conditions samples (required) possibly variables correct (batch effects)design: indicates variables colData used modellingdesign: indicates variables colData used modelling-> detailed: argument design used estimate dispersions log2 fold changes model-> detailed: argument design used estimate dispersions log2 fold changes model-> one variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: design ~ batch + condition-> one variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: design ~ batch + conditionmake sure variable interest (: variable represents conditions samples) placed end formulamake sure variable interest (: variable represents conditions samples) placed end formula","code":"\ndds_Entrez <- DESeqDataSetFromMatrix(countData = exprdat_filter_conv_DESeq2, \n                                     colData = coldata, \n                                     design = ~condition)"},{"path":"differential-expression-analysis.html","id":"step-2-differential-expression-analysis","chapter":"5 Differential Expression Analysis","heading":"5.3.2.2 step 2: Differential expression analysis","text":"DESeq2 calculates normalization factor sample, estimates dispersion parameter, fits negative binomial model. p-value differential expression gene computed using Wald test.Note: function results() provided base mean across samples, estimated log2 fold changes, standard errors, test statistics, p-values, adjusted p-values gene.","code":"\n# perform default differential expression analysis \ndds_Entrez <- DESeq(dds_Entrez)\n#> estimating size factors\n#> estimating dispersions\n#> gene-wise dispersion estimates\n#> mean-dispersion relationship\n#> final dispersion estimates\n#> fitting model and testing\n#> -- replacing outliers and refitting for 117 genes\n#> -- DESeq argument 'minReplicatesForReplace' = 7 \n#> -- original counts are preserved in counts(dds)\n#> estimating dispersions\n#> fitting model and testing\n\n# generate results table which provides\nDE_results_DESeq2_Entrez <- results(dds_Entrez)"},{"path":"differential-expression-analysis.html","id":"step-3-rename-columns-in-results-of-differential-expression-analysis","chapter":"5 Differential Expression Analysis","heading":"5.3.2.3 step 3: Rename columns in results of differential expression analysis","text":"","code":"\n# first, we transform to results table to a data frame so that we see the results\n# table directly when accessing it through the name \"res\"\nDE_results_DESeq2_Entrez <- as.data.frame(DE_results_DESeq2_Entrez)\n\n# rename column that contains adjusted p-values: rename padj to p_adj\nDE_results_DESeq2_Entrez <- dplyr::rename(DE_results_DESeq2_Entrez, p_adj = padj)\n\n# take a look at the results table\nhead(DE_results_DESeq2_Entrez, n = 20 )\n#>           baseMean log2FoldChange      lfcSE         stat\n#> 8813    62.7268709   0.0394347840 0.11345444  0.347582551\n#> 57147   70.4533427   0.0285330645 0.11131002  0.256338685\n#> 55732   13.0010604   0.1641173646 0.15102073  1.086720805\n#> 2268    43.5777559   0.1137118045 0.19545410  0.581782664\n#> 2519    37.9639983  -0.0065270645 0.10803176 -0.060418014\n#> 4800   228.4783293   0.0511474400 0.09641906  0.530470243\n#> 81887   11.5340315   0.0251919133 0.18501229  0.136163455\n#> 22875  175.8335262   0.2999994619 0.16347952  1.835088963\n#> 5893     4.6883080   0.2804257542 0.19291917  1.453591975\n#> 572     66.3699746  -0.2648964238 0.10233495 -2.588523618\n#> 9957    10.1224447  -0.1994929894 0.31663473 -0.630041397\n#> 51384    3.4400718  -0.4871178913 0.50088873 -0.972507196\n#> 3927   158.4286342   0.1552048117 0.18239266  0.850937829\n#> 29916  843.8205108   0.0009164434 0.11692479  0.007837888\n#> 4074  1015.3676532   0.0204941689 0.08518719  0.240578061\n#> 90293    0.7530882  -0.1378597175 0.75449224 -0.182718537\n#> 79007  924.7932944  -0.4977855669 0.26299623 -1.892747927\n#> 6542     0.4013411   0.4437578747 0.73930371  0.600237584\n#> 952      5.5336896   0.2786075955 0.32467188  0.858120507\n#> 2288   609.7373992  -0.0974512098 0.11711125 -0.832125125\n#>            pvalue     p_adj\n#> 8813  0.728153713 0.9313348\n#> 57147 0.797689329 0.9506228\n#> 55732 0.277160217 0.7502690\n#> 2268  0.560713083 0.8849136\n#> 2519  0.951822712 0.9884098\n#> 4800  0.595785935 0.8982377\n#> 81887 0.891692065 0.9763145\n#> 22875 0.066492509 0.5209390\n#> 5893  0.146059463 0.6396912\n#> 572   0.009638834 0.3141234\n#> 9957  0.528667500 0.8707508\n#> 51384 0.330798286 0.7871383\n#> 3927  0.394803890 0.8165289\n#> 29916 0.993746334 0.9984058\n#> 4074  0.809882155 0.9537648\n#> 90293 0.855018870 0.9662640\n#> 79007 0.058391399 0.4994559\n#> 6542  0.548347909 0.8785679\n#> 952   0.390825925 0.8152442\n#> 2288  0.405338321 0.8212059"},{"path":"differential-expression-analysis.html","id":"option-3-differential-expression-analysis-using-edger-1","chapter":"5 Differential Expression Analysis","heading":"5.3.3 option 3: Differential expression analysis using edgeR","text":"","code":""},{"path":"differential-expression-analysis.html","id":"step-1-generate-required-input-object-1","chapter":"5 Differential Expression Analysis","heading":"5.3.3.1 step 1: generate required input object","text":"Note edgeR operates DGEList objectRequired function arguments:counts: matrix contains RNA-Seq data (.e. count data)Optional function arguments:group: indicates condition sample/library-> argument must specified sooner later (subsequent functions) just specify pointNote thta leave remaining arguments default state since corresponding info added following pipeline functions.","code":"\ny <- DGEList(counts = exprdat_filter_conv_filterByExpr, \n             group = sample_conditions)"},{"path":"differential-expression-analysis.html","id":"step-2-normalization-1","chapter":"5 Differential Expression Analysis","heading":"5.3.3.2 step 2: Normalization","text":"following piece code generates normalization factor sample. accounts sample-specific effect (differences library sizes effects compositionality). accounted , effects prevent comparison samples.Note function transform count data, rather generates normalization factor sample incorporated subsequent analysis separately.","code":"\ny <- calcNormFactors(y)"},{"path":"differential-expression-analysis.html","id":"step-3-estimation-of-dispersion","chapter":"5 Differential Expression Analysis","heading":"5.3.3.3 step 3: Estimation of dispersion","text":"following code estimates common tagwise dispersion, namely variation true abundance given gene different samples. required assess differential expression realistically.","code":"\ny <- estimateDisp(y)\n#> Using classic mode."},{"path":"differential-expression-analysis.html","id":"step-4-test-for-differential-expression","chapter":"5 Differential Expression Analysis","heading":"5.3.3.4 step 4: Test for differential expression","text":"Note argument n specifies number top differentially expressed genes displayed results. Setting n = nrow(DE_results_Entrez) ensures results genes whose differential expression assessed displayed.","code":"\n# test each gene for differential expression: \nDE_results_edgeR_Entrez <- exactTest(y)\n\n# extract pre-specified (n) number of genes\nDE_results_edgeR_Entrez <- topTags(DE_results_edgeR_Entrez, n = nrow(DE_results_edgeR_Entrez))"},{"path":"differential-expression-analysis.html","id":"step-5-rename-columns-in-the-results-of-differential-expression-analysis","chapter":"5 Differential Expression Analysis","heading":"5.3.3.5 step 5: Rename columns in the results of differential expression analysis","text":"","code":"\n# first, we transform the results table to a data frame so that we see the results\n# table directly when accessing it through the name \"res\"\nDE_results_edgeR_Entrez <- as.data.frame(DE_results_edgeR_Entrez)\n\n# rename column that contains adjusted p-values: rename padj to p_adj\nDE_results_edgeR_Entrez <- dplyr::rename(DE_results_edgeR_Entrez, p_adj = FDR)\n\n\n# take a look at the results table\nhead(DE_results_edgeR_Entrez, n = 20)\n#>                logFC   logCPM        PValue         p_adj\n#> 6192      10.1330599 6.154999  0.000000e+00  0.000000e+00\n#> 9087       5.5791707 2.519656 6.188598e-121 1.860602e-117\n#> 8228      -0.9448255 5.485319  1.821705e-17  3.651303e-14\n#> 8226      -0.7768228 2.571002  3.067361e-06  4.611011e-03\n#> 6615      -1.6460041 3.288135  4.698096e-06  5.627893e-03\n#> 10912     -1.5870378 2.679647  5.615726e-06  5.627893e-03\n#> 284486    -1.1257052 2.302952  1.949732e-05  1.674820e-02\n#> 1521       1.5019085 3.365855  2.906843e-05  2.184856e-02\n#> 55787     -0.4253221 5.207647  3.522694e-05  2.269295e-02\n#> 10732     -0.6028374 5.756558  3.773981e-05  2.269295e-02\n#> 100191040 -1.1506301 3.121643  4.727503e-05  2.584225e-02\n#> 412       -0.7312091 6.861545  1.064460e-04  5.333830e-02\n#> 159013    -0.5219775 3.911283  1.225919e-04  5.670349e-02\n#> 317        0.4048454 6.062183  2.164067e-04  9.294666e-02\n#> 51655     -1.3164084 3.094734  2.570863e-04  1.003474e-01\n#> 6662      -0.9774711 8.100796  2.804477e-04  1.003474e-01\n#> 9404       0.3361246 9.579044  2.837030e-04  1.003474e-01\n#> 171177    -0.6747490 6.350249  3.161790e-04  1.031954e-01\n#> 10479      0.3635303 6.142157  3.320976e-04  1.031954e-01\n#> 3725      -0.5320863 8.429198  3.593785e-04  1.031954e-01"},{"path":"rna-seq-transformation.html","id":"rna-seq-transformation","chapter":"6 RNA-Seq Transformation","heading":"6 RNA-Seq Transformation","text":"Branching point: continue next chapter conversion gene IDs necessary. However, conversion /necessary, proceed Chapter ?? Cluster Profiler.","code":""},{"path":"rna-seq-transformation.html","id":"content-of-this-script","chapter":"6 RNA-Seq Transformation","heading":"6.1 Content of this script","text":"file, transform RNA-Seq data align characteristics microarray measurements using two approaches:approach 1: transformation using voomapproach 2: transformation using DESeq2’s varianceStabilizingTransformationNote PADOG GSEA, two tools paper require (manual) transformation RNA-Seq data, require genes different format:PADOG: Entrez gene ID -> requires gene expression data converted gene IDsweb-based tool GSEA: Ensembl gene ID -> required gene expression data initial gene IDsWe illustrate procedure transformation methods Entrez ID, identical procedure Ensembl ID provided corresponding .R-file.","code":""},{"path":"rna-seq-transformation.html","id":"libraries-4","chapter":"6 RNA-Seq Transformation","heading":"6.1.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Description libraries:tweeDESeqCountData: methods transformation RNA-Seq data require conditions samples gene expression data set , case Pickrell data set, obtain corresponding library.tweeDESeqCountData: methods transformation RNA-Seq data require conditions samples gene expression data set , case Pickrell data set, obtain corresponding library.limma: Since first method transformation RNA-Seq data based limma’s voom, load corresponding library.limma: Since first method transformation RNA-Seq data based limma’s voom, load corresponding library.edgeR: Normalization additional component transformation RNA-Seq data first method employs (default) normalization technique provided edgeR library.edgeR: Normalization additional component transformation RNA-Seq data first method employs (default) normalization technique provided edgeR library.DESeq2: Since second method transformation RNA-Seq data provided DESeq2, load corresponding library.DESeq2: Since second method transformation RNA-Seq data provided DESeq2, load corresponding library.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"tweeDEseqCountData\")\nBiocManager::install(\"limma\")\nBiocManager::install(\"edgeR\")\nBiocManager::install(\"DESeq2\")\nlibrary(tweeDEseqCountData) # for pickrell data set \nlibrary(limma)\nlibrary(edgeR)\nlibrary(DESeq2)"},{"path":"rna-seq-transformation.html","id":"load-data-2","chapter":"6 RNA-Seq Transformation","heading":"6.1.1.1 Load data","text":"load pre-filtered gene expression data setswith genes identified initial Ensembl ID format.genes converted NCBI (Entrez) ID format.Note purpose simplicity, assume gene expression measurements filtered using simple approach pre-filtering introduced DESeq2.obtain sample conditions pickrell data set (respective gender), also load data.purpose readability, work objects neutral names:","code":"\n# for PADOG:\nload(\"./data/Results_GeneID_Conversion_DuplicatesRemoval/exprdat_filter_conv_DESeq2.Rdata\")\n# for GSEA \nload(\"./data/Results_PreFiltering/expression_data_filterDESeq2.Rdata\")\n\n# load pickrell data \ndata(pickrell)\n# assign the conditions of the samples to object \"sample_conditions\"\nsample_conditions <- pickrell.eset$gender\n# gene expression data set with gene IDs converted to Entrez ID format: \nexpression_data_filt_conv <- exprdat_filter_conv_DESeq2\n# gene expression data set with gene IDs in initial Ensembl ID format: \nexpression_data_filt <- expression_data_filterDESeq2"},{"path":"rna-seq-transformation.html","id":"transformation-of-the-gene-expression-data-set-with-converted-entrez-ids","chapter":"6 RNA-Seq Transformation","heading":"6.2 Transformation of the gene expression data set with converted (Entrez) IDs","text":"","code":""},{"path":"rna-seq-transformation.html","id":"approach-1-transformation-using-voom","chapter":"6 RNA-Seq Transformation","heading":"6.2.1 Approach 1: Transformation using voom","text":"","code":""},{"path":"rna-seq-transformation.html","id":"step-1-generate-a-dgelist-object-from-the-gene-expression-data","chapter":"6 RNA-Seq Transformation","heading":"6.2.1.1 step 1: Generate a DGEList object from the gene expression data","text":"Function arguments:counts: corresponds gene expression measurementscounts: corresponds gene expression measurementsgroup: corresponds conditions samplesgroup: corresponds conditions samples","code":"\ncounts_voom <-DGEList(counts = expression_data_filt_conv, \n                      group = sample_conditions)"},{"path":"rna-seq-transformation.html","id":"step-2-normalization-2","chapter":"6 RNA-Seq Transformation","heading":"6.2.1.2 step 2: Normalization","text":"Note use default normalization method TMM (“Trimmed mean M-values”). choices normalization can specified argument “method” function calcNormFactors().","code":"\ncounts_voom <- calcNormFactors(counts_voom)"},{"path":"rna-seq-transformation.html","id":"step-3-run-voom","chapter":"6 RNA-Seq Transformation","heading":"6.2.1.3 step 3: Run voom","text":"Note make use precision weights official part voom. Instead, proceed cpm-transformed (normalized) gene expression measurements.","code":"\nexpression_data_voomtransformed <- voom(counts_voom)"},{"path":"rna-seq-transformation.html","id":"step-4-convert-resulting-data-set-to-data-frame","chapter":"6 RNA-Seq Transformation","heading":"6.2.1.4 step 4: Convert resulting data set to data frame","text":"point, transformed gene expression measurements stored object “expression_data_voomtransformed” form EList object. use GSA (specifically: PADOG), want convert transformed gene expression measurements data frame.","code":"\nexpression_data_voomtransformed_Entrez <- as.data.frame(expression_data_voomtransformed)\n\n# inspect (part of) the transformed gene expression data set \nexpression_data_voomtransformed_Entrez[1:10, 1:10]\n#>         NA18486  NA18498   NA18499  NA18501  NA18502\n#> 8813  3.5635974 4.994885 4.0568571 5.047515 4.808758\n#> 57147 3.5635974 4.924837 5.4652000 4.994566 4.911852\n#> 55732 1.5311760 2.828374 2.1093245 3.462552 2.686139\n#> 2268  4.2615689 4.413337 4.0920466 4.319188 4.626761\n#> 2519  3.9543874 4.586669 3.7830963 4.230379 3.614586\n#> 4800  7.3077585 6.731166 7.1453673 6.716623 7.143454\n#> 81887 4.0941122 2.765639 0.8869321 2.340562 2.686139\n#> 22875 4.7859899 6.986313 6.1557990 6.356387 5.726296\n#> 5893  0.8790993 1.361248 1.4174468 1.953539 1.191375\n#> 572   4.6716572 4.622514 4.7504301 3.538501 4.626761\n#>        NA18504   NA18505   NA18507  NA18508   NA18510\n#> 8813  4.504121 5.3436244 5.4990159 4.767209 4.5153346\n#> 57147 4.542089 5.4980707 4.6236036 4.682940 4.5153346\n#> 55732 2.362766 2.3995808 2.5490566 2.837111 1.9792817\n#> 2268  4.157946 3.3678720 4.6645338 2.271514 4.5153346\n#> 2519  3.701568 4.2854098 4.4704468 4.002697 3.7448165\n#> 4800  6.688931 6.7738643 6.4559472 6.451025 6.9021139\n#> 81887 1.734734 2.8302152 2.5490566 2.913060 3.0265875\n#> 22875 5.455212 6.9394139 6.4559472 5.899121 5.4211193\n#> 5893  1.445228 0.6833738 0.6745875 1.328097 0.8797461\n#> 572   5.120793 4.3517523 4.8175455 4.787529 5.3852741"},{"path":"rna-seq-transformation.html","id":"approach-2-transformation-using-deseq2s-variancestabilizingtransformation","chapter":"6 RNA-Seq Transformation","heading":"6.2.2 Approach 2: Transformation using DESeq2’s VarianceStabilizingTransformation","text":"","code":""},{"path":"rna-seq-transformation.html","id":"step-1-generate-a-data-frame-to-contain-the-condition-of-each-sample","chapter":"6 RNA-Seq Transformation","heading":"6.2.2.1 step 1: generate a data frame to contain the condition of each sample:","text":"Just like starting point differential expression analysis, need generate input object(s) required working DESeq2. , generate data frame colnames contains sample (rownames) corresponding condition (form “treated” vs. “untreated”).","code":"\n# the names of the samples are stored as the row names of the data frame\n# -> important: make sure that the order of the conditions in sample_conditions corresponds to the order of the \n#               samples in expression_data\n  coldata <- data.frame(sample_conditions, \n                        row.names = colnames(expression_data_filt_conv))\n  \n# rename the column header to \"condition\" \ncolnames(coldata) <- \"condition\"\n  \n# recode the variable condition as a factor \n# rename the sample conditions (in this case from \"female\" and \"male\") to \"untreated\" and \"treated\"\n# note: make sure that the control level in variable condition is coded as the first level (i.e. \"untreated\")\n\ncoldata$condition <- factor(coldata$condition, \n                            labels = c(\"untreated\",\"treated\"))\n\n# inspect resulting data frame: \nhead(coldata, n = 10)\n#>         condition\n#> NA18486   treated\n#> NA18498   treated\n#> NA18499 untreated\n#> NA18501   treated\n#> NA18502 untreated\n#> NA18504   treated\n#> NA18505 untreated\n#> NA18507   treated\n#> NA18508 untreated\n#> NA18510   treated"},{"path":"rna-seq-transformation.html","id":"step-2-generate-deseqdataset","chapter":"6 RNA-Seq Transformation","heading":"6.2.2.2 step 2: Generate DESeqDataSet","text":"DESeq2 eventually operates “DESeqDataSet”, contains gene expression measurements, information samples (: sample conditions) well indication variables count data sample depend .Relevant arguments function DESeqDataSetFromMatrix:countData: count data gene expression data setcountData: count data gene expression data setcolData: data frame contains information samples (see ) conditions samples (required) possibly variables correct (batch effects)colData: data frame contains information samples (see ) conditions samples (required) possibly variables correct (batch effects)design: indicates variables colData used modelling\ndetailed: argument design used estimate dispersions log2 fold changes model\none variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: “design ~ batch + condition”\ndesign: indicates variables colData used modellingmore detailed: argument design used estimate dispersions log2 fold changes modelif one variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: “design ~ batch + condition”, disregard possible batch effects focus conditions samples.","code":"\ndds<-DESeqDataSetFromMatrix(countData = expression_data_filt_conv, \n                            colData = coldata, \n                            design = ~ condition)"},{"path":"rna-seq-transformation.html","id":"step-3-perform-deseq2s-variancestabilizingtransformation","chapter":"6 RNA-Seq Transformation","heading":"6.2.2.3 step 3: Perform DESeq2’s varianceStabilizingTransformation","text":"transformation results values variance approximately approximately constant throughout range mean. Furthermore, values normalized library size.","code":"\n# perform variance stabilizing transformation\nexpression_data_vsttransformed <-vst(dds)\n    \n# since the data set is now in the format of a DESeqTransform data set, the transformed count data are not directly accessible use function assay() which lets us access the count data:\nexpression_data_vsttransformed <- assay(expression_data_vsttransformed)"},{"path":"rna-seq-transformation.html","id":"step-4-convert-to-data-frame","chapter":"6 RNA-Seq Transformation","heading":"6.2.2.4 step 4: Convert to data frame","text":"convert transformed gene expression data set data frame.","code":"\nexpression_data_vsttransformed_Entrez <- as.data.frame(expression_data_vsttransformed)\n\n# inspect (part of) the transformed gene expression data set \nexpression_data_vsttransformed_Entrez[1:10, 1:10]\n#>        NA18486  NA18498  NA18499  NA18501  NA18502  NA18504\n#> 8813  5.475282 6.471173 5.786311 6.551076 6.317231 6.107874\n#> 57147 5.475282 6.416409 6.857113 6.508884 6.396753 6.135961\n#> 55732 4.471560 5.050287 4.706549 5.425412 4.967019 4.813408\n#> 2268  5.939797 6.032867 5.810294 5.996914 6.179690 5.859580\n#> 2519  5.727813 6.159507 5.605070 5.933449 5.487017 5.554671\n#> 4800  8.527528 7.963648 8.355275 7.998985 8.336457 7.943355\n#> 81887 5.822793 5.018101 4.256734 4.818117 4.967019 4.540723\n#> 22875 6.327592 8.199396 7.451246 7.670505 7.061865 6.857525\n#> 5893  4.246067 4.421462 4.433534 4.644343 4.349009 4.429268\n#> 572   6.240388 6.186132 6.286555 5.472331 6.179690 6.583569\n#>        NA18505  NA18507  NA18508  NA18510\n#> 8813  6.751417 6.884505 6.290273 6.117851\n#> 57147 6.879356 6.190724 6.226492 6.117851\n#> 55732 4.831633 4.910830 5.048319 4.647757\n#> 2268  5.343466 6.221367 4.774482 6.117851\n#> 2519  5.939749 6.077764 5.742060 5.585061\n#> 4800  8.004757 7.718627 7.704235 8.140429\n#> 81887 5.044543 4.910830 5.088151 5.156246\n#> 22875 8.157830 7.718627 7.215519 6.830071\n#> 5893  4.187743 4.199785 4.400327 4.244141\n#> 572   5.986951 6.337580 6.305771 6.800351"},{"path":"go-seq.html","id":"go-seq","chapter":"7 Go SEQ","heading":"7 Go SEQ","text":"","code":""},{"path":"go-seq.html","id":"content-of-this-script-1","chapter":"7 Go SEQ","heading":"7.1 Content of this script","text":"script, following two things:\n- (1.) Based results differential expression analysis, generated voom/limma, DESeq2 edgeR, go steps required run GOSeq\n- (2.) go (meaningful) researchers’ degrees freedom","code":""},{"path":"go-seq.html","id":"libraries-5","chapter":"7 Go SEQ","heading":"7.1.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Description libraries:tweeDESeqCountData: addition results differential expression analysis, also need raw count data case want adjust bias account (see step 4 ‘Researcher’s degrees freedom’ end script).tweeDESeqCountData: addition results differential expression analysis, also need raw count data case want adjust bias account (see step 4 ‘Researcher’s degrees freedom’ end script).goseq: Offers implementation method GOSeq.goseq: Offers implementation method GOSeq.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"tweeDEseqCountData\")\nBiocManager::install(\"goseq\")\nlibrary(tweeDEseqCountData) # for pickrell data set \nlibrary(goseq)"},{"path":"go-seq.html","id":"load-data-3","chapter":"7 Go SEQ","heading":"7.1.1.1 Load data","text":"starting point GOSeq results differential expression analysis. Since GOSeq works Ensembl gene IDs, load corresponding results differential expression analysis Ensembl gene IDs.Since relevant columns results table unified three methods differential expression analysis, subsequent steps identical results table. Therefore, arbitrarily proceed one results table differential expression analysis, namely DESeq2.simplified readability, store corresponding results object neutral name:mentioned , need expression measurements pickrell data set one researchers’ degrees freedom.","code":"\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_limma_Ensembl.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_DESeq2_Ensembl.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_edgeR_Ensembl.Rdata\")\nDE_results <- DE_results_DESeq2_Ensembl\n\n# note that you could easily change to one of the results tables of voom/limma or edgeR: \n\n# DE_results <- DE_results_limma_Ensembl\n# or \n# DE_results <- DE_results_DESeq2_Ensembl\n# load pickrell data set\ndata(pickrell)\n\n# set gene expression data set \nexpression_data <- Biobase::exprs(pickrell.eset)"},{"path":"go-seq.html","id":"differential-expression-analysis-1","chapter":"7 Go SEQ","heading":"7.2 (1.) Differential expression analysis","text":"","code":""},{"path":"go-seq.html","id":"step-1-preparation-of-required-input-object","chapter":"7 Go SEQ","heading":"7.2.1 step 1: Preparation of required input object","text":"GOSeq’s required input object differs list differentially expressed genes typically required ORA. Instead, GOSeq requires input “named binary vector” …\n- () values 0 (differentially expressed genes) 1 (differentially expressed genes).\n- (ii) names correspond associated gene IDs.Note methods differential expression analysis, DESeq2, set adjusted p-values genes NA. means genes actually tested differential expression. Consequently, genes assigned neither 1 0 input object. therefore remove genes adjusted p-value set NA creation named binary vector.Note “bin_vec_DEG” stands BINary VECtor Differentially Expressed GenesFor illustration purposes: compare number differentially expressed genes results table differential expression analysis number differentially expressed genes named binary vector","code":"\n# 1. for each gene from the experiment, indicate those that have an EXISTING (i.e.\n# NON-MISSING) p-value\nindicator_nonNA_p <- !is.na(DE_results$p_adj)\n\n# 2. using the indicator from 1., subset the results of differential expression\n# analysis to only those genes with an EXISTING (i.e. NON-MISSING) p-value\nDE_results_noNA <- DE_results[indicator_nonNA_p,]\n\n# 3. create vector with binary value (0 or 1) for each gene in DE_results_noNA\n# for this, we focus on the column p_adj which contains the adjusted p-values\nbin_vec_DEG <- ifelse(DE_results_noNA$p_adj < 0.05 , 1,0)\n\n# note: function ifelse() goes through each adjusted p-value in the results\n# of differential expression analysis and in a new vector, assigns value 1\n# if the adjusted p-value is < 0.05 and else value 0\n\n# 4. assign each value of the vector the corresponding gene ID\nnames(bin_vec_DEG) <- rownames(DE_results_noNA)\n\n# 5. results: named binary vector bin_vec_DEG\n# note that we here inspect only the first few entries \nhead(bin_vec_DEG, n = 20)\n#> ENSG00000000419 ENSG00000000457 ENSG00000000460 \n#>               0               0               0 \n#> ENSG00000000938 ENSG00000001036 ENSG00000001167 \n#>               0               0               0 \n#> ENSG00000001497 ENSG00000001561 ENSG00000002016 \n#>               0               0               0 \n#> ENSG00000002330 ENSG00000002587 ENSG00000002745 \n#>               0               0               0 \n#> ENSG00000002834 ENSG00000002919 ENSG00000003056 \n#>               0               0               0 \n#> ENSG00000003096 ENSG00000003249 ENSG00000003989 \n#>               0               0               0 \n#> ENSG00000004468 ENSG00000004478 \n#>               0               0\n# (i) initial results table of differential expression analysis\ntable(DE_results$p_adj < 0.05)\n#> \n#> FALSE  TRUE \n#> 10128    22\n\n# (ii) results table of differential expression analysis subsetted to those genes\n# with a non-missing adjusted p-value\ntable(DE_results_noNA$p_adj < 0.05)\n#> \n#> FALSE  TRUE \n#> 10128    22\n\n# (iii) named binary vector  \ntable(bin_vec_DEG)\n#> bin_vec_DEG\n#>     0     1 \n#> 10128    22"},{"path":"go-seq.html","id":"step-2-calculate-value-of-probability-weighting-function-pwf","chapter":"7 Go SEQ","heading":"7.2.2 step 2: Calculate value of probability weighting function PWF","text":"GOSeq works function nullp() provides one row data gene following information:DEgenes: indicates status differential expression (0/1). information can directly extracted input objectDEgenes: indicates status differential expression (0/1). information can directly extracted input objectbias.data: numeric value bias gene concerning detection differential expression. usually corresponds length genebias.data: numeric value bias gene concerning detection differential expression. usually corresponds length genepwf: value probability weighting function genepwf: value probability weighting function geneNote values bias.data depend function argument bias.data function nullp(). (information )function arguments:DEgenes: named binary vector generated step 1DEgenes: named binary vector generated step 1genome: indicates organism gene expression measuredgenome: indicates organism gene expression measured-> specify organism = “hg19” human-> specify organism = “hg19” human-> organisms, argument must adapted accordingly (“mm9” mouse)-> organisms, argument must adapted accordingly (“mm9” mouse)id: indicates gene identifierid: indicates gene identifier-> specify id = “knownGene” Entrez gene ID\n-> specify id = “ensGene” Ensembl gene ID (case )\n-> specify id = “geneSymbol” HGNC gene symbolsFor overview available gene identifiers supported organisms see function supportedGeneIDs() (even better overview: View(supportedGeneIDs())Note 1: argument bias.data specifies data detection differential expression\nmight dependent . default value bias.data = NULL specifies length gene retrieved UCSC\ngenome browser, user can alternatively provide vector contains entry gene contained bin_vec_DEG. alternative suggested authors GOSeq account read count bias gene, .e. total number read counts across samples assigned individual geneNote 2: default, probability weight function plotted nullp() run. can deactivated adding function argument plot.fit = FALSE.","code":"\nProbabilityWeighting<- nullp(DEgenes = bin_vec_DEG,\n             genome= \"hg19\",\n             id= \"ensGene\")\n#> Loading hg19 length data...\n#> Warning in pcls(G): initial point very close to some\n#> inequality constraints"},{"path":"go-seq.html","id":"step-3-test-for-differential-enrichment","chapter":"7 Go SEQ","heading":"7.2.3 step 3: Test for differential enrichment","text":"function arguments:pwf: typically output nullp() function (step 2), .e. probability weighting function\ngenome: indicates organism gene expression measured (see also step 2)pwf: typically output nullp() function (step 2), .e. probability weighting function\ngenome: indicates organism gene expression measured (see also step 2)-> specify organism = “hg19” human-> specify organism = “hg19” human-> organisms, argument must adapted accordingly (“mm9” mouse)-> organisms, argument must adapted accordingly (“mm9” mouse)id: indicates gene identifier (see also step 2)id: indicates gene identifier (see also step 2)-> specify id = “knownGene” Entrez gene ID-> specify id = “knownGene” Entrez gene ID-> specify id = “ensGene” Ensembl gene ID-> specify id = “ensGene” Ensembl gene ID-> specify id = “geneSymbol” HGNC gene symbols-> specify id = “geneSymbol” HGNC gene symbolstest.cats: gene set databasetest.cats: gene set database-> “GO:BP”, “GO:MF”, “GO:CC” : geneset database GO respective subontology-> “GO:BP”, “GO:MF”, “GO:CC” : geneset database GO respective subontology-> “KEGG”: geneset database KEGG-> “KEGG”: geneset database KEGG","code":"\nGOSeq_results <- goseq(pwf = ProbabilityWeighting,\n                       genome = \"hg19\",\n                       id = \"ensGene\",\n                       test.cats = \"GO:BP\")\n#> Fetching GO annotations...\n#> Loading required package: AnnotationDbi\n#> Loading required package: stats4\n#> Loading required package: IRanges\n#> Loading required package: S4Vectors\n#> \n#> Attaching package: 'S4Vectors'\n#> The following object is masked from 'package:geneLenDataBase':\n#> \n#>     unfactor\n#> The following objects are masked from 'package:lubridate':\n#> \n#>     second, second<-\n#> The following objects are masked from 'package:dplyr':\n#> \n#>     first, rename\n#> The following object is masked from 'package:tidyr':\n#> \n#>     expand\n#> The following objects are masked from 'package:base':\n#> \n#>     expand.grid, I, unname\n#> \n#> Attaching package: 'IRanges'\n#> The following object is masked from 'package:lubridate':\n#> \n#>     %within%\n#> The following objects are masked from 'package:dplyr':\n#> \n#>     collapse, desc, slice\n#> The following object is masked from 'package:purrr':\n#> \n#>     reduce\n#> \n#> Attaching package: 'AnnotationDbi'\n#> The following object is masked from 'package:dplyr':\n#> \n#>     select\n#> \n#> For 975 genes, we could not find any categories. These genes will be excluded.\n#> To force their use, please run with use_genes_without_cat=TRUE (see documentation).\n#> This was the default behavior for version 1.15.1 and earlier.\n#> Calculating the p-values...\n#> 'select()' returned 1:1 mapping between keys and\n#> columns"},{"path":"go-seq.html","id":"step-4-multiple-test-adjustment","chapter":"7 Go SEQ","heading":"7.2.4 step 4: Multiple Test Adjustment","text":"Note GOSeq perform adjustment multiple testing internally MUST performed user manually. therefore add new column contains corresponding adjusted p-values. Relevant -representation test (unadjusted) p-values column “over_represented_pvalue” adjust multiple testing following:Note default, p.adjust() performs multiple test adjustment based Benjamini Hochberg.","code":"\nGOSeq_results$p_adj_overrepresented <- p.adjust(GOSeq_results$over_represented_pvalue)"},{"path":"go-seq.html","id":"step-5-interpretation-of-results-table","chapter":"7 Go SEQ","heading":"7.2.5 step 5: Interpretation of results table","text":"Inspect final results table:Columns results table:\n- Category: provides ID gene set (based choice gene set\ndatabase step 4)\n- over_represented_pvalue: p-value -representation\nIMPORTANT NOTE: use p-values assess differential enrichment\ngiven gene set, since p-value adjusted multiple\ntestingunder_represented_p-value: p-value -representation\n-> relevant want test -REPRESENTATIONIMPORTANT NOTE: interested testing -REPRESENTATION,\nmust adjust p-values multiple testing:numDEInCat: gives number differentially expressed genes input members given gene setnumDEInCat: gives number differentially expressed genes input members given gene setnumInCat: number genes members given gene setnumInCat: number genes members given gene setterm: description gene set\n-> NOTE: column provided geneset database GOterm: description gene set\n-> NOTE: column provided geneset database GOontology: subontology geneset database GO (based choice step 3)\n-> column provided geneset database GOontology: subontology geneset database GO (based choice step 3)\n-> column provided geneset database GOp_adj_overrepresented: p-value -representation ADJUSTED\nmultiple testing\n-> based adjusted p-values, differential enrichment (.e. significant\n-representation) can adjustedp_adj_overrepresented: p-value -representation ADJUSTED\nmultiple testing\n-> based adjusted p-values, differential enrichment (.e. significant\n-representation) can adjustedtypically: detect gene sets differentially enriched value \np_adj_overrepresented < 0.05typically: detect gene sets differentially enriched value \np_adj_overrepresented < 0.05","code":"\nhead(GOSeq_results, n = 10)\n#>        category over_represented_pvalue\n#> 9834 GO:0072132             0.001430378\n#> 8657 GO:0060806             0.001961853\n#> 3801 GO:0030036             0.003224870\n#> 5472 GO:0035965             0.003920070\n#> 6250 GO:0043503             0.003920070\n#> 9585 GO:0071557             0.003920070\n#> 3795 GO:0030029             0.004886029\n#> 2757 GO:0010957             0.005874659\n#> 8653 GO:0060800             0.005874659\n#> 9407 GO:0071205             0.005874659\n#>      under_represented_pvalue numDEInCat numInCat\n#> 9834                0.9999776          2       29\n#> 8657                1.0000000          1        1\n#> 3801                0.9996789          4      326\n#> 5472                0.9999964          1        2\n#> 6250                0.9999964          1        2\n#> 9585                0.9999964          1        2\n#> 3795                0.9994523          4      366\n#> 2757                0.9999891          1        3\n#> 8653                0.9999891          1        3\n#> 9407                0.9999891          1        3\n#>                                                                                        term\n#> 9834                                                               mesenchyme morphogenesis\n#> 8657 negative regulation of cell differentiation involved in embryonic placenta development\n#> 3801                                                        actin cytoskeleton organization\n#> 5472                                                      cardiolipin acyl-chain remodeling\n#> 6250                                                       skeletal muscle fiber adaptation\n#> 9585                                                           histone H3-K27 demethylation\n#> 3795                                                           actin filament-based process\n#> 2757                                  negative regulation of vitamin D biosynthetic process\n#> 8653          regulation of cell differentiation involved in embryonic placenta development\n#> 9407                                   protein localization to juxtaparanode region of axon\n#>      ontology p_adj_overrepresented\n#> 9834       BP                     1\n#> 8657       BP                     1\n#> 3801       BP                     1\n#> 5472       BP                     1\n#> 6250       BP                     1\n#> 9585       BP                     1\n#> 3795       BP                     1\n#> 2757       BP                     1\n#> 8653       BP                     1\n#> 9407       BP                     1\n#GOSeq_results$p_adj_underrepresented <- p.adjust(GOSeq_results$under_represented_pvalue)"},{"path":"go-seq.html","id":"researchers-degrees-of-freedom","chapter":"7 Go SEQ","heading":"7.3 (2.) Researchers’ degrees of freedom","text":"part, go parameters can adapted GOSeq workflow. important note intention behind going researchers’ degrees freedom give understanding can adapt given (parameter) setting research question. even important keep mind intention behind going flexible parameters change order help obtain preferable results systematically changing parameters since behaviour correspond “cherry-picking”. changes parameter choice must documented transparently.","code":""},{"path":"go-seq.html","id":"change-1-change-gene-set-database","chapter":"7 Go SEQ","heading":"7.3.1 change 1: Change gene set database","text":"gene set database can adjusted function goseq() argument “test.cats”, arguments therefore also results function pwf() remain untouched., want change gene set database KEGGNote gene set database KEGG specified, column “term” provided results table give description corresponding gene set.gene set databases can specified setting argument totest.cats = “GO:CC” -> GO subontology Cellular Componenttest.cats = “GO:MF” -> GO subontology Molecular Function","code":"\nGOSeq_results_database <- goseq(pwf = ProbabilityWeighting,\n                                genome = \"hg19\",\n                                id = \"ensGene\",\n                                test.cats = \"KEGG\")\n#> Fetching GO annotations...\n#> For 7379 genes, we could not find any categories. These genes will be excluded.\n#> To force their use, please run with use_genes_without_cat=TRUE (see documentation).\n#> This was the default behavior for version 1.15.1 and earlier.\n#> Calculating the p-values...\n\n\n# adjust the p-values of over-representation for multiple testing \nGOSeq_results_database$p_adj_overrepresented <- p.adjust(GOSeq_results_database$over_represented_pvalue)\n\n\n# inspect the results: \nhead(GOSeq_results_database, n = 10)\n#>     category over_represented_pvalue\n#> 15     00140              0.05635266\n#> 74     00830              0.07673671\n#> 112    04115              0.10657029\n#> 137    04520              0.12597435\n#> 131    04360              0.17891025\n#> 110    04110              0.19093847\n#> 138    04530              0.19392063\n#> 87     03010              0.20280787\n#> 118    04142              0.22894299\n#> 88     03013              0.24030903\n#>     under_represented_pvalue numDEInCat numInCat\n#> 15                 0.9986304          1       16\n#> 74                 0.9973939          1       22\n#> 112                0.9948443          1       31\n#> 137                0.9927007          1       37\n#> 131                0.9848226          1       54\n#> 110                0.9826028          1       58\n#> 138                0.9820271          1       59\n#> 87                 0.9802511          1       62\n#> 118                0.9744946          1       71\n#> 88                 0.9717372          1       75\n#>     p_adj_overrepresented\n#> 15                      1\n#> 74                      1\n#> 112                     1\n#> 137                     1\n#> 131                     1\n#> 110                     1\n#> 138                     1\n#> 87                      1\n#> 118                     1\n#> 88                      1"},{"path":"go-seq.html","id":"change-2-include-genes-that-are-no-member-of-any-gene-set-in-calculation-of-the-p-value","chapter":"7 Go SEQ","heading":"7.3.2 change 2: Include genes that are no member of any gene set in calculation of the p-value","text":"default, gene sets included calculation p-value member \nleast one gene set. However, user choice include genes input object,\nthus particularly member gene set.additional inclusion genes members gene set can specified argument “use_genes_without_cat”\nfunction goseq()Note argument “use_genes_without_cat = TRUE” used default earlier versions library goseq.","code":"\nGOSeq_results_allgenes <- goseq(pwf = ProbabilityWeighting,\n                                    genome = \"hg19\",\n                                    id = \"ensGene\",\n                                    test.cats = \"GO:BP\",\n                                    use_genes_without_cat = TRUE)\n#> Fetching GO annotations...\n#> Calculating the p-values...\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\n\n# adjust the p-values of over-representation for multiple testing \nGOSeq_results_allgenes$p_adj_overrepresented <- p.adjust(GOSeq_results_allgenes$over_represented_pvalue)\n\n# inspect the results: \nhead(GOSeq_results_allgenes, n = 10)\n#>        category over_represented_pvalue\n#> 9834 GO:0072132             0.001757439\n#> 8657 GO:0060806             0.002167488\n#> 5472 GO:0035965             0.004330490\n#> 6250 GO:0043503             0.004330490\n#> 9585 GO:0071557             0.004330490\n#> 3801 GO:0030036             0.004832970\n#> 2757 GO:0010957             0.006489017\n#> 8653 GO:0060800             0.006489017\n#> 9407 GO:0071205             0.006489017\n#> 3795 GO:0030029             0.007266539\n#>      under_represented_pvalue numDEInCat numInCat\n#> 9834                0.9999689          2       29\n#> 8657                1.0000000          1        1\n#> 5472                0.9999955          1        2\n#> 6250                0.9999955          1        2\n#> 9585                0.9999955          1        2\n#> 3801                0.9994439          4      326\n#> 2757                0.9999866          1        3\n#> 8653                0.9999866          1        3\n#> 9407                0.9999866          1        3\n#> 3795                0.9990595          4      366\n#>                                                                                        term\n#> 9834                                                               mesenchyme morphogenesis\n#> 8657 negative regulation of cell differentiation involved in embryonic placenta development\n#> 5472                                                      cardiolipin acyl-chain remodeling\n#> 6250                                                       skeletal muscle fiber adaptation\n#> 9585                                                           histone H3-K27 demethylation\n#> 3801                                                        actin cytoskeleton organization\n#> 2757                                  negative regulation of vitamin D biosynthetic process\n#> 8653          regulation of cell differentiation involved in embryonic placenta development\n#> 9407                                   protein localization to juxtaparanode region of axon\n#> 3795                                                           actin filament-based process\n#>      ontology p_adj_overrepresented\n#> 9834       BP                     1\n#> 8657       BP                     1\n#> 5472       BP                     1\n#> 6250       BP                     1\n#> 9585       BP                     1\n#> 3801       BP                     1\n#> 2757       BP                     1\n#> 8653       BP                     1\n#> 9407       BP                     1\n#> 3795       BP                     1"},{"path":"go-seq.html","id":"change-3-change-the-method-for-the-calculation-of-the-p-value","chapter":"7 Go SEQ","heading":"7.3.3 change 3: Change the method for the calculation of the p-value","text":"method calculation p-value can adapted function goseq() argument “method”., want change method calculation p-value Wallenius approximation computationally\nexpensive resampling.Note default, 2000 samples calculated course resampling (see argument “repcnt”). argument NEVER played around generate preferable results. Instead, advisable keep parameter default configuration.Also note , theoretically, GOSeq additionally offers use standard hypergeometric distribution method calculate p-value -representation. However, users explicitly advised using option since standard hypergeometric distribution adjust biases might present data.","code":"GOSeq_results_method <- goseq(pwf = ProbabilityWeighting,\n                              genome = \"hg19\",\n                              id = \"ensGene\",\n                              test.cats = \"GO:BP\",\n                              method = \"Sampling\")\n#> 0 %   \n0 %   \n0 %   \n0 %   \n0 %   \n0 %   \n0 %   \n0 %   \n0 %   \n0 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n1 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n2 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n3 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n4 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n5 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n6 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n7 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n8 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n9 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n10 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n11 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n12 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n13 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n14 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n15 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n16 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n17 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n18 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n19 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n20 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n21 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n22 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n23 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n24 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n25 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n26 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n27 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n28 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n29 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n30 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n31 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n32 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n33 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n34 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n35 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n36 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n37 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n38 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n39 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n40 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n41 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n42 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n43 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n44 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n45 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n46 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n47 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n48 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n49 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n50 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n51 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n52 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n53 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n54 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n55 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n56 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n57 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n58 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n59 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n60 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n61 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n62 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n63 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n64 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n65 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n66 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n67 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n68 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n69 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n70 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n71 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n72 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n73 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n74 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n75 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n76 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n77 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n78 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n79 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n80 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n81 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n82 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n83 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n84 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n85 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n86 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n87 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n88 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n89 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n90 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n91 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n92 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n93 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n94 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n95 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n96 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n97 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n98 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n99 %   \n100 %   \n100 %   \n100 %   \n100 %   \n100 %   \n100 %   \n100 %   \n100 %   \n100 %   \n100 %   \n100 %   \n\n\n# adjust the p-values of over-representation for multiple testing \nGOSeq_results_method$p_adj_overrepresented <- p.adjust(GOSeq_results_method$over_represented_pvalue)\n\n\n# inspect the results: \nhead(GOSeq_results_method, n = 10 )\n#>         category over_represented_pvalue\n#> 5472  GO:0035965             0.001999000\n#> 9834  GO:0072132             0.001999000\n#> 8657  GO:0060806             0.002498751\n#> 3801  GO:0030036             0.002998501\n#> 3795  GO:0030029             0.003998001\n#> 6250  GO:0043503             0.004497751\n#> 9585  GO:0071557             0.004997501\n#> 3972  GO:0030833             0.005497251\n#> 2737  GO:0010927             0.005997001\n#> 10184 GO:0090131             0.005997001\n#>       under_represented_pvalue numDEInCat numInCat\n#> 5472                         1          1        2\n#> 9834                         1          2       29\n#> 8657                         1          1        1\n#> 3801                         1          4      326\n#> 3795                         1          4      366\n#> 6250                         1          1        2\n#> 9585                         1          1        2\n#> 3972                         1          2       66\n#> 2737                         1          2       61\n#> 10184                        1          1        4\n#>                                                                                         term\n#> 5472                                                       cardiolipin acyl-chain remodeling\n#> 9834                                                                mesenchyme morphogenesis\n#> 8657  negative regulation of cell differentiation involved in embryonic placenta development\n#> 3801                                                         actin cytoskeleton organization\n#> 3795                                                            actin filament-based process\n#> 6250                                                        skeletal muscle fiber adaptation\n#> 9585                                                            histone H3-K27 demethylation\n#> 3972                                             regulation of actin filament polymerization\n#> 2737                                   cellular component assembly involved in morphogenesis\n#> 10184                                                                   mesenchyme migration\n#>       ontology p_adj_overrepresented\n#> 5472        BP                     1\n#> 9834        BP                     1\n#> 8657        BP                     1\n#> 3801        BP                     1\n#> 3795        BP                     1\n#> 6250        BP                     1\n#> 9585        BP                     1\n#> 3972        BP                     1\n#> 2737        BP                     1\n#> 10184       BP                     1"},{"path":"go-seq.html","id":"change-4-change-the-bias-to-account-for-in-the-analysis","chapter":"7 Go SEQ","heading":"7.3.4 change 4: Change the bias to account for in the analysis","text":"example taken user manual GOSeq, now want adjust total number counts gene. idea behind context RNA-Seq data, magnitude counts given gene sets reflects overall expression level. RNA-Seq data, takes form count data, higher magnitude counts leads increased statistical power (detect gene differentially expressed). important note accounting total number counts might also remove bias results actual differential expression conditions.","code":""},{"path":"go-seq.html","id":"step-1-create-a-vector-that-contains-the-total-number-of-read-counts-for-each-gene","chapter":"7 Go SEQ","heading":"7.3.4.0.1 step 1: create a vector that contains the total number of read counts for each gene","text":"","code":"\n# 1. Compute the sum of read counts of each gene across all samples from the gene expression data set\ncountbias <- rowSums(expression_data)\n\n# 2. Subset the vector countbias to all genes that are part of the input object bin_vec_DEG\n\n# (i) indicate which genes are a part of the input object:\nind_input <- names(countbias) %in% names(bin_vec_DEG)\n\n# (ii) subset vector countbias\ncountbias <- countbias[ind_input]"},{"path":"go-seq.html","id":"step-2-provide-countbias-to-function-nullp","chapter":"7 Go SEQ","heading":"7.3.4.0.2 step 2: Provide countbias to function nullp()","text":"custom bias can provided function nullp() argument “bias.data”:","code":"\nProbabilityWeighting_countbias <- nullp(DEgenes = bin_vec_DEG,\n                                        genome= \"hg19\",\n                                        id= \"ensGene\",\n                                        bias.data = countbias) # countbias"},{"path":"go-seq.html","id":"step-3-run-function-goseq-with-adjusted-probability-weightings","chapter":"7 Go SEQ","heading":"7.3.4.0.3 step 3: Run function goseq() with adjusted probability weightings","text":"","code":"\nGOSeq_results_countbias <- goseq(pwf = ProbabilityWeighting_countbias, # adjusted probability weightings\n                                 genome = \"hg19\",\n                                 id = \"ensGene\",\n                                 test.cats = \"GO:BP\")\n#> Fetching GO annotations...\n#> For 975 genes, we could not find any categories. These genes will be excluded.\n#> To force their use, please run with use_genes_without_cat=TRUE (see documentation).\n#> This was the default behavior for version 1.15.1 and earlier.\n#> Calculating the p-values...\n#> 'select()' returned 1:1 mapping between keys and\n#> columns"},{"path":"go-seq.html","id":"step-4-perform-adjustment-for-multiple-testing-and-inspect-final-results","chapter":"7 Go SEQ","heading":"7.3.4.0.4 step 4: Perform adjustment for multiple testing and inspect final results","text":"","code":"\nGOSeq_results_countbias$p_adj_overrepresented <- p.adjust(GOSeq_results_countbias$over_represented_pvalue)"},{"path":"cluster-profiler-gsea-go.html","id":"cluster-profiler-gsea-go","chapter":"8 Cluster Profiler: GSEA GO","heading":"8 Cluster Profiler: GSEA GO","text":"script, following two things:\n- 1. Based results differential expression analysis voom/limma, DESeq2, edgeR, go \nsteps required run clusterProfiler’s GSEA gene set database GO.\n- 2. go (meaningful) researchers’ degrees freedom.Note provide separate file gene set databases GO KEGG since clusterProfiler differs accepted gene ID formats . GO, variety formats, including Ensembl ID, accepted, gene IDs must converted NCBI (Entrez) ID choosing KEGG.","code":""},{"path":"cluster-profiler-gsea-go.html","id":"libraries-6","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.0.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"org.Hs.eg.db\")\nBiocManager::install(\"DESeq2\")"},{"path":"cluster-profiler-gsea-go.html","id":"load-libraries-3","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.0.1.1 Load Libraries","text":"Description packagesclusterProfiler: use clusterProfiler’s implementation GSEA.clusterProfiler: use clusterProfiler’s implementation GSEA.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (‘Overview_Packages’). Note library required running clusterProfiler’s GSEA gene set database GO.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (‘Overview_Packages’). Note library required running clusterProfiler’s GSEA gene set database GO.DESeq2: contrast detecting differential expressed genes, done solely based adjusted \\(p\\)-vaules, additionally use estimated log fold changes generating gene ranking. DESeq2, estimated log fold change values shrunken using additional function, hence loading library.DESeq2: contrast detecting differential expressed genes, done solely based adjusted \\(p\\)-vaules, additionally use estimated log fold changes generating gene ranking. DESeq2, estimated log fold change values shrunken using additional function, hence loading library.","code":"\n\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db)\nlibrary(DESeq2)"},{"path":"cluster-profiler-gsea-go.html","id":"load-the-data","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.0.2 Load the data","text":"Note , described , clusterProfiler accepts Ensembl IDs working gene set database GO. generating ranking genes DESeq2, shrinkage log fold change estimates performed requires output function DESeq(), named “dds” (see “Instructions_Differential_Expression_Analysis”).","code":"\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_limma_Ensembl.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_DESeq2_Ensembl.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_edgeR_Ensembl.Rdata\")\n\n# load dds object \nload(\"./data/Results_Differential_Expression_Analysis/dds_Ensembl.Rdata\")"},{"path":"cluster-profiler-gsea-go.html","id":"run-gsea","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.1 Run GSEA","text":"","code":""},{"path":"cluster-profiler-gsea-go.html","id":"step-1-generation-of-required-input-object","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.1.1 step 1: Generation of Required Input Object","text":"following, illustrate creation required input object using three different methods differential expression analysis, voom/limma, DESeq2, edgeR, shall serve three options. required input object clusterProfiler “order ranked geneList”, .e. vector ranking value gene, named respective gene IDs ordered descending manner.","code":""},{"path":"cluster-profiler-gsea-go.html","id":"option-1-generate-required-input-using-voomlimma","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.1.1.1 1.1 Option 1: Generate required input using voom/limma","text":"formula generating gene ranking results table differential expression analysis \\((-1) * log_{10}(p\\text{-value}) * \\text{sign}(\\text{log fold change})\\). Note “\\(p\\)-value” denotes non-adjusted p-value.","code":"\n\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_limma_Ensembl <- !is.na(DE_results_limma_Ensembl$P.Value)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA_Ensembl <- DE_results_limma_Ensembl[ind_nonNA_pvalue_limma_Ensembl, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_limma_Ensembl <- sign(DE_results_noNA_Ensembl$logFC)*(-1)*log10(DE_results_noNA_Ensembl$P.Value)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_limma_Ensembl) <- rownames(DE_results_noNA_Ensembl)\n\n# 4. sort the vector in descending order\nrankvec_limma_Ensembl <- sort(rankvec_limma_Ensembl, decreasing=TRUE)\n\n# inspect the first entries of the ranking vector\nhead(rankvec_limma_Ensembl , n = 10)\n#> ENSG00000129824 ENSG00000099749 ENSG00000154620 \n#>       54.973990       50.395302       38.292623 \n#> ENSG00000120868 ENSG00000110031 ENSG00000151445 \n#>        3.569036        3.262283        3.222725 \n#> ENSG00000065308 ENSG00000095015 ENSG00000198689 \n#>        3.198940        3.033258        2.949591 \n#> ENSG00000102893 \n#>        2.915174"},{"path":"cluster-profiler-gsea-go.html","id":"option-2-generate-required-input-using-deseq2","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.1.1.2 1.2 Option 2: Generate required input using DESeq2","text":"","code":""},{"path":"cluster-profiler-gsea-go.html","id":"i-perform-differential-expression-analysis","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.1.1.2.1 (i) Perform Differential Expression Analysis","text":"step performed script Instructions_Differential_Expression_Analysis.R. Note must exit DESeq2 workflow script steps early since additional step required creation required input object. proceed object “dds_Ensembl” ’ve obtained step 3 DESeq2’s workflow differential expression analysis.","code":"\ndds_Ensembl\n#> class: DESeqDataSet \n#> dim: 10151 69 \n#> metadata(1): version\n#> assays(6): counts mu ... replaceCounts replaceCooks\n#> rownames(10151): ENSG00000000419 ENSG00000000457 ...\n#>   ENSG00000254245 ENSG00000254290\n#> rowData names(23): baseMean baseVar ... maxCooks\n#>   replace\n#> colnames(69): NA18486 NA18498 ... NA19239 NA19257\n#> colData names(3): condition sizeFactor replaceable"},{"path":"cluster-profiler-gsea-go.html","id":"ii-shrink-estimated-log-fold-change-values","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.1.1.2.2 (ii) Shrink estimated log fold change values","text":"intuition behind shrinkage log fold change values , mentioned paper, RNA-Seq data consists (raw form) count data inherently heteroscedastic, .e. variance count data depends mean count count data. observable ratios counts considerably noisier low magnitudes counts compared higher magnitudes, .e. log fold changes conditions higher overall magnitude counts lower.DESeq2 addresses issue shrinking estimated log fold changes direction 0 magnitude shrinkage higher available information gene lower (may low magnitude counts, high dispersion\ndegrees freedom.). detailed description provided DESeq2 paper Love et al. (2014).Perform shrinkage:Function arguments:type: method perform shrinkage. opt default “apeglm” can choose two alternative options\nwelltype: method perform shrinkage. opt default “apeglm” can choose two alternative options\nwellcoef: indicate coefficients shrunk. can obtain right argument following function call:coef: indicate coefficients shrunk. can obtain right argument following function call:command shows us can either shrink intercept “condition_treated_vs_untreated”. Since want shrink intercept estimated log fold changes, opt second option “condition_treated_vs_untreated”.","code":"\n  DE_results_DESeq2_shrink_Ensembl <- lfcShrink(dds_Ensembl,\n                                               coef = \"condition_treated_vs_untreated\",\n                                               type=\"apeglm\")\nresultsNames(dds_Ensembl)\n#> [1] \"Intercept\"                     \n#> [2] \"condition_treated_vs_untreated\""},{"path":"cluster-profiler-gsea-go.html","id":"iii-generate-the-ranked-list-of-the-genes-based-on-the-results-of-differential-expression-analysis","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.1.1.2.3 (iii) Generate the ranked list of the genes based on the results of differential expression analysis","text":"formula generating gene ranking results table differential expression analysis $ (-1) * log_{10}(p) * ()\\(. Note \"\\)p$-value” denotes non-adjusted p-value.","code":"\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_Ensembl <- !is.na(DE_results_DESeq2_shrink_Ensembl$pvalue)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA_Ensembl <- DE_results_DESeq2_shrink_Ensembl[ind_nonNA_pvalue_Ensembl, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_DESeq2_Ensembl <- sign(DE_results_noNA_Ensembl$log2FoldChange)*(-1)*log10(DE_results_noNA_Ensembl$pvalue)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_DESeq2_Ensembl) <- rownames(DE_results_noNA_Ensembl)\n\n# 4. sort the vector in descending order\nrankvec_DESeq2_Ensembl <- sort(rankvec_DESeq2_Ensembl, decreasing=TRUE)\n\n\n# inspect the first entries of the ranking vector\nhead(rankvec_DESeq2_Ensembl , n = 10)\n#> ENSG00000129824 ENSG00000099749 ENSG00000198692 \n#>      204.454993      105.507250       75.109639 \n#> ENSG00000154620 ENSG00000157828 ENSG00000183878 \n#>       64.872131       39.560339        7.260319 \n#> ENSG00000143632 ENSG00000172543 ENSG00000082397 \n#>        4.867166        4.469387        3.999177 \n#> ENSG00000107731 \n#>        3.973429"},{"path":"cluster-profiler-gsea-go.html","id":"option-3-generate-required-input-using-edger","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.1.2 1.3 Option 3: Generate required input using edgeR","text":"formula generating gene ranking results table differential expression analysis \\((-1) * log_{10}(p\\text{-value}) * \\text{sign}(\\text{log fold change})\\). Note “\\(p\\)-value” denotes non-adjusted p-value.","code":"\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_Ensembl <- !is.na(DE_results_edgeR_Ensembl$PValue)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA_Ensembl <- DE_results_edgeR_Ensembl[ind_nonNA_pvalue_Ensembl, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_edgeR_Ensembl <- sign(DE_results_noNA_Ensembl$logFC)*(-1)*log10(DE_results_noNA_Ensembl$p_adj)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_edgeR_Ensembl) <- rownames(DE_results_noNA_Ensembl)\n\n# 4. sort the vector in descending order\nrankvec_edgeR_Ensembl <- sort(rankvec_edgeR_Ensembl, decreasing=TRUE)\n\n# inspect ranking vector: \nhead(rankvec_edgeR_Ensembl, n = 10)\n#> ENSG00000129824 ENSG00000099749 ENSG00000154620 \n#>             Inf     192.9498029     118.5930433 \n#> ENSG00000172543 ENSG00000120868 ENSG00000110031 \n#>       1.7058094       1.0563194       1.0370201 \n#> ENSG00000198689 ENSG00000065308 ENSG00000095015 \n#>       0.9865108       0.8790009       0.8790009 \n#> ENSG00000228253 \n#>       0.8654283\n\n# 5. special problem here: gene ENSG00000129824 has a ranking value Inf since its adjusted\n# p-value in the results table of differential expression analysis amounts to 0\n\n# here, we deal with this issue by resetting this ranking value to the highest ranking value\n# that occurs among the remaining genes\n# -> note that there is NO common way of dealing with this issue\nrankvec_edgeR_Ensembl[rankvec_edgeR_Ensembl == Inf] <- max(rankvec_edgeR_Ensembl[rankvec_edgeR_Ensembl != Inf])\n\n# inspect ranking vector once more: \nhead(rankvec_edgeR_Ensembl, n = 10)\n#> ENSG00000129824 ENSG00000099749 ENSG00000154620 \n#>     192.9498029     192.9498029     118.5930433 \n#> ENSG00000172543 ENSG00000120868 ENSG00000110031 \n#>       1.7058094       1.0563194       1.0370201 \n#> ENSG00000198689 ENSG00000065308 ENSG00000095015 \n#>       0.9865108       0.8790009       0.8790009 \n#> ENSG00000228253 \n#>       0.8654283"},{"path":"cluster-profiler-gsea-go.html","id":"step-2-run-gsea-with-gene-set-database-go","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.1.3 step 2: Run GSEA with gene set database GO","text":"purpose simplicity, work ranking generated using limma. However, can switch around discretion.Run GSEA gene set database GO. Note important set seed reproducibility.Arguments function gseGO():geneList: vector gene ranking (generated manner step 1)geneList: vector gene ranking (generated manner step 1)ont: subontology GO (must one “BP”, “CC”, “MF”)ont: subontology GO (must one “BP”, “CC”, “MF”)OrgDb: indicates organism gene expression measurements takenOrgDb: indicates organism gene expression measurements takenkeyTypes: purposes , argument keyType indicates gene ID format gene names vector rankveckeyTypes: purposes , argument keyType indicates gene ID format gene names vector rankvecavailable keytypes can found following:available keytypes can found following:seed = TRUE: set seed indicated (: seed = 1 )seed = TRUE: set seed indicated (: seed = 1 )additional arguments (appear code lines since keep default options)additional arguments (appear code lines since keep default options)exponent 1: calculation enrichment score, gene weighted absolute value ranking metricexponent 1: calculation enrichment score, gene weighted absolute value ranking metriceps = 1e-10: p-value smaller 1e-10 indicated 1e-10eps = 1e-10: p-value smaller 1e-10 indicated 1e-10pvalueCutoff = 0.05: gene sets p-value < 0.05 indicated results. Note want inspect gene sets results, set pvalueCutoff = 1pvalueCutoff = 0.05: gene sets p-value < 0.05 indicated results. Note want inspect gene sets results, set pvalueCutoff = 1pAdjustMethod = “BH”: adjustment multiple testing using method Benjamini HochbergpAdjustMethod = “BH”: adjustment multiple testing using method Benjamini Hochberg","code":"\nrankvec_Ensembl <- rankvec_limma_Ensembl\n\n# alternatively: \n#rankvec_Ensembl <- rankvec_DESeq2_Ensembl\n#rankvec_Ensembl <- rankvec_edgeR_Ensembl\n\n# important: set seed for reprodubibility\nset.seed(1)\n\nGSEA_GO <- gseGO(geneList = rankvec_Ensembl,\n                   ont = \"BP\",\n                   OrgDb = org.Hs.eg.db,\n                   keyType = \"ENSEMBL\",\n                   seed = TRUE) # set seed for reproducibility\n\n\n# inspect the corresponding results \nhead(GSEA_GO, n = 10 )\n#>                    ID\n#> GO:0002694 GO:0002694\n#> GO:0050865 GO:0050865\n#> GO:0045321 GO:0045321\n#> GO:0050863 GO:0050863\n#> GO:0001775 GO:0001775\n#> GO:0051249 GO:0051249\n#> GO:0050867 GO:0050867\n#> GO:0051251 GO:0051251\n#> GO:0002696 GO:0002696\n#> GO:0098609 GO:0098609\n#>                                             Description\n#> GO:0002694           regulation of leukocyte activation\n#> GO:0050865                regulation of cell activation\n#> GO:0045321                         leukocyte activation\n#> GO:0050863              regulation of T cell activation\n#> GO:0001775                              cell activation\n#> GO:0051249          regulation of lymphocyte activation\n#> GO:0050867       positive regulation of cell activation\n#> GO:0051251 positive regulation of lymphocyte activation\n#> GO:0002696  positive regulation of leukocyte activation\n#> GO:0098609                           cell-cell adhesion\n#>            setSize enrichmentScore       NES       pvalue\n#> GO:0002694     219      -0.4538535 -1.871372 2.478751e-07\n#> GO:0050865     232      -0.4464877 -1.843713 1.990043e-07\n#> GO:0045321     334      -0.4142950 -1.780532 9.811474e-08\n#> GO:0050863     146      -0.5022111 -1.977090 4.610938e-07\n#> GO:0001775     377      -0.3951803 -1.717809 4.099930e-07\n#> GO:0051249     185      -0.4665593 -1.899849 5.661556e-07\n#> GO:0050867     149      -0.4915790 -1.941660 7.600078e-07\n#> GO:0051251     130      -0.5062219 -1.963565 8.874654e-07\n#> GO:0002696     146      -0.4938384 -1.944128 1.180204e-06\n#> GO:0098609     268      -0.4192255 -1.756435 1.120187e-06\n#>                p.adjust       qvalue rank\n#> GO:0002694 0.0003077782 0.0002683139  841\n#> GO:0050865 0.0003077782 0.0002683139  778\n#> GO:0045321 0.0003077782 0.0002683139  841\n#> GO:0050863 0.0003435149 0.0002994683  841\n#> GO:0001775 0.0003435149 0.0002994683  782\n#> GO:0051249 0.0003514882 0.0003064193  910\n#> GO:0050867 0.0004044327 0.0003525751 1417\n#> GO:0051251 0.0004132261 0.0003602409 1375\n#> GO:0002696 0.0004396259 0.0003832557 1417\n#> GO:0098609 0.0004396259 0.0003832557  778\n#>                              leading_edge\n#> GO:0002694 tags=26%, list=13%, signal=23%\n#> GO:0050865 tags=24%, list=12%, signal=22%\n#> GO:0045321 tags=23%, list=13%, signal=21%\n#> GO:0050863 tags=29%, list=13%, signal=25%\n#> GO:0001775 tags=22%, list=13%, signal=20%\n#> GO:0051249 tags=28%, list=15%, signal=24%\n#> GO:0050867 tags=40%, list=23%, signal=32%\n#> GO:0051251 tags=42%, list=22%, signal=33%\n#> GO:0002696 tags=41%, list=23%, signal=33%\n#> GO:0098609 tags=24%, list=12%, signal=22%\ncore_enrichment\n#> GO:0002694                                                                                                                                                                                                                                                                                                                                                                                                                                 ENSG00000121594/ENSG00000125735/ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000091972/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000126368/ENSG00000131981/ENSG00000119508/ENSG00000090776/ENSG00000125726/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000196839/ENSG00000159958/ENSG00000163874/ENSG00000198435/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000176170/ENSG00000232810/ENSG00000223496/ENSG00000167604/ENSG00000130164/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000185338/ENSG00000171223/ENSG00000130522/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008\n#> GO:0050865                                                                                                                                                                                                                                                                                                                                                                                                                                 ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000154127/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000091972/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000126368/ENSG00000131981/ENSG00000119508/ENSG00000090776/ENSG00000125726/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000010278/ENSG00000196839/ENSG00000159958/ENSG00000163874/ENSG00000198435/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000176170/ENSG00000232810/ENSG00000223496/ENSG00000167604/ENSG00000130164/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000185338/ENSG00000171223/ENSG00000130522/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008\n#> GO:0045321                                                                                 ENSG00000121594/ENSG00000125735/ENSG00000177697/ENSG00000120738/ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000197405/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000091972/ENSG00000215021/ENSG00000179388/ENSG00000232629/ENSG00000155760/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000168264/ENSG00000012061/ENSG00000205220/ENSG00000126368/ENSG00000131981/ENSG00000119508/ENSG00000090776/ENSG00000090339/ENSG00000125726/ENSG00000153879/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000105438/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000168447/ENSG00000196839/ENSG00000071564/ENSG00000184371/ENSG00000159958/ENSG00000131188/ENSG00000163874/ENSG00000198435/ENSG00000105374/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000176170/ENSG00000232810/ENSG00000103522/ENSG00000223496/ENSG00000167604/ENSG00000130164/ENSG00000078902/ENSG00000140968/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000160683/ENSG00000185338/ENSG00000171223/ENSG00000130522/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008/ENSG00000177606\nn#> GO:0001775 ENSG00000121594/ENSG00000125735/ENSG00000177697/ENSG00000120738/ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000154127/ENSG00000204287/ENSG00000197405/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000091972/ENSG00000215021/ENSG00000179388/ENSG00000232629/ENSG00000155760/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000135124/ENSG00000104951/ENSG00000183624/ENSG00000168264/ENSG00000012061/ENSG00000205220/ENSG00000126368/ENSG00000131981/ENSG00000119508/ENSG00000090776/ENSG00000090339/ENSG00000125726/ENSG00000153879/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000105438/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000010278/ENSG00000168447/ENSG00000196839/ENSG00000071564/ENSG00000184371/ENSG00000159958/ENSG00000131188/ENSG00000163874/ENSG00000198435/ENSG00000105374/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000176170/ENSG00000232810/ENSG00000103522/ENSG00000223496/ENSG00000167604/ENSG00000130164/ENSG00000078902/ENSG00000140968/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000186222/ENSG00000160683/ENSG00000106211/ENSG00000185338/ENSG00000171223/ENSG00000130522/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008/ENSG00000177606\n#> GO:0051249                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ENSG00000196126/ENSG00000189114/ENSG00000121594/ENSG00000125735/ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000131981/ENSG00000090776/ENSG00000125726/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000196839/ENSG00000159958/ENSG00000163874/ENSG00000198435/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000223496/ENSG00000167604/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000185338/ENSG00000171223/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008\n#> GO:0050867                                                                                                                                                                                                                                                                                                                                                                 ENSG00000113811/ENSG00000174130/ENSG00000186827/ENSG00000130475/ENSG00000103653/ENSG00000185950/ENSG00000019582/ENSG00000154096/ENSG00000107968/ENSG00000149273/ENSG00000135426/ENSG00000033327/ENSG00000198502/ENSG00000105639/ENSG00000135334/ENSG00000168040/ENSG00000196126/ENSG00000189114/ENSG00000121594/ENSG00000125735/ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000119508/ENSG00000090776/ENSG00000125726/ENSG00000117090/ENSG00000197329/ENSG00000204592/ENSG00000107338/ENSG00000196839/ENSG00000159958/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000232810/ENSG00000223496/ENSG00000167604/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000125657/ENSG00000185338/ENSG00000130522/ENSG00000105974/ENSG00000115008\n#> GO:0051251                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ENSG00000186827/ENSG00000130475/ENSG00000103653/ENSG00000185950/ENSG00000019582/ENSG00000154096/ENSG00000107968/ENSG00000149273/ENSG00000135426/ENSG00000198502/ENSG00000105639/ENSG00000135334/ENSG00000168040/ENSG00000196126/ENSG00000189114/ENSG00000121594/ENSG00000125735/ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000090776/ENSG00000125726/ENSG00000117090/ENSG00000197329/ENSG00000204592/ENSG00000107338/ENSG00000196839/ENSG00000159958/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000223496/ENSG00000167604/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000125657/ENSG00000185338/ENSG00000105974/ENSG00000115008\n#> GO:0002696                                                                                                                                                                                                                                                                                                                                                                 ENSG00000113811/ENSG00000174130/ENSG00000186827/ENSG00000130475/ENSG00000103653/ENSG00000185950/ENSG00000019582/ENSG00000154096/ENSG00000107968/ENSG00000149273/ENSG00000135426/ENSG00000033327/ENSG00000198502/ENSG00000105639/ENSG00000135334/ENSG00000168040/ENSG00000196126/ENSG00000189114/ENSG00000121594/ENSG00000125735/ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000119508/ENSG00000090776/ENSG00000125726/ENSG00000117090/ENSG00000197329/ENSG00000204592/ENSG00000107338/ENSG00000196839/ENSG00000159958/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000232810/ENSG00000223496/ENSG00000167604/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000125657/ENSG00000185338/ENSG00000130522/ENSG00000105974/ENSG00000115008\n#> GO:0098609                                                                                                                                                                                                                                                                                                 ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000148948/ENSG00000183655/ENSG00000154127/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000140678/ENSG00000172977/ENSG00000172270/ENSG00000171236/ENSG00000091972/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000154134/ENSG00000108622/ENSG00000112149/ENSG00000104951/ENSG00000129474/ENSG00000105376/ENSG00000161638/ENSG00000131981/ENSG00000119508/ENSG00000090776/ENSG00000090339/ENSG00000125726/ENSG00000108861/ENSG00000164442/ENSG00000117090/ENSG00000197329/ENSG00000130669/ENSG00000204592/ENSG00000179820/ENSG00000107338/ENSG00000010278/ENSG00000196839/ENSG00000159958/ENSG00000163874/ENSG00000198435/ENSG00000253958/ENSG00000160223/ENSG00000113302/ENSG00000167642/ENSG00000232810/ENSG00000167604/ENSG00000169992/ENSG00000076826/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000125398/ENSG00000143507/ENSG00000125657/ENSG00000186222/ENSG00000171840/ENSG00000106211/ENSG00000185338/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008\nkeytypes(org.Hs.eg.db)\n#>  [1] \"ACCNUM\"       \"ALIAS\"        \"ENSEMBL\"     \n#>  [4] \"ENSEMBLPROT\"  \"ENSEMBLTRANS\" \"ENTREZID\"    \n#>  [7] \"ENZYME\"       \"EVIDENCE\"     \"EVIDENCEALL\" \n#> [10] \"GENENAME\"     \"GENETYPE\"     \"GO\"          \n#> [13] \"GOALL\"        \"IPI\"          \"MAP\"         \n#> [16] \"OMIM\"         \"ONTOLOGY\"     \"ONTOLOGYALL\" \n#> [19] \"PATH\"         \"PFAM\"         \"PMID\"        \n#> [22] \"PROSITE\"      \"REFSEQ\"       \"SYMBOL\"      \n#> [25] \"UCSCKG\"       \"UNIPROT\""},{"path":"cluster-profiler-gsea-go.html","id":"step-3-interpretation-of-the-results","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.1.4 step 3: Interpretation of the results","text":"Columns results table:ID: ID gene setID: ID gene setDescription: Description Gene SetDescription: Description Gene SetsetSize: Size gene setsetSize: Size gene setenrichmentScore: Enrichment Score\n–> note: enrichment score normalized gene set size\n–> means: larger gene sets automatically bigger (absolute) enrichment score,\n–> independent actual differential enrichment\n–> raw enrichment score therefore comparable different gene setsenrichmentScore: Enrichment Score\n–> note: enrichment score normalized gene set size\n–> means: larger gene sets automatically bigger (absolute) enrichment score,\n–> independent actual differential enrichment\n–> raw enrichment score therefore comparable different gene setsNES: Normalized version column enrichmentScore\n-> NES can compared different gene setsNES: Normalized version column enrichmentScore\n-> NES can compared different gene setspvalue: p-value enrichment given gene set\n-> note: raw p-value adjusted multiple testing\n-> therefore: used assess differential enrichment given gene setpvalue: p-value enrichment given gene set\n-> note: raw p-value adjusted multiple testing\n-> therefore: used assess differential enrichment given gene setp.adjust: ADJUSTED p-value given gene set. Note p-value now adjusted multiple testing can therefore used assess differential enrichment. instance, detect genes p.adjust < 0.05 differentially enriched.p.adjust: ADJUSTED p-value given gene set. Note p-value now adjusted multiple testing can therefore used assess differential enrichment. instance, detect genes p.adjust < 0.05 differentially enriched.qvalue: ADJUSTED p-value given gene set. Note qvalue analog p.adjust, adjusted multiple testing\nusing different method.qvalue: ADJUSTED p-value given gene set. Note qvalue analog p.adjust, adjusted multiple testing\nusing different method.->> can either use column p.adjust qvalue assess whether gene set differentially enriched .rank: position ranked list genes maximum difference two sums occurs, .e. rank enrichment score extracted.rank: position ranked list genes maximum difference two sums occurs, .e. rank enrichment score extracted.leading_edge:\ntags: percentage genes ranked list members gene set (positive enrichment score)\n(negative enrichment score) position enrichment score extracted.\nlist: percentage genes ranked gene list (positive enrichment\nscore) (negative enrichment score) position enrichment score extracted.\nsignal: enrichment signal strength\ncombines statistics “tags” “list”\ncore_enrichment: genes contribute enrichment results\nleading_edge:tags: percentage genes ranked list members gene set (positive enrichment score)\n(negative enrichment score) position enrichment score extracted.tags: percentage genes ranked list members gene set (positive enrichment score)\n(negative enrichment score) position enrichment score extracted.list: percentage genes ranked gene list (positive enrichment\nscore) (negative enrichment score) position enrichment score extracted.list: percentage genes ranked gene list (positive enrichment\nscore) (negative enrichment score) position enrichment score extracted.signal: enrichment signal strength\ncombines statistics “tags” “list”signal: enrichment signal strength\ncombines statistics “tags” “list”core_enrichment: genes contribute enrichment resultscore_enrichment: genes contribute enrichment resultsNote detailed information leading_edge core_enrichment can found user manual provided GSEA:\nhttps://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html :search Detailed Enrichment Results (section “Leading Edge”)search Detailed Enrichment Results (section “Leading Edge”)search CORE ENRICHMENTsearch CORE ENRICHMENT","code":""},{"path":"cluster-profiler-gsea-go.html","id":"researchers-degrees-of-freedom-1","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.2 Researchers’ degrees of freedom","text":"part, go parameters can adapted GOSeq workflow. important note intention behind going researchers’ degrees freedom give understanding can adapt given (parameter) setting research question. even important keep mind intention behind going flexible parameters change order help obtain preferable results systematically changing parameters since behaviour correspond “cherry-picking”. changes parameter choice must documented transparently.","code":""},{"path":"cluster-profiler-gsea-go.html","id":"change-1-change-exponent","chapter":"8 Cluster Profiler: GSEA GO","heading":"8.2.1 change 1: change exponent","text":"Note , contrast web-based tool GSEA, clusterProfiler make indication alternative exponent values allowed sensible. oOne stick web-based tool GSEA suggests, addition default exponent value 1, alternative values 0, 1.5, 2., change exponent value 2","code":"\n# important: set seed for reproducibility\nset.seed(1)\n\nGSEA_GO_exponent <- gseGO(geneList = rankvec_Ensembl,\n                            ont = \"BP\",\n                            OrgDb = org.Hs.eg.db,\n                            keyType = \"ENSEMBL\",\n                            exp = 2,\n                            seed = TRUE)\n\n# inspect the results\nhead(GSEA_GO_exponent, n = 10) \n#> [1] ID              Description     setSize        \n#> [4] enrichmentScore NES             pvalue         \n#> [7] p.adjust        qvalue         \n#> <0 rows> (or 0-length row.names)"},{"path":"david.html","id":"david","chapter":"9 DAVID","heading":"9 DAVID","text":"script, willpreprocess export required input object ANDpreprocess export required input object ANDgenerate alternative universe part researchers’ degrees freedomgenerate alternative universe part researchers’ degrees freedomfor web-based tool DAVIDThe required input object DAVID consists list differentially expressed genes. \nalternative universe, choose genes whose differential expression assessed experiment. Note required provide alternative universe. illustrate use part researchers’ degrees freedom.","code":""},{"path":"david.html","id":"libraries-7","chapter":"9 DAVID","heading":"9.1 Libraries","text":"part instructions, libraries required.","code":""},{"path":"david.html","id":"load-data-4","chapter":"9 DAVID","heading":"9.2 Load data","text":"objects, list differentially expressed genes well alternative universe can extracted results table differential expression analysis. Note DAVID works variety gene ID formats, including Ensembl ID., illustrate process limma results since process identical methods differential exression analysis (due unification column names refer adjusted p-values).Alternatively, can proceed results generated DESeq2 edgeR:purpose redability, store limma’s differential expression analysis results object neutral name:Take look results table:","code":"\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_limma_Ensembl.Rdata\")\n# load(\"./Results_Differential_Expression_Analysis/DE_results_DESeq2_Ensembl.Rdata\")\n# load(\"./Results_Differential_Expression_Analysis/DE_results_edgeR_Ensembl.Rdata\")\nDE_results <- DE_results_limma_Ensembl\nhead(DE_results, n  = 10)\n#>                      logFC   AveExpr         t      P.Value\n#> ENSG00000129824  9.2133770 1.9601987 47.132083 1.061719e-55\n#> ENSG00000099749  6.1709577 0.4153409 40.465602 4.024370e-51\n#> ENSG00000154620  5.0848991 0.4867874 26.729729 5.097737e-39\n#> ENSG00000006757 -0.9214380 5.3073131 -8.805751 4.963544e-13\n#> ENSG00000130021 -0.8516173 2.1365915 -4.388951 3.846411e-05\n#> ENSG00000185753 -0.5479423 3.6902013 -4.217130 7.121081e-05\n#> ENSG00000086712 -0.4017993 5.0899555 -4.023482 1.403927e-04\n#> ENSG00000123689 -1.4679601 5.1661467 -3.850433 2.537689e-04\n#> ENSG00000177606 -0.5844304 8.2469942 -3.910485 2.069770e-04\n#> ENSG00000120868  0.4076940 5.9420527  3.832337 2.697515e-04\n#>                        p_adj           B\n#> ENSG00000129824 6.631497e-52 94.00193786\n#> ENSG00000099749 1.256811e-47 86.16860821\n#> ENSG00000154620 1.061349e-35 68.53453635\n#> ENSG00000006757 7.750575e-10 19.36978341\n#> ENSG00000130021 4.804937e-02  2.04582318\n#> ENSG00000185753 7.413045e-02  1.30583651\n#> ENSG00000086712 1.252704e-01  0.48313770\n#> ENSG00000123689 1.684868e-01 -0.04984613\n#> ENSG00000177606 1.615973e-01 -0.13323415\n#> ENSG00000120868 1.684868e-01 -0.25078873"},{"path":"david.html","id":"prepare-and-export-required-input-oject","chapter":"9 DAVID","heading":"9.3 Prepare and export required input oject","text":"","code":""},{"path":"david.html","id":"step-1-generate-required-input-object-2","chapter":"9 DAVID","heading":"9.3.1 Step 1: Generate required input object","text":"results table differential expression analysis, generate list differentially expressed genes.take look first genes vector differentially expressed genesNote specific example, differentially expressed genes.","code":"\n# (i) indicate which genes have an (existing!) adjusted p-value < 0.05.\nind_DE <- (!is.na(DE_results$p_adj)) & (DE_results$p_adj < 0.05)\n\n# get overview of number of differentially expressed genes\ntable(ind_DE)\n#> ind_DE\n#> FALSE  TRUE \n#>  6241     5\n\n# (ii) use the indicator to obtain the list of differentially expressed genes\nDEG_vec <- rownames(DE_results)[ind_DE]\nhead(DEG_vec, n = 10)\n#> [1] \"ENSG00000129824\" \"ENSG00000099749\" \"ENSG00000154620\"\n#> [4] \"ENSG00000006757\" \"ENSG00000130021\""},{"path":"david.html","id":"step-2-export-vector-of-differentially-expressed-genes","chapter":"9 DAVID","heading":"9.3.2 Step 2: Export vector of differentially expressed genes","text":"store vector differentially expressed genes file “DEG_vec.txt” folder “Input_Objects_DAVID” (subfolder folder “data”).file “DEG_vec.txt” now appeared folder “Input_Objects_DAVID”.","code":"\n# the path indicates the location (folder(s) and file) of the vector to be stored in\npath <- \"./data/Input_Objects_DAVID/DEG_vec.txt\"\n\n# export \n write.table(DEG_vec,\n            file = path,\n            quote=FALSE,\n            row.names=FALSE,\n            col.names = FALSE)"},{"path":"david.html","id":"step-3-upload-to-david","chapter":"9 DAVID","heading":"9.3.3 Step 3: Upload to DAVID","text":"resulting .txt file can directly uploaded DAVID website: https://david.ncifcrf.gov/","code":""},{"path":"david.html","id":"researchers-degrees-of-freedom-2","chapter":"9 DAVID","heading":"9.4 Researchers’ degrees of freedom","text":"part, illustrate create alternative universe DAVID, researchers’ degree freedom. important note intention behind going researchers’ degrees freedom give understanding can adapt given (parameter) setting research question. even important keep mind intention behind going flexible parameters change order help obtain preferable results systematically changing parameters since behaviour correspond “cherry-picking”. changes parameter choice must documented transparently.","code":""},{"path":"david.html","id":"step-1-generate-alternative-universe","chapter":"9 DAVID","heading":"9.4.1 Step 1: Generate alternative universe","text":"alternative universe, want consider genes whose differential expression measured experiment methods differential expression analysis, DESeq2, adjusted p-values genes set NA means genes detected neither differentially expressed differentially expressed. therefore want remove universe.Inspect first genes universe","code":"\n# indicate which genes have an adjusted p-value in the results of differential expression analysis\nind_nona_p <- !is.na(DE_results$p_adj)\n\n# filter the list of genes to those with an existing adjusted p-value\nalternative_universe <- rownames(DE_results)[ind_nona_p]\nhead(alternative_universe, n = 10)\n#>  [1] \"ENSG00000129824\" \"ENSG00000099749\" \"ENSG00000154620\"\n#>  [4] \"ENSG00000006757\" \"ENSG00000130021\" \"ENSG00000185753\"\n#>  [7] \"ENSG00000086712\" \"ENSG00000123689\" \"ENSG00000177606\"\n#> [10] \"ENSG00000120868\""},{"path":"david.html","id":"step-2-export-alternative-universe","chapter":"9 DAVID","heading":"9.4.2 Step 2: Export alternative universe","text":"store vector differentially expressed genes file “alternative_universe.txt” folder “Input_Objects_DAVID” (subfolder folder “data”).file “alternative_universe.txt” now appeared folder “Input_Objects_DAVID”.","code":"\npath_alt_universe <- \"./data/Input_Objects_DAVID/alternative_universe.txt\"\n\n# export \nwrite.table(alternative_universe,\n            file = path_alt_universe,\n            quote=FALSE,\n            row.names=FALSE,\n            col.names = FALSE)"},{"path":"gsea-web.html","id":"gsea-web","chapter":"10 GSEA WEB","heading":"10 GSEA WEB","text":"script, \n1. export transformed RNA-Seq measurements\n2. prepare export sample conditionsNote preprocessing steps required Excel. preprocessing steps, click following link:\nhttp://software.broadinstitute.org/cancer/software/gsea/wiki/index.php/Data_formats.","code":""},{"path":"gsea-web.html","id":"libraries-8","chapter":"10 GSEA WEB","heading":"10.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load libraries:Description library:tweeDEseqCountData: , need conditions samples Pickrell data set (processed form) required web-based tool GSEA.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"tweeDEseqCountData\")\nlibrary(tweeDEseqCountData) # for pickrell data set "},{"path":"gsea-web.html","id":"load-data-5","chapter":"10 GSEA WEB","heading":"10.1.0.1 Load data","text":"web-based tool, work pre-filtered transformed gene expression measurements. Since GSEA accepts wide variety gene ID formats, can input gene IDs Ensembl ID format.\nNote purpose simplicity, work voom-transformed data. However, can easily switch gene expression data set transformed using DESeq2’s varianceStabilizingTransformation.easier readability, store gene expression data set new object neutral name.mentioned , GSEA requires (preprocessed version ) sample conditions. case pickrell data set used illustrations, obtain using following commands:","code":"\nload(\"./data/Results_RNASeq_Transformation/expression_data_voomtransformed_Ensembl.Rdata\")\nexpression_data_transformed <- expression_data_voomtransformed_Ensembl\n# load pickrell data \ndata(pickrell)\n\n# store sample conditions\nsample_conditions <- pickrell.eset$gender"},{"path":"gsea-web.html","id":"step-1-export-the-transformed-gene-expression-measurements","chapter":"10 GSEA WEB","heading":"10.1.1 step 1: Export the (transformed) gene expression measurements","text":"export transformed gene expression measurements .txt file pre-specified folder “Input_Objects_GSEA_web”.Arguments function write.table()quote = FALSE ensures none characters (case gene sample\nidentifiers, .e. row column names) surrounded double quotesquote = FALSE ensures none characters (case gene sample\nidentifiers, .e. row column names) surrounded double quotesrow.names = TRUE ensures gene IDs included exportrow.names = TRUE ensures gene IDs included exportcol.names = TRUE ensures samples IDs included exportcol.names = TRUE ensures samples IDs included export### step 2: Prepare export sample conditionsGSEA accepts sample conditions (binary) format values 0 1. pickrell data set, inspect current values sample conditions stored:Currently, sample conditions coded “female” “male”. now want convert levels 0 1:Export:Arguments function write.table()quote = FALSE ensures none characters (case gene sample\nidentifiers, .e. row column names) surrounded double quotesquote = FALSE ensures none characters (case gene sample\nidentifiers, .e. row column names) surrounded double quotesrow.names = TRUE ensures gene IDs included exportrow.names = TRUE ensures gene IDs included exportcol.names = TRUE ensures samples IDs included exportcol.names = TRUE ensures samples IDs included export","code":"\n# 1. Generate the path that indicates that we will store the transformed gene expression measurements in the object \"expression_data_transformed.txt, which is located in the file \"Input_Objects_GSEA_web\"\npath_measurements  <- \"./data/Input_Objects_GSEA_web/expression_data_transformed.txt\"\n\n# export the gene expression measurements \n### export \nwrite.table(expression_data_transformed,\n            file = path_measurements,\n            quote = FALSE,\n            row.names = TRUE,\n            col.names = TRUE)\n# inspect the raw sample conditions:\nhead(sample_conditions, n = 10)\n#>  [1] male   male   female male   female male   female male  \n#>  [9] female male  \n#> Levels: female male\n\n# inspect the levels of the sample conditions:\nlevels(sample_conditions)\n#> [1] \"female\" \"male\"\n# (i) create vector to contain the sample conditions in the right format\nsample_conditions_prepared <- c()\n# (ii) assign all \"females\", which is the first level of the factor, the value 0\nsample_conditions_prepared[ pickrell.eset$gender == levels(pickrell.eset$gender)[[1]]] <- 0\n# (iii) assign all \"males\", which is the second level of the factor, the value 1\nsample_conditions_prepared[ pickrell.eset$gender == levels(pickrell.eset$gender)[[2]]] <- 1\n\n# inspect the (first few) sample conditions: \nhead(sample_conditions_prepared, n = 10)\n#>  [1] 1 1 0 1 0 1 0 1 0 1\n# the following path indicates that we store the prepared sample conditions in the object \"sample_conditions_prepared.txt\" in the file \"Input_Objects_GSEA_web\". \npath_conditions <- \"./data/Input_Objects_GSEA_web/sample_conditions_prepared.txt\"\n\n# export \nwrite.table(x = sample_conditions_prepared,\n            file = path_conditions,\n            quote = FALSE,\n            row.names = FALSE,\n            col.names = TRUE)"},{"path":"gsea-web.html","id":"step-3-further-preparation-of-input-object-in-excel","chapter":"10 GSEA WEB","heading":"10.1.2 step 3: Further preparation of input object in Excel","text":"instructions preparation text file Excel, open following link:http://software.broadinstitute.org/cancer/software/gsea/wiki/index.php/Data_formatsFollow instructions section“GCT: Gene Cluster Text file format (*.gct)“: preparation expression_data_transformed“GCT: Gene Cluster Text file format (*.gct)“: preparation expression_data_transformed“CLS: Categorical (e.g tumor vs. normal) class file format (*.cls)“: preparation sample_conditions_prepared“CLS: Categorical (e.g tumor vs. normal) class file format (*.cls)“: preparation sample_conditions_prepared","code":""},{"path":"cluster-profiler-gsea-kegg.html","id":"cluster-profiler-gsea-kegg","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11 Cluster Profiler: GSEA KEGG","text":"script, following two things:\n- 1. Based results differential expression analysis voom/limma, DESeq2, edgeR, go \nsteps required run clusterProfiler’s GSEA gene set database GO.\n- 2. go (meaningful) researchers’ degrees freedom.Note provide separate file gene set databases GO KEGG since clusterProfiler differs accepted gene ID formats . GO, variety formats, including Entrez ID, accepted, gene IDs must converted NCBI (Entrez) ID choosing KEGG.","code":""},{"path":"cluster-profiler-gsea-kegg.html","id":"libraries-9","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"DESeq2\")"},{"path":"cluster-profiler-gsea-kegg.html","id":"load-libraries-4","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.1.1 Load Libraries","text":"Description packagesclusterProfiler: use clusterProfiler’s implementation GSEA.clusterProfiler: use clusterProfiler’s implementation GSEA.DESeq2: contrast detecting differential expressed genes, done solely based adjusted \\(p\\)-vaules, additionally use estimated log fold changes generating gene ranking. DESeq2, estimated log fold change values shrunken using additional function, hence loading library.DESeq2: contrast detecting differential expressed genes, done solely based adjusted \\(p\\)-vaules, additionally use estimated log fold changes generating gene ranking. DESeq2, estimated log fold change values shrunken using additional function, hence loading library.","code":"\n\nlibrary(clusterProfiler)\nlibrary(DESeq2)"},{"path":"cluster-profiler-gsea-kegg.html","id":"load-the-data-1","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.1.2 Load the data","text":"Note , described , clusterProfiler accepts Entrez IDs working gene set database GO. generating ranking genes DESeq2, shrinkage log fold change estimates performed requires output function DESeq(), named “dds” (see “Instructions_Differential_Expression_Analysis”).","code":"\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_limma_Entrez.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_DESeq2_Entrez.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_edgeR_Entrez.Rdata\")\n\n# load dds object \nload(\"./data/Results_Differential_Expression_Analysis/dds_Entrez.Rdata\")"},{"path":"cluster-profiler-gsea-kegg.html","id":"run-gsea-1","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.2 Run GSEA","text":"","code":""},{"path":"cluster-profiler-gsea-kegg.html","id":"step-1-generation-of-required-input-object-1","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.2.1 step 1: Generation of Required Input Object","text":"following, illustrate creation required input object using three different methods differential expression analysis, voom/limma, DESeq2, edgeR, shall serve three options. required input object clusterProfiler “order ranked geneList”, .e. vector ranking value gene, named respective gene IDs ordered descending manner.","code":""},{"path":"cluster-profiler-gsea-kegg.html","id":"option-1-generate-required-input-using-voomlimma-1","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.2.1.1 1.1 Option 1: Generate required input using voom/limma","text":"formula generating gene ranking results table differential expression analysis \\((-1) * log_{10}(p\\text{-value}) * \\text{sign}(\\text{log fold change})\\). Note “\\(p\\)-value” denotes non-adjusted p-value.","code":"\n\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_limma_Entrez <- !is.na(DE_results_limma_Entrez$P.Value)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA_Entrez <- DE_results_limma_Entrez[ind_nonNA_pvalue_limma_Entrez, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_limma_Entrez <- sign(DE_results_noNA_Entrez$logFC)*(-1)*log10(DE_results_noNA_Entrez$P.Value)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_limma_Entrez) <- rownames(DE_results_noNA_Entrez)\n\n# 4. sort the vector in descending order\nrankvec_limma_Entrez <- sort(rankvec_limma_Entrez, decreasing=TRUE)\n\n# inspect the first entries of the ranking vector\nhead(rankvec_limma_Entrez , n = 10)\n#>      6192      9087       317      9404      9697     63894 \n#> 54.991351 38.217609  3.554179  3.200661  3.164203  3.071138 \n#>      4214     10479      5257     29915 \n#>  3.019720  2.924894  2.875024  2.814519"},{"path":"cluster-profiler-gsea-kegg.html","id":"option-2-generate-required-input-using-deseq2-1","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.2.1.2 1.2 Option 2: Generate required input using DESeq2","text":"","code":""},{"path":"cluster-profiler-gsea-kegg.html","id":"i-perform-differential-expression-analysis-1","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.2.1.2.1 (i) Perform Differential Expression Analysis","text":"step performed script Instructions_Differential_Expression_Analysis.R. Note must exit DESeq2 workflow script steps early since additional step required creation required input object. proceed object “dds_Entrez” ’ve obtained step 3 DESeq2’s workflow differential expression analysis.","code":"\ndds_Entrez\n#> class: DESeqDataSet \n#> dim: 9492 69 \n#> metadata(1): version\n#> assays(6): counts mu ... replaceCounts replaceCooks\n#> rownames(9492): 8813 57147 ... 56104 56112\n#> rowData names(23): baseMean baseVar ... maxCooks\n#>   replace\n#> colnames(69): NA18486 NA18498 ... NA19239 NA19257\n#> colData names(3): condition sizeFactor replaceable"},{"path":"cluster-profiler-gsea-kegg.html","id":"ii-shrink-estimated-log-fold-change-values-1","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.2.1.2.2 (ii) Shrink estimated log fold change values","text":"intuition behind shrinkage log fold change values , mentioned paper, RNA-Seq data consists (raw form) count data inherently heteroscedastic, .e. variance count data depends mean count count data. observable ratios counts considerably noisier low magnitudes counts compared higher magnitudes, .e. log fold changes conditions higher overall magnitude counts lower.DESeq2 addresses issue shrinking estimated log fold changes direction 0 magnitude shrinkage higher available information gene lower (may low magnitude counts, high dispersion\ndegrees freedom.). detailed description provided DESeq2 paper Love et al. (2014).Perform shrinkage:Function arguments:type: method perform shrinkage. opt default “apeglm” can choose two alternative options\nwelltype: method perform shrinkage. opt default “apeglm” can choose two alternative options\nwellcoef: indicate coefficients shrunk. can obtain right argument following function call:coef: indicate coefficients shrunk. can obtain right argument following function call:command shows us can either shrink intercept “condition_treated_vs_untreated”. Since want shrink intercept estimated log fold changes, opt second option “condition_treated_vs_untreated”.","code":"\n  DE_results_DESeq2_shrink_Entrez <- lfcShrink(dds_Entrez,\n                                               coef = \"condition_treated_vs_untreated\",\n                                               type=\"apeglm\")\nresultsNames(dds_Entrez)\n#> [1] \"Intercept\"                     \n#> [2] \"condition_treated_vs_untreated\""},{"path":"cluster-profiler-gsea-kegg.html","id":"iii-generate-the-ranked-list-of-the-genes-based-on-the-results-of-differential-expression-analysis-1","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.2.1.2.3 (iii) Generate the ranked list of the genes based on the results of differential expression analysis","text":"formula generating gene ranking results table differential expression analysis $ (-1) * log_{10}(p) * ()\\(. Note \"\\)p$-value” denotes non-adjusted p-value.","code":"\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_Entrez <- !is.na(DE_results_DESeq2_shrink_Entrez$pvalue)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA_Entrez <- DE_results_DESeq2_shrink_Entrez[ind_nonNA_pvalue_Entrez, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_DESeq2_Entrez <- sign(DE_results_noNA_Entrez$log2FoldChange)*(-1)*log10(DE_results_noNA_Entrez$pvalue)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_DESeq2_Entrez) <- rownames(DE_results_noNA_Entrez)\n\n# 4. sort the vector in descending order\nrankvec_DESeq2_Entrez <- sort(rankvec_DESeq2_Entrez, decreasing=TRUE)\n\n\n# inspect the first entries of the ranking vector\nhead(rankvec_DESeq2_Entrez , n = 10)\n#>       6192       9086       9087       7404         58 \n#> 204.374390  75.096224  64.815184   7.205688   4.854231 \n#>       1521      23136     219699     126129        317 \n#>   4.467907   3.996186   3.966326   3.918029   3.744345"},{"path":"cluster-profiler-gsea-kegg.html","id":"option-3-generate-required-input-using-edger-1","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.2.2 1.3 Option 3: Generate required input using edgeR","text":"formula generating gene ranking results table differential expression analysis \\((-1) * log_{10}(p\\text{-value}) * \\text{sign}(\\text{log fold change})\\). Note “\\(p\\)-value” denotes non-adjusted p-value.","code":"\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_Entrez <- !is.na(DE_results_edgeR_Entrez$PValue)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA_Entrez <- DE_results_edgeR_Entrez[ind_nonNA_pvalue_Entrez, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_edgeR_Entrez <- sign(DE_results_noNA_Entrez$logFC)*(-1)*log10(DE_results_noNA_Entrez$p_adj)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_edgeR_Entrez) <- rownames(DE_results_noNA_Entrez)\n\n# 4. sort the vector in descending order\nrankvec_edgeR_Entrez <- sort(rankvec_edgeR_Entrez, decreasing=TRUE)\n\n# inspect ranking vector\nhead(rankvec_edgeR_Entrez, n = 10)\n#>        6192        9087        1521         317        9404 \n#>         Inf 116.7303466   1.6605772   1.0317662   0.9984938 \n#>       10479        4214        9697        4509        9645 \n#>   0.9863396   0.8622382   0.8467278   0.8434267   0.8251273\n\n# 5. special problem here: gene 6192 has a ranking value Inf since its adjusted\n# p-value in the results table of differential expression analysis amounts to 0\n\n# here, we deal with this issue by resetting this ranking value to the highest ranking value\n# that occurs among the remaining genes\n# -> note that there is NO common way of dealing with this issue\nrankvec_edgeR_Entrez[rankvec_edgeR_Entrez == Inf] <- max(rankvec_edgeR_Entrez[rankvec_edgeR_Entrez != Inf])\n \n# inspect ranking vector once more \nhead(rankvec_edgeR_Entrez, n = 10)\n#>        6192        9087        1521         317        9404 \n#> 116.7303466 116.7303466   1.6605772   1.0317662   0.9984938 \n#>       10479        4214        9697        4509        9645 \n#>   0.9863396   0.8622382   0.8467278   0.8434267   0.8251273"},{"path":"cluster-profiler-gsea-kegg.html","id":"step-2-run-gsea-with-gene-set-database-kegg","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.2.3 step 2: Run GSEA with gene set database KEGG","text":"purpose simplicity, work ranking generated using limma. However: can switch around discretionRun clusterProfiler gene set database KEGGadditional arguments (appear code lines since keep \ndefault options)exponent 1: calculation enrichment score, gene weighted\nabsolute value ranking metricexponent 1: calculation enrichment score, gene weighted\nabsolute value ranking metricorganism = “hsa” : human organism. Note list accepted organisms available following link: https://www.genome.jp/kegg/catalog/org_list.htmlorganism = “hsa” : human organism. Note list accepted organisms available following link: https://www.genome.jp/kegg/catalog/org_list.htmlseed = TRUE: set seed indicated (: seed = 1 )seed = TRUE: set seed indicated (: seed = 1 )eps = 1e-10: (adjusted) p-value smaller 1e-10 indicated 1e-10eps = 1e-10: (adjusted) p-value smaller 1e-10 indicated 1e-10pvalueCutoff = 0.05: gene sets p-value < 0.05 indicated \nresultspvalueCutoff = 0.05: gene sets p-value < 0.05 indicated \nresultsnote: want inspect gene sets results, set pvalueCutoff = 1note: want inspect gene sets results, set pvalueCutoff = 1pAdjustMethod = “BH”: adjustment multiple testing using Benjamini Hochberg\nmethodpAdjustMethod = “BH”: adjustment multiple testing using Benjamini Hochberg\nmethod","code":"\nrankvec_Entrez <- rankvec_limma_Entrez\n\n# alternatively: \n# rankvec_Entrez <- rankvec_DESeq2_Entrez\n# rankvec_Entrez <- rankvec_edgeR_Entrez\n# important: set seed for reproducibility \nset.seed(1)\n  \n#GSEA_KEGG <- gseKEGG(geneList = rankvec_Entrez, \n                     #seed = TRUE) # ensures that the seed is taken into account "},{"path":"cluster-profiler-gsea-kegg.html","id":"step-3-interpretation-of-the-results-1","chapter":"11 Cluster Profiler: GSEA KEGG","heading":"11.2.4 step 3: Interpretation of the results","text":"inspect results first 10 gene setsColumns Result Tables:ID: ID gene setID: ID gene setDescription: Description Gene SetDescription: Description Gene SetsetSize: Size gene setsetSize: Size gene setenrichmentScore: Enrichment Score\nnote: enrichment score normalized gene set size\nmeans: larger gene sets automatically bigger (absolute) enrichment score independent actual differential enrichment\nraw enrichment score therefore comparable different gene sets\nenrichmentScore: Enrichment Scorenote: enrichment score normalized gene set sizemeans: larger gene sets automatically bigger (absolute) enrichment score independent actual differential enrichmentthe raw enrichment score therefore comparable different gene setsNES: Normalized version column enrichmentScore\nNES can compared different gene sets\nNES: Normalized version column enrichmentScoreNES can compared different gene setspvalue: p-value enrichment given gene set\nnote: raw p-value adjusted multiple testing\ntherefore: used assess differential enrichment given gene set\npvalue: p-value enrichment given gene setnote: raw p-value adjusted multiple testingtherefore: used assess differential enrichment given gene setp.adjust: ADJUSTED p-value given gene set\np-value now adjusted multiple testing can therefore\ncan therefore used assess differential enrichment\nexample: detect genes p.adjust < 0.05 differentially enriched\np.adjust: ADJUSTED p-value given gene setthis p-value now adjusted multiple testing can thereforecan therefore used assess differential enrichmentexample: detect genes p.adjust < 0.05 differentially enrichedqvalue: ADJUSTED p-value given gene set\nnote: qvalue analog p.adjust, adjusted multiple testing\nusing different method\nqvalue: ADJUSTED p-value given gene setnote: qvalue analog p.adjust, adjusted multiple testing\nusing different methodYou can either use column p.adjust qvalue assess whether gene set\ndifferentially enriched notrank: position ranked list genes maximum difference\ntwo sums occurs, .e. rank enrichment score\nextractedrank: position ranked list genes maximum difference\ntwo sums occurs, .e. rank enrichment score\nextractedleading_edge:\ntags: percentage genes ranked list members gene set (positive enrichment score)\n(negative enrichment score) position enrichment score extracted.\nlist: percentage genes ranked gene list (positive enrichment\nscore) (negative enrichment score) position enrichment score extracted.\nsignal: enrichment signal strength combines statistics “tags” “list”\nleading_edge:tags: percentage genes ranked list members gene set (positive enrichment score)\n(negative enrichment score) position enrichment score extracted.list: percentage genes ranked gene list (positive enrichment\nscore) (negative enrichment score) position enrichment score extracted.signal: enrichment signal strength combines statistics “tags” “list”core_enrichment: genes contribute enrichment resultscore_enrichment: genes contribute enrichment resultsNote detailed information leading_edge core_enrichment can found user\nmanual provided GSEA:\nhttps://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html\nsearch Detailed Enrichment Results (section “Leading Edge”)\nsearch CORE ENRICHMENT\nNote detailed information leading_edge core_enrichment can found user\nmanual provided GSEA:\nhttps://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.htmlsearch Detailed Enrichment Results (section “Leading Edge”)search CORE ENRICHMENT","code":"\n#head(GSEA_KEGG, n = 10 )"},{"path":"cluster-profiler-ora.html","id":"cluster-profiler-ora","chapter":"12 Cluster Profiler: ORA","heading":"12 Cluster Profiler: ORA","text":"script, willrun clusterProfiler’s ORA tool based results table differential expression analysis gene set databasesKEGGGO (default subontology “MF”)go meaningful researchers’ degrees freedomNote clusterProfiler’s ORA accepts gene IDs NCBI (Entrez) ID format, independent chosen gene set database.","code":""},{"path":"cluster-profiler-ora.html","id":"load-libraries-5","chapter":"12 Cluster Profiler: ORA","heading":"12.1 Load libraries","text":"necessary packages available Bioconductor, installed already available machine.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"org.Hs.eg.db\")"},{"path":"cluster-profiler-ora.html","id":"load-libraries-6","chapter":"12 Cluster Profiler: ORA","heading":"12.1.0.1 Load Libraries","text":"Description packagesclusterProfiler: use clusterProfiler’s implementation ORA.clusterProfiler: use clusterProfiler’s implementation ORA.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (‘Overview_Packages’). Note library required running clusterProfiler’s ORA gene set database GO.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (‘Overview_Packages’). Note library required running clusterProfiler’s ORA gene set database GO.","code":"\n\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db)"},{"path":"cluster-profiler-ora.html","id":"load-the-data-2","chapter":"12 Cluster Profiler: ORA","heading":"12.1.1 Load the data","text":"arbitrarily set object DE_results work resulting DESeq2. However, can switch around discretion.","code":"\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_limma_Entrez.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_DESeq2_Entrez.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_edgeR_Entrez.Rdata\")\nDE_results <- DE_results_DESeq2_Entrez\n\n# alternatively: \nDE_results <- DE_results_limma_Entrez\nDE_results <- DE_results_edgeR_Entrez"},{"path":"cluster-profiler-ora.html","id":"run-clusterprofilers-ora","chapter":"12 Cluster Profiler: ORA","heading":"12.2 Run clusterProfiler’s ORA","text":"","code":""},{"path":"cluster-profiler-ora.html","id":"step-1-preparation-of-required-input-object-1","chapter":"12 Cluster Profiler: ORA","heading":"12.2.1 step 1: Preparation of required input object","text":"clusterProfiler’s ORA requires input list differentially expressed genes. extract list results table differential expression analysis.\ngene results differential expression analysis, indicate whether differentially expressed (TRUE) differentially expressed (FALSE) based following two criteria:\n1. tested differential expression, .e. non-missing adjusted p-value \n2. adjusted p-value < 0.05","code":"\n# indicate which gene fulfills BOTH criteria: \nind_differentially_expressed <- ((!is.na(DE_results$p_adj)) & (DE_results$p_adj<0.05))\n\n# using this indicator, we extract the vector of differentially expressed genes from the results\n# of differential expression analysis \nDEG_vec <- rownames(DE_results[ind_differentially_expressed,])\n\n# inspect the first few genes from the input list \nhead(DEG_vec, n = 10)\n#>  [1] \"6192\"   \"9087\"   \"8228\"   \"8226\"   \"6615\"   \"10912\" \n#>  [7] \"284486\" \"1521\"   \"55787\"  \"10732\""},{"path":"cluster-profiler-ora.html","id":"step-2-run-clusterprofilers-ora","chapter":"12 Cluster Profiler: ORA","heading":"12.2.2 step 2: Run clusterProfiler’s ORA","text":"ORA can run common geneset databases KEGG GO well user-defined gene set databases. , focus two common gene set databases GO KEGG","code":""},{"path":"cluster-profiler-ora.html","id":"option-1-gene-set-database-go","chapter":"12 Cluster Profiler: ORA","heading":"12.2.2.1 option 1: gene set database GO","text":", work subontology specified default, namely Molecular Function (“MF”)Function arguments:\n- gene: vector differentially expressed genes\n- OrgDb: annotation package organism hand (: human)\n- ont: subontology (“MF” default, alternatives: “BP” “CC”)","code":"\nORA_results_GO <- enrichGO(gene = DEG_vec, \n                           OrgDb = org.Hs.eg.db, \n                           ont = \"MF\") \n\n# inspect results table \nhead(ORA_results_GO , n = 10)\n#> [1] ID          Description GeneRatio   BgRatio    \n#> [5] pvalue      p.adjust    qvalue      geneID     \n#> [9] Count      \n#> <0 rows> (or 0-length row.names)"},{"path":"cluster-profiler-ora.html","id":"option-2-gene-set-database-kegg","chapter":"12 Cluster Profiler: ORA","heading":"12.2.2.2 option 2: gene set database KEGG","text":"Function arguments:gene: vector differentially expressed genesgene: vector differentially expressed genesorganism: organism gene expression measurements obtained\ndefault: “hsa”\norganism: organism gene expression measurements obtaineddefault: “hsa”must adapted organisms (organism = “mmu” mice)must adapted organisms (organism = “mmu” mice)","code":"\nORA_results_KEGG <- enrichKEGG(gene = DEG_vec, \n                               organism = \"hsa\")\n#> Reading KEGG annotation online: \"https://rest.kegg.jp/link/hsa/pathway\"...\n#> Reading KEGG annotation online: \"https://rest.kegg.jp/list/pathway/hsa\"...\n\n# inspect results table \nhead(ORA_results_KEGG , n = 10)\n#> [1] ID          Description GeneRatio   BgRatio    \n#> [5] pvalue      p.adjust    qvalue      geneID     \n#> [9] Count      \n#> <0 rows> (or 0-length row.names)"},{"path":"cluster-profiler-ora.html","id":"step-4-interpretation-of-the-results","chapter":"12 Cluster Profiler: ORA","heading":"12.2.3 step 4: Interpretation of the results","text":"Description columns results table:GeneRatio: number genes input list members given gene set divided number genes input list members given gene setGeneRatio: number genes input list members given gene set divided number genes input list members given gene setBgRatio: number genes universe members gene set divided total number genes universeBgRatio: number genes universe members gene set divided total number genes universepvalue: p-value enrichment given gene setpvalue: p-value enrichment given gene setp.adjust: p-value enrichment ADJUSTED multiple testingp.adjust: p-value enrichment ADJUSTED multiple testingqvalue: p-value enrichment ADJUSTED multiple testing\nnote: p.adjust qvalue adjusted using slightly different approaches\nqvalue: p-value enrichment ADJUSTED multiple testingnote: p.adjust qvalue adjusted using slightly different approachesgeneID: list genes input list members given gene setgeneID: list genes input list members given gene setcount: number genes input list members given gene setcount: number genes input list members given gene set","code":""},{"path":"cluster-profiler-ora.html","id":"researchers-degrees-of-freedom-3","chapter":"12 Cluster Profiler: ORA","heading":"12.3 Researchers’ degrees of freedom","text":"part, go parameters can adapted GOSeq workflow. important note intention behind going researchers’ degrees freedom give understanding can adapt given (parameter) setting research question. even important keep mind intention behind going flexible parameters change order help obtain preferable results systematically changing parameters since behaviour correspond “cherry-picking”. changes parameter choice must documented transparently.","code":""},{"path":"cluster-profiler-ora.html","id":"change-1-change-universe","chapter":"12 Cluster Profiler: ORA","heading":"12.3.1 change 1: Change universe","text":", change universe genes measured experiment.Note change universe interception genes experiment list genes annotated given gene set database since found way obtain latter list genes.\nAlso note want restrict genes experiment adjusted p-value (.e. whose expression indeed measured). intuition , e.g. DESeq2, genes filtered internally \ntherefore adjusted p-value. genes therefore neither detected differentially expressed differentially expressed feasible include universe.","code":""},{"path":"cluster-profiler-ora.html","id":"step-1-set-up-alternative-universe","chapter":"12 Cluster Profiler: ORA","heading":"12.3.1.1 step 1: Set up alternative universe","text":"","code":"\n# (i) indicate which genes have an adjusted p-value\nind_adjp <- !is.na(DE_results$p_adj)\n\n# (ii) filter the genes from the experiment to those genes that do have an adjusted p-value \nalternative_universe <- rownames(DE_results)[ind_adjp]\n\n# inspect the first few genes in the universe\nhead(alternative_universe, n = 10)\n#>  [1] \"6192\"   \"9087\"   \"8228\"   \"8226\"   \"6615\"   \"10912\" \n#>  [7] \"284486\" \"1521\"   \"55787\"  \"10732\""},{"path":"cluster-profiler-ora.html","id":"step-2-add-alternative-universe-as-a-parameter-to-ora","chapter":"12 Cluster Profiler: ORA","heading":"12.3.2 step 2: Add alternative universe as a parameter to ORA","text":"","code":""},{"path":"cluster-profiler-ora.html","id":"a-gene-set-database-go-specify-parameter-universe","chapter":"12 Cluster Profiler: ORA","heading":"12.3.2.1 (a) gene set database GO: specify parameter “universe”","text":"functions enrichGO() enrichKEGG(), alternative universe can specified argument “universe”.","code":"\nORA_results_GO_universe  <- enrichGO(gene = DEG_vec, \n                                     OrgDb = org.Hs.eg.db, \n                                     universe = alternative_universe)\n\n# inspect results \nhead(ORA_results_GO_universe, n = 10)\n#> [1] ID          Description GeneRatio   BgRatio    \n#> [5] pvalue      p.adjust    qvalue      geneID     \n#> [9] Count      \n#> <0 rows> (or 0-length row.names)"},{"path":"cluster-profiler-ora.html","id":"b-gene-set-database-kegg-specify-parameter-universe","chapter":"12 Cluster Profiler: ORA","heading":"12.3.2.2 (b) gene set database KEGG: specify parameter “universe”","text":"","code":"\nORA_results_KEGG_universe <- enrichKEGG(gene = DEG_vec, \n                                        organism = \"hsa\",\n                                        universe = alternative_universe)\n\n# inspect results\nhead(ORA_results_KEGG_universe, n = 10)\n#> [1] ID          Description GeneRatio   BgRatio    \n#> [5] pvalue      p.adjust    qvalue      geneID     \n#> [9] Count      \n#> <0 rows> (or 0-length row.names)"},{"path":"padog.html","id":"padog","chapter":"13 PADOG","heading":"13 PADOG","text":"","code":""},{"path":"padog.html","id":"libraries-10","chapter":"13 PADOG","heading":"13.1 Libraries","text":"","code":""},{"path":"padog.html","id":"install-libraries-1","chapter":"13 PADOG","heading":"13.1.1 Install Libraries","text":"necessary packages available Bioconductor, installed already available machine. code install {BiocManager} CRAN, can use package install PADOG, tweeDEseqCountDatam, KEGGREST system.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"PADOG\")\nBiocManager::install(\"tweeDEseqCountData\")\nBiocManager::install(\"KEGGREST\")"},{"path":"padog.html","id":"load-libraries-7","chapter":"13 PADOG","heading":"13.1.2 Load Libraries","text":"Note loading libraries mask many functions base R packages. run unexpected errors functions ’re using, recommended use namespacing explicitly clarify package need given function. (suppressed library() loading messages document, however.)Provide brief note libraries ?","code":"\n\nlibrary(PADOG)\nlibrary(tweeDEseqCountData)\nlibrary(KEGGREST)"},{"path":"padog.html","id":"padog-1","chapter":"13 PADOG","heading":"13.1.3 PADOG","text":"PADOG library XYZ. can find information online LINK.","code":""},{"path":"padog.html","id":"tweedeseqcountdata-1","chapter":"13 PADOG","heading":"13.1.4 tweeDEseqCountData","text":"","code":""},{"path":"padog.html","id":"keggrest","chapter":"13 PADOG","heading":"13.1.5 KEGGREST","text":"","code":""},{"path":"padog.html","id":"load-data-6","chapter":"13 PADOG","heading":"13.2 Load Data","text":"section change substantially reconfigure project R package/book.now, place data need ./data directory.sample conditions (.e. phenotype labels) pickrell data set can accessed usingWe proceed voom-transformed pickrell data set corresponding phenotype labels","code":"\n# we load the voom-transformed Pickrell data set \nload(\"data/expression_data_voomtransformed_Entrez.Rdata\")\n\n# alternatively: load the gene expression measurements that have been transformed using \nload(\"data/expression_data_vsttransformed_Entrez.Rdata\")\n\n# additionally, we load the pickrell data set so that we can access the sample conditions\ndata(pickrell)\npickrell.eset$gender \n#>  [1] male   male   female male   female male   female male  \n#>  [9] female male   female male   female male   female male  \n#> [17] female female male   female male   female female male  \n#> [25] female male   female female male   female female male  \n#> [33] female male   female female female female male   female\n#> [41] male   male   female female male   female female male  \n#> [49] female female male   female male   male   female female\n#> [57] male   female male   female male   female female male  \n#> [65] female female female male   female\n#> Levels: female male\n# gene expression measurements (transformed)\n# note: you can also proceed with the vst-transformed gene expression measurements \nexpression_data_transformed <- expression_data_voomtransformed_Entrez\n# sample conditions\nsample_conditions <- pickrell.eset$gender"},{"path":"padog.html","id":"prepare-sample-conditions","chapter":"13 PADOG","heading":"13.3 Prepare Sample Conditions","text":"First, inspect form initial (raw) sample conditionsPADOG requires character vector class labels samples. can contain “c” control samples “d” disease samples","code":"\n## look at the class: \nclass(sample_conditions)\n#> [1] \"factor\"\n# -> the sample labels are already coded as factor\n\n# the current levels are:\nlevels(sample_conditions)\n#> [1] \"female\" \"male\"\n\n# prepare sample conditions\n# we want to convert \n# (i) \"female\" to \"c\"\n# (ii) \"male\" to \"d\"\nsample_conditions_prep <- factor(sample_conditions, \n                                levels=c(\"female\",\"male\"), \n                                labels=c(\"c\",\"d\"))"},{"path":"padog.html","id":"run-padog","chapter":"13 PADOG","heading":"13.4 Run PADOG","text":"recommended set seed ensure exact reproducibility results code run multiple time pointsyou can specify integer number seed. IMPORTANT choose seed arbitrarily WITHOUT INSPECTING results seed NEVER specified based value yields preferable results.arguments:esetm: matrix contains expression measurements\nnote: since expression data initially stored data frame, transform matrix running PADOG\nnote: since expression data initially stored data frame, transform matrix running PADOGgroup: sample conditions (values “c” “d”)dseed: seed random number generation (used process phenotype permutation)additional arguments:paired: indicates whether samples groups pairedblock: samples paired (.e. argument paired = TRUE), paired samples must block valuegslist: gives instructions cluster genes gene sets\ngslist = “KEGGRESTpathway”: gene sets correspond KEGG pathways\nalternative: provide user-defined list gene sets\ngslist = “KEGGRESTpathway”: gene sets correspond KEGG pathwaysalternative: provide user-defined list gene setsorganism: organism gene expression measurements taken\nhuman, set organism = “hsa”\nrequired character value organisms can extracted KEGGREST package:\nhuman, set organism = “hsa”required character value organisms can extracted KEGGREST package:obtain required organisms column organismannotation: required gslist set “KEGGRESTpathway” rownames esetm probe IDscan set NULL gslist set “KEGGRESTpathway” rownames esetm Entrez gene ID formatif rownames gene IDs, sett annotation = NULL make sure rownames elements gslist (unique!)gs.names: contains names gene sets -> character vector\nmust length gslist\nmust length gslistNI: number phenotype permutations employed assessment significance given gene set","code":"\n# run PADOG: \n PADOG_results <- padog(esetm = as.matrix(expression_data_transformed), \n                        group = sample_conditions_prep, \n                        dseed = 1)"},{"path":"padog.html","id":"adjust-for-multiple-testing","chapter":"13 PADOG","heading":"13.5 Adjust for Multiple Testing","text":"","code":""},{"path":"padog.html","id":"interpretation-of-results","chapter":"13 PADOG","heading":"13.6 Interpretation of Results","text":"","code":""}]
