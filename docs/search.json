[{"path":"index.html","id":"about","chapter":"About","heading":"About","text":"book provides practical illustration steps required run GSA tools selection paper. Even though files build upon , illustrations structured way step can viewed independently.\nRNA-Seq data set use illustration provided Pickrell et al. (2010) part library tweeDEseqCountData. data set contains RNA-Samples extracted lymphoplastoid cell lines 69 independent Nigerian individuals. sample conditions (.e. phenotypes) respective samples correspond gender individuals. Note gene expression data set, gene IDs initially form Ensembl IDs.1To run entire pipeline illustration, pre-filtering actual GSA tool, several R packages required. provide overview packages must installed (already available) loaded. sections correspond individual steps, give overview locally required libraries.","code":""},{"path":"index.html","id":"required-r-packages","chapter":"About","heading":"0.1 Required R packages","text":"","code":""},{"path":"index.html","id":"available-on-cran","chapter":"About","heading":"0.1.1 Available on CRAN:","text":"BiocManager:2 offers functionalities install manage packages part Bioconductor project. , particularly use install required Bioconductor packages.BiocManager:2 offers functionalities install manage packages part Bioconductor project. , particularly use install required Bioconductor packages.dplyr: provides various functionalities data manipulation.\nuse unify results tables different methods differential expression analysis. necessary general, simplifies illustrations can use GSA pipelines following differential expression analysis, independent method differential expression analysis used.dplyr: provides various functionalities data manipulation.\nuse unify results tables different methods differential expression analysis. necessary general, simplifies illustrations can use GSA pipelines following differential expression analysis, independent method differential expression analysis used.","code":""},{"path":"index.html","id":"available-on-bioconductor","chapter":"About","heading":"0.1.2 Available on Bioconductor","text":"install following libraries, library BiocManager must installed loaded first.tweeDEseqCountData:3 provides count data three RNA-Seq experiments together information conditions samples. work work gene expression data set provided Pickrell et al. (2010)4 illustrations.tweeDEseqCountData:3 provides count data three RNA-Seq experiments together information conditions samples. work work gene expression data set provided Pickrell et al. (2010)4 illustrations.Biobase:5 contains standardized data structures represent genomic data. need package access count data pickrell data set library ‘tweeDEseqCountData’ using function exprs().Biobase:5 contains standardized data structures represent genomic data. need package access count data pickrell data set library ‘tweeDEseqCountData’ using function exprs().clusterProfiler:6 offers functionalities explore functional characteristics high-throughput genomic data. , use functions perform ORA GSEA conversion gene IDs.clusterProfiler:6 offers functionalities explore functional characteristics high-throughput genomic data. , use functions perform ORA GSEA conversion gene IDs.org.Hs.eg.db:7 provides genome-wide annotation human organism. Note gene expression measurements extracted different organism, must adapt library accordingly. instance, organism mouse requires library org.Mm.eg.db.\nlibrary often required working library clusterProfiler.org.Hs.eg.db:7 provides genome-wide annotation human organism. Note gene expression measurements extracted different organism, must adapt library accordingly. instance, organism mouse requires library org.Mm.eg.db.\nlibrary often required working library clusterProfiler.limma:8 provides functionalities analysing data gene expression experiments. limma allows analysis microarray well RNA-Seq data analysis pipelines similar. use limma differential expression analysis make use transformation RNA-Seq data align characteristics microarray data.limma:8 provides functionalities analysing data gene expression experiments. limma allows analysis microarray well RNA-Seq data analysis pipelines similar. use limma differential expression analysis make use transformation RNA-Seq data align characteristics microarray data.edgeR:9 provides functionalities analyse data RNA sequencing technologies focuses differential expression analysis biological (opposed technical) replicates.edgeR:9 provides functionalities analyse data RNA sequencing technologies focuses differential expression analysis biological (opposed technical) replicates.DESeq210: offers functionalities visualization differential expression analysis RNA-Seq data.DESeq210: offers functionalities visualization differential expression analysis RNA-Seq data.goseq:11 implements GSA method GOSeq.goseq:11 implements GSA method GOSeq.PADOG:12 implements GSA method PADOG.PADOG:12 implements GSA method PADOG.","code":""},{"path":"pre-filtering.html","id":"pre-filtering","chapter":"1 Pre-filtering","heading":"1 Pre-filtering","text":"script, learn two options exclude genes sufficient number read counts across\nsamples. distinguish two approaches since different methods differential expression analysis (see Chapter ‘Differential Expression Analysis’) propose different methods pre-filtering.option 1: pre-filtering using function provided edgeRoption 2: pre-filtering proposed DESeq2","code":""},{"path":"pre-filtering.html","id":"libraries","chapter":"1 Pre-filtering","heading":"1.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load LibrariesDescription libraries:tweeDESeqCountData: library obtain gene expression data set use illustrations.tweeDESeqCountData: library obtain gene expression data set use illustrations.edgeR: offers function pre-filtering use .edgeR: offers function pre-filtering use .","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"tweeDEseqCountData\")\nBiocManager::install(\"edgeR\")\nlibrary(tweeDEseqCountData)\nlibrary(edgeR)"},{"path":"pre-filtering.html","id":"preparation-of-rna-seq-data-set-used-for-illustration","chapter":"1 Pre-filtering","heading":"1.2 Preparation of RNA-Seq data set used for illustration","text":"purpose simplicity readability, store gene expression measurements sample conditions Pickrell data sets objects neutral names, namely ‘expression_data’’sample_conditions’, respectively.Take look entries gene expression data set:Take look sample conditions:Inspect number genes (rows) number samples (columns) gene expression data set:","code":"\n# load pickrell data set \ndata(pickrell)\n\n# access and store gene expression measurements\nexpression_data <- Biobase::exprs(pickrell.eset)\n\n# access and store sample conditions \nsample_conditions <- pickrell.eset$gender \n# inspect the read counts of the first 5 genes in the first 5 samples\nexpression_data[1:5, 1:5]\n#>                 NA18486 NA18498 NA18499 NA18501 NA18502\n#> ENSG00000000003       0       0       0       0       0\n#> ENSG00000000005       0       0       0       0       0\n#> ENSG00000000419      22     105      40      55      67\n#> ENSG00000000457      22     100     107      53      72\n#> ENSG00000000460       5      23      10      18      15\nsample_conditions\n#>  [1] male   male   female male   female male   female male  \n#>  [9] female male   female male   female male   female male  \n#> [17] female female male   female male   female female male  \n#> [25] female male   female female male   female female male  \n#> [33] female male   female female female female male   female\n#> [41] male   male   female female male   female female male  \n#> [49] female female male   female male   male   female female\n#> [57] male   female male   female male   female female male  \n#> [65] female female female male   female\n#> Levels: female male\ndim(expression_data)\n#> [1] 52580    69"},{"path":"pre-filtering.html","id":"pre-filtering-1","chapter":"1 Pre-filtering","heading":"1.3 Pre-Filtering","text":"","code":""},{"path":"pre-filtering.html","id":"option-1-pre-filtering-using-edgers-builting-function","chapter":"1 Pre-filtering","heading":"1.3.1 Option 1: Pre-Filtering using edgeR’s builting function","text":"approach works function filterByExpr() package edgeR proposed method pre-filtering methods differential expression analysis edgeR voom/limma. approach operates cpm-transformed count data (cpm: counts-per-million) excludes genes certain number counts-per-million certain number samples. Note approach accounts differences library size different samples.step 1: Generate input object required filterByExpr()Description function:DGEList(): object contain RNA sequencing measurements additional informationDescription arguments:counts: matrix RNA-Seq datagroup: vector contains condition samplestep 2: Filter lowly expressed genesThe function filterByExpr() creates indicator genes sufficient amount read counts across samples. Based indicator, gene expression data set filtered.Note index keep.lib.sizes = FALSE ensures library size sample recalculated pre-filtering.step 3: Obtain final pre-filtered gene expression data setAt point, transform gene expression measurements back data frame. reason subsequent steps (conversion gene IDs work DGEList format).Observe number genes reduced compared original (unfiltered) gene expression data set.","code":"\nexpression_data_filterByExpr <- DGEList(counts = expression_data, \n                                        group = sample_conditions)\n# (i) for each gene, indicate if it fulfils the requirements to be kept for the subsequent analysis \nindicator_keep <- filterByExpr(expression_data_filterByExpr)\n\n# (ii) filter the gene expression data set such that only those genes are kept which fulfill the requirements\nexpression_data_filterByExpr <- expression_data_filterByExpr[indicator_keep,, keep.lib.sizes = FALSE]\nexpression_data_filterByExpr <- as.data.frame(expression_data_filterByExpr$counts)\n\n# inspect the number of genes and the number of samples in the final pre-filtered gene expression data set \nnrow(expression_data_filterByExpr)\n#> [1] 6246"},{"path":"pre-filtering.html","id":"option-2-simpler-pre-filtering-approach-proposed-by-deseq2","chapter":"1 Pre-filtering","heading":"1.3.2 Option 2: Simpler Pre-filtering approach (proposed by DESeq2)","text":"simpler approach pre-filtering proposed method differential expression analysis DESeq2. approach, genes kept analysis pre-specified number counts \\(X\\) (10) across samples. higher value \\(X\\) thereby leads genes removed.\nNote DESeq2 proposes stricter version pre-filtering genes kept \\(X\\) number counts least \\(Y\\) samples.\nNote none two “simpler” approaches pre-filtering take differences library size account.step 1: Pre-Filteringstep 2: Inspect final pre-filtered gene expression data setNote number genes gene expression data set decreased compared initial (unfiltered) gene expression data set.","code":"\n# indicate which genes have at least 10 read counts across all samples:\nindicator_keep <- rowSums(expression_data) >= 10 \n\n# alternative (and more strict) indicator:\n# indicator_keep <- rowSums( expression_data >=10) >= 10\n\n# subset gene expression data set accordingly \nexpression_data_filterDESEq2 <- expression_data[indicator_keep,]\ndim(expression_data_filterDESEq2)\n#> [1] 10151    69"},{"path":"gene-id-conversion-and-removal-of-the-resulting-duplicated-gene-ids.html","id":"gene-id-conversion-and-removal-of-the-resulting-duplicated-gene-ids","chapter":"2 Gene ID conversion and removal of the resulting duplicated gene IDs","heading":"2 Gene ID conversion and removal of the resulting duplicated gene IDs","text":"script, go process ofconverting given gene IDs initial (Ensembl ID) format different (namely NCBI Entrez ID)13 formatremoving resulting duplicated gene IDsIn document, illustrate process one two pre-filtered gene expression data sets created Chapter ‘Pre-Filtering’:expression_data_filterByExpr: Gene expression data set pre-filtered using edgeR’s builtin function filterByExpr().corresponding R-Script “Instructions_GeneID_Conversion_DuplicatesRemoval.R”, additionally illustrate identical process gene expression data setexpression_data_filterDESeq2: Gene expression data set pre-filtered using approach proposed DESeq2","code":""},{"path":"gene-id-conversion-and-removal-of-the-resulting-duplicated-gene-ids.html","id":"libraries-1","chapter":"2 Gene ID conversion and removal of the resulting duplicated gene IDs","heading":"2.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load librariesDescription libraries:clusterProfiler: use clusterProfiler’s function gene ID conversion.clusterProfiler: use clusterProfiler’s function gene ID conversion.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (‘Overview_Packages’). Note library required running clusterProfiler’s function gene ID conversion.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (‘Overview_Packages’). Note library required running clusterProfiler’s function gene ID conversion.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"org.Hs.eg.db\")\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db)"},{"path":"gene-id-conversion-and-removal-of-the-resulting-duplicated-gene-ids.html","id":"load-data","chapter":"2 Gene ID conversion and removal of the resulting duplicated gene IDs","heading":"2.2 Load data","text":"Load pre-filtered gene expression data sets generated Chapter ‘Pre-Filtering’ stored file “Results_PreFiltering”.Inspect dimension current gene expression data set","code":"\nload(\"./data/Results_PreFiltering/expression_data_filterByExpr.Rdata\")\n# The alternative gene expression data set would be \n# load(\"./data/Results_PreFiltering/expression_data_filterDESeq2.Rdata\")\ndim(expression_data_filterByExpr)\n#> [1] 6246   69"},{"path":"gene-id-conversion-and-removal-of-the-resulting-duplicated-gene-ids.html","id":"step-1-convert-ensembl-ids-to-ncbi-entrez-ids","chapter":"2 Gene ID conversion and removal of the resulting duplicated gene IDs","heading":"2.3 Step 1: Convert Ensembl IDs to NCBI (Entrez) IDs","text":"() Obtain mapping Ensembl Entrez ID formatObserve warning message: gene IDs initial (Ensembl) ID format translated gene ID desired (Entrez) ID format.Description function: bitr() translates gene IDs format “fromType” format “toType”.Description arguments:geneID: gene IDs converted (stored rownames gene expression data set)geneID: gene IDs converted (stored rownames gene expression data set)fromType: initial gene ID format convertedfromType: initial gene ID format convertedtoType: gene ID format converted totoType: gene ID format converted toOrgDb: annotation data base organisms gene expression measurements originate. corresponding argument must loaded library (see )OrgDb: annotation data base organisms gene expression measurements originate. corresponding argument must loaded library (see )Note arguments “fromType” “toType” must set one following, depending given \nrequired gene ID format:ACCNUM, ALIAS, Ensembl, EnsemblPROT, EnsemblTRANS, ENTREZID, ENZYME, EVIDENCE,\nEVIDENCEALL, GENENAME, GENETYPE, GO, GOALL, IPI, MAP, OMIM, ONTOLOGY, ONTOLOGYALL, PATH, PFAM, PMID, PROSITE,\nREFSEQ, SYMBOL, UCSCKG, UNIPROT.Inspect object bitr_EnsToEntrSee bitr() results mapping initial (Ensembl ID) desired (Entrez ID) formatWe observe :Ensembl gene IDs can mapped corresponding Entrez gene IDnot Ensembl gene IDs can mapped corresponding Entrez gene IDsome individual Ensembl gene IDs mapped multiple distinct Entrez gene IDssome individual Ensembl gene IDs mapped multiple distinct Entrez gene IDssome distinct Ensembl gene IDs mapped identical Entrez gene IDsome distinct Ensembl gene IDs mapped identical Entrez gene ID(ii) Concatenate mapping initial gene expression data setConcatenate initial gene expression data set mapping initial (Ensembl) required (Entrez) gene ID format. Merge row names expression data set Ensembl ID gene ID mapping.Description function arguments:.x .y: specify columns expression_data_filterByExpr bitr_EnsToEntr concatenated:.x .y: specify columns expression_data_filterByExpr bitr_EnsToEntr concatenated:.x = 0: use row names expression_data_filterByExpr (row names contain gene IDs).x = 0: use row names expression_data_filterByExpr (row names contain gene IDs).y = “ENSEMBL”: use column contains Ensembl IDsby.y = “ENSEMBL”: use column contains Ensembl IDsTake look dimension resulting data setWe observe thatthe number genes merged_expression_data_filterByExpr decreased 6040\ndirectly caused circumstance typically, initial (Ensembl) gene IDs can converted required (Entrez) gene ID\nnumber genes merged_expression_data_filterByExpr decreased 6040this directly caused circumstance typically, initial (Ensembl) gene IDs can converted required (Entrez) gene IDthe expression data set extended two columns:\nlast column (called “ENTREZID” containing converted (Entrez) gene ID\nfirst column (called Row.names) initial (Ensembl) gene IDs originally stored row names\nexpression data set extended two columns:last column (called “ENTREZID” containing converted (Entrez) gene IDthe last column (called “ENTREZID” containing converted (Entrez) gene IDthe first column (called Row.names) initial (Ensembl) gene IDs originally stored row namesthe first column (called Row.names) initial (Ensembl) gene IDs originally stored row names","code":"\n# the rownames of the gene expression data set correspond to the gene IDs \nbitr_EnsToEntr <- bitr(gene = rownames(expression_data_filterByExpr), \n                         fromType = \"ENSEMBL\", \n                         toType = \"ENTREZID\", \n                         OrgDb = org.Hs.eg.db)\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#> Warning in bitr(gene =\n#> rownames(expression_data_filterByExpr), fromType =\n#> \"ENSEMBL\", : 3.84% of input gene IDs are fail to map...\nhead(bitr_EnsToEntr)\n#>           ENSEMBL ENTREZID\n#> 1 ENSG00000000419     8813\n#> 2 ENSG00000000457    57147\n#> 3 ENSG00000000460    55732\n#> 4 ENSG00000000938     2268\n#> 5 ENSG00000001036     2519\n#> 6 ENSG00000001167     4800\nmerged_expression_data_filterByExpr <- merge(x = expression_data_filterByExpr, \n                                              y = bitr_EnsToEntr, \n                                              by.x=0, \n                                              by.y=\"ENSEMBL\", \n                                              all.y=TRUE, sort=TRUE)\ndim(merged_expression_data_filterByExpr)\n#> [1] 6040   71"},{"path":"gene-id-conversion-and-removal-of-the-resulting-duplicated-gene-ids.html","id":"step-2-take-a-closer-look-at-the-duplicated-gene-ids","chapter":"2 Gene ID conversion and removal of the resulting duplicated gene IDs","heading":"2.4 Step 2: Take a closer look at the duplicated gene IDs","text":"Case 1: single Ensembl ID mapped multiple distinct Entrez IDsFrom mapping, obtain number cases Ensembl ID converted several ENTREZ IDs, .e. number times Ensembl ID appears mapping:Obtain list duplicated Ensembl IDs (.e. Ensembl IDs mapped multiple distinct Entrez IDs) inspect corresponding conversion pattern Entrez ID.now want look mapping pattern causing duplicated ENSEMBL IDsObserve three unique ENSEMBL IDs, mapped two distinct Entrez IDs.Case 2: Multiple Ensembl IDs mapped Entrez IDIn case, corresponding Entrez IDs appear repeatedly mapping.mapping, obtain number cases multiple Ensembl IDs mapped Entrez ID.Obtain list duplicated Entrez IDs, .e. Entrez IDs appear mapping, inspect corresponding conversion pattern.now want look mapping pattern causing duplicated Entrez IDs.following, propose three ways remove duplicates.","code":"\n sum(duplicated(bitr_EnsToEntr$ENSEMBL)) \n#> [1] 34\n# indicate which Ensembl IDs are duplicated \nind_duplicated <- duplicated(bitr_EnsToEntr$ENSEMBL)\n\n# filter the list of all Ensembl IDs to those that are mapped to multiple Entrez IDs \ndupl_ensembl<-unique(bitr_EnsToEntr$ENSEMBL[ind_duplicated])\n\n# take a look at some of the Ensembl IDs\nhead(dupl_ensembl, n = 5)\n#> [1] \"ENSG00000063587\" \"ENSG00000088298\" \"ENSG00000090857\"\n#> [4] \"ENSG00000111215\" \"ENSG00000111850\"\n# filter mapping to those Ensembl IDs that are mapped to multiple Entrez IDs \nduplicated_conversion_ens <- bitr_EnsToEntr[bitr_EnsToEntr$ENSEMBL %in% dupl_ensembl,]\n      \n\n# take a look at the mapping resulting in duplicated Ensembl IDs \nhead(duplicated_conversion_ens, n = 6)\n#>             ENSEMBL  ENTREZID\n#> 303 ENSG00000063587     10838\n#> 304 ENSG00000063587 105373378\n#> 615 ENSG00000088298     55741\n#> 616 ENSG00000088298 111089941\n#> 683 ENSG00000090857     55066\n#> 684 ENSG00000090857 124907803\nsum(duplicated(bitr_EnsToEntr$ENTREZ)) \n#> [1] 3\n# indicate which Entrez IDs appear more then once in the mapping: \nind_duplicated <- duplicated(bitr_EnsToEntr$ENTREZID)\n\n# filter the list of all Entrez IDs to the duplicated ones \ndupl_entrez<-unique(bitr_EnsToEntr$ENTREZID[ind_duplicated])\n# filter the mapping to those Entrez IDs appearing repeatedly\nduplicated_conversion_entrez<-bitr_EnsToEntr[bitr_EnsToEntr$ENTREZID %in% dupl_entrez,]\n\n# for illustration purposed: order by the column containing the Entrez IDs \nduplicated_conversion_entrez <- duplicated_conversion_entrez[order(duplicated_conversion_entrez$ENTREZID), ]\n\n\n# take a look at conversion pattern: \nhead(duplicated_conversion_entrez, n = 6 )\n#>              ENSEMBL ENTREZID\n#> 250  ENSG00000054277    23596\n#> 5875 ENSG00000203668    23596\n#> 3605 ENSG00000158406   554313\n#> 5675 ENSG00000197061   554313\n#> 5736 ENSG00000197837   554313"},{"path":"gene-id-conversion-and-removal-of-the-resulting-duplicated-gene-ids.html","id":"step-4-remove-duplicated-gene-ids","chapter":"2 Gene ID conversion and removal of the resulting duplicated gene IDs","heading":"2.5 Step 4: Remove duplicated gene IDs","text":"subsequent analysis (whether differential expression analysis gene set analysis), need deal duplicated gene IDs remove suitable way one unique gene expression measurement among duplicates remains. recommended way proceed, .e. common approach presented official scientific publications, instead several approaches suggested users corresponding user platforms. therefore introduce three approaches remove duplicated gene IDs.","code":""},{"path":"gene-id-conversion-and-removal-of-the-resulting-duplicated-gene-ids.html","id":"option-1-keep-the-first-subscript-among-the-duplicates-simplest-approach","chapter":"2 Gene ID conversion and removal of the resulting duplicated gene IDs","heading":"2.5.1 option 1: Keep the first subscript among the duplicates (simplest approach)","text":"Note function duplicated() indicates elements vector duplicates element smaller subscripts. Therefore, first corresponding element occurs considered subscript.1. Remove duplicated ENTREZ IDs2. Remove duplicated ENSEMBL IDs3. Set NCBI (Entrez) IDs rownames","code":"\n# indicate which Entrez IDs are duplicates of one with a smaller subscript \nind_duplicates <- duplicated(merged_expression_data_filterByExpr$ENTREZID)\n\n# filter the gene expression data set to those Entrez IDs that are NO duplicates\nexprdat_filterByExpr_dupl1 <- merged_expression_data_filterByExpr[!ind_duplicates,]\n# indicate which Ensembl IDs are duplicates of one with a smaller subscript\nind_duplicates <- duplicated(exprdat_filterByExpr_dupl1$Row.names)\n\n# filter the gene expression data set to those Ensembl IDs that are NO duplicates\nexprdat_filterByExpr_dupl1<-exprdat_filterByExpr_dupl1[!ind_duplicates,]\nrownames(exprdat_filterByExpr_dupl1)<-exprdat_filterByExpr_dupl1$ENTREZID\n\n#Remove columns containing ENSEMBL and ENTREZ IDs\nexprdat_filterByExpr_dupl1 <- subset(exprdat_filterByExpr_dupl1, select=-c(Row.names,ENTREZID))\n\n# inspect dimension of gene expression data set without duplicates \ndim(exprdat_filterByExpr_dupl1)\n#> [1] 6006   69"},{"path":"gene-id-conversion-and-removal-of-the-resulting-duplicated-gene-ids.html","id":"option-2-keep-the-rounded-mean-expression-value-of-all-duplicated-gene-ids","chapter":"2 Gene ID conversion and removal of the resulting duplicated gene IDs","heading":"2.5.2 option 2: Keep the (rounded) mean expression value of all duplicated gene IDs","text":"option, want combine corresponding duplicated gene IDs one taking (rounded) mean count value sample. , switch order remove duplicates first addressing duplicated Ensembl IDs duplicated Entrez IDs.1.Remove duplicated ENTREZ IDsRemove multiple different ENSEMBL IDs mapped single ENTREZ ID (case 2)Note add mean values gene expression data set end step 2.2. Remove duplicated ENSEMBL IDsCaution: Single ENSEMBL IDs mapped multiple ENTREZ ID naturally generate identical count data corresponding ENTREZ IDsIt therefore pointless compute mean expression valuesWe therefore proceed option 1 use ENTREZ ID occurs first remove rest3. Set NCBI (Entrez) IDs rownames","code":"\n# generate empty matrix to contain (rounded) mean expression values of all rows that\n# have same ENTREZ ID\nmean_entrez<-matrix(, nrow=0, ncol=ncol(merged_expression_data_filterByExpr)-2)\n# note: we set ncol = ncol(expression_data_filterByExpr)-2 since data set contains 2 columns with IDs at this point for which \n# we won't calculate any mean value. \n\n\n# for each duplicated Entrez ID separately, we gather all rows with the corresponding gene expression data\n# and then extract the (rounded) mean expression value of all rows\n    for(i in 1:length(dupl_entrez)){\n\n#go through each ENTREZ IDs which occurs multiple times\n#determine all rows whose ENTREZ IDs correspond to currently considered ENTREZ ID\ncounts_dupl <- merged_expression_data_filterByExpr[merged_expression_data_filterByExpr$ENTREZID %in% unique(dupl_entrez)[i],]\n\n#compute the mean expression value of all rows that correspond to the given Entrez ID\ndupl_id <- round(colMeans(counts_dupl[,c(2:(ncol(merged_expression_data_filterByExpr)-1))]))\n\n#store rounded mean expression value in matrix\n# this matrix is iteratively extended by a single row of gene expression data which corresponds to the\n# (rounded) mean expression data that corresponds to the given Entrez ID\nmean_entrez <- rbind(mean_entrez,dupl_id)\n      \n}\n\n#set corresponding ENTREZ IDs as rownames\nrownames(mean_entrez) <- unique(dupl_entrez)\n\n\n# test whether the number of rows in mean_entrez corresponds to the number ENTREZ IDs\n# that occur more than once\n# result should be TRUE\nnrow(mean_entrez) == length(dupl_entrez)\n#> [1] TRUE\n\n# remove all rows from the expression data whose ENTREZ ID has at least one duplicate\n# intuition: we have just dealt with the corresponding rows and do not want them to be considered\n# in the second step (which deals with case 2)\n\nexprdat_filterByExpr_dupl2 <- merged_expression_data_filterByExpr[!merged_expression_data_filterByExpr$ENTREZID %in%  dupl_entrez,]\n\n# test whether the number of rows in the resulting data set equals the number of rows in the initial gene expression data set \n# minus number of genes with at least one duplicate\nnrow(exprdat_filterByExpr_dupl2) == nrow(merged_expression_data_filterByExpr)-nrow(duplicated_conversion_entrez)\n#> [1] TRUE\n\n\n# Inspect the dimension of the resulting gene expression data set with converted gene IDs\ndim(exprdat_filterByExpr_dupl2)\n#> [1] 6035   71\n# indicate which Ensembl IDs are duplicated in the gene expression data set\nind_duplicates <- duplicated(exprdat_filterByExpr_dupl2$Row.names)\n\n# filter gene expression data set to all Ensembl IDs that are NOT duplicated \nexprdat_filterByExpr_dupl2 <- exprdat_filterByExpr_dupl2[!ind_duplicates,]\n# set ENTREZ IDs as rownames\nrownames(exprdat_filterByExpr_dupl2) <- exprdat_filterByExpr_dupl2$ENTREZID\n\n# remove any columns containing IDs\nexprdat_filterByExpr_dupl2 <- subset(exprdat_filterByExpr_dupl2,select= -c(Row.names,ENTREZID))\n    \n# add rows to data set that contain mean expression values of duplicate ENTREZ IDs (from step 2)\nexprdat_filterByExpr_dupl2 <- rbind(exprdat_filterByExpr_dupl2,mean_entrez)\n    \n# Inspect the dimension of the resulting gene expression data set with converted gene IDs\ndim(exprdat_filterByExpr_dupl2)\n#> [1] 6007   69"},{"path":"gene-id-conversion-and-removal-of-the-resulting-duplicated-gene-ids.html","id":"option-3-among-the-duplicates-keep-row-with-highest-overall-expression-values","chapter":"2 Gene ID conversion and removal of the resulting duplicated gene IDs","heading":"2.5.3 option 3: Among the duplicates, keep row with highest overall expression values","text":"option, summarize gene expression data corresponding duplicated gene IDs detecting row highest counts across samples. intuition behind approach row highest counts values highest statistical power detected differentially expressed. option 2, sensible duplicates result multiple ENSEMBL IDs mapped ENTREZ ID.1. Remove duplicated Entrez IDs2. Remove duplicated Ensembl IDsJust like option 2, pointless detect row highest count values rows corresponding ENSEMBL ID naturally contain identical count data. therefore keep row corresponding duplicatd ENSEMBL ID occurs first.3. Set NCBI (Entrez) IDs rownames","code":"\n # generate empty matrix to later contain row with highest count values among ID duplicates\n# this data set is to be filled gradually and with each iteration of the follwing for-loop\nhighest_count_entrez<-matrix(, nrow=0, ncol=ncol(merged_expression_data_filterByExpr)-2)\n# note: we set ncol = ncol(expression_data_filterByExpr)-2 since data set contains 2 columns with IDs at this point for which \n# we won't calculate any \"highest\" value. \n\n\n# for each duplicated Entrez ID separately, we gather all rows with the corresponding gene expression data\n# and then extract the row with the highest overall magnitude of counts\n\nfor(i in 1:length(dupl_entrez)){\n\n# go through each ENTREZ IDs which occurs multiple times\n# determine all rows whose ENTREZ IDs correspond to currently considered ENTREZ ID\ncounts_dupl<-merged_expression_data_filterByExpr[merged_expression_data_filterByExpr$ENTREZID %in% unique(dupl_entrez)[i],]\n\n# order rows in decreasing manner by their (added up) number of read counts across all samples\norder_rowsums<-order(rowSums(counts_dupl[,2:(ncol(counts_dupl)-1)]),decreasing=TRUE)\n        \n#detect row with highest number of read counts across all samples (i.e. row with rank 1)\ndupl_id<-counts_dupl[order_rowsums==1,]\n#store corresponding expression values in the matrix \nhighest_count_entrez<-rbind(highest_count_entrez,dupl_id)\n      }\n\n\n#Remove all initial values with ENTREZ duplicates from the initial gene expression data set\nexprdat_filterByExpr_dupl3<-merged_expression_data_filterByExpr[! merged_expression_data_filterByExpr$ENTREZID %in% unique(dupl_entrez),]\n# indicate duplicated Ensembl IDs \nind_duplicates <- duplicated(exprdat_filterByExpr_dupl3$Row.names)\n\n# filter the gene expression data set to those Ensembl IDs that are NOT duplicated \nexprdat_filterByExpr_dupl3<-exprdat_filterByExpr_dupl3[!ind_duplicates,]\n\n# add gene expression rows of all Entrez IDs that were initially duplicated\nexprdat_filterByExpr_dupl3<-rbind(exprdat_filterByExpr_dupl3, highest_count_entrez)\n# Set ENTREZ IDs as rownames\nrownames(exprdat_filterByExpr_dupl3)<-exprdat_filterByExpr_dupl3$ENTREZID\n\n# Remove any column that contains information on gene IDs\nexprdat_filterByExpr_dupl3<-subset(exprdat_filterByExpr_dupl3, select=-c(Row.names,ENTREZID))\n\n# Inspect the dimension of the resulting gene expression data set with converted gene IDs\ndim(exprdat_filterByExpr_dupl3)\n#> [1] 6007   69"},{"path":"gene-id-conversion-and-removal-of-the-resulting-duplicated-gene-ids.html","id":"summary","chapter":"2 Gene ID conversion and removal of the resulting duplicated gene IDs","heading":"2.6 Summary","text":"demonstrated convert gene IDs gene expression data set Ensembl NCBI (Entrez) ID format, followed three approaches remove duplications gene IDs resulting conversion. Since , already mentioned, common approach removal duplicated gene IDs, user left choice gene expression data sets","code":"\nexprdat_filterByExpr_dupl1\nexprdat_filterByExpr_dupl2\nexprdat_filterByExpr_dupl3"},{"path":"differential-expression-analysis.html","id":"differential-expression-analysis","chapter":"3 Differential expression analysis","heading":"3 Differential expression analysis","text":"script, perform differential expression analysis three parametric methods:voom/limmavoom/limmaDESeq2DESeq2edgeRedgeRHere, illustrate process two gene ID format Entrez IDs, additionally present identical process format Ensembl ID R script “Instructions_Differential_Expression_Analysis.R”.Note end illustration method, rename columns corresponding results tables unify across different methods. step required differential expression analysis subsequent use gene set analysis GENERAL, renaming columns (adjusted p-value) necessary context can use code illustrate conduct GSA following chapters, independent method differential expression analysis used.","code":""},{"path":"differential-expression-analysis.html","id":"libraries-2","chapter":"3 Differential expression analysis","heading":"3.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load librariesDescription libraries:tweeDEseqCountData: addition pre-filtered gene expression data set (converted gene IDs) load next step, need conditions samples provided tweeDEseqCountData.tweeDEseqCountData: addition pre-filtered gene expression data set (converted gene IDs) load next step, need conditions samples provided tweeDEseqCountData.limma: First option methods differential expression analysis.limma: First option methods differential expression analysis.DESeq2: Second option methods differential expression analysis.DESeq2: Second option methods differential expression analysis.edgeR: Third option methods differential expression analysis.edgeR: Third option methods differential expression analysis.dplyr: Used unify columns results table three methods differential expression analysis.dplyr: Used unify columns results table three methods differential expression analysis.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"tweeDESeqCountData\")\nBiocManager::install(\"limma\")\nBiocManager::install(\"DESeq2\")\nBiocManager::install(\"edgeR\")\nBiocManager::install(\"dplyr\")\nlibrary(tweeDEseqCountData)\nlibrary(limma)\nlibrary(DESeq2)\nlibrary(edgeR)\nlibrary(dplyr)"},{"path":"differential-expression-analysis.html","id":"load-data-1","chapter":"3 Differential expression analysis","heading":"3.1.1 Load data","text":"Note depending method differential expression analysis, different methods pre-filtering proposed:voom/limma egdeR: pre-filtering using edgeR’s built-function filterByExpr()DESeq2: manual/simple pre-filteringWe therefore work pre-filtered gene expression data sets generated Chapter ‘Pre-Filtering’:Obtain sample conditions\nObtain sample conditions (.e. phenotypes) pickrell data set store object “sample_conditions”:","code":"\nload(\"./data/Results_GeneID_Conversion_DuplicatesRemoval/exprdat_filter_conv_DESeq2.Rdata\")\nload(\"./data/Results_GeneID_Conversion_DuplicatesRemoval/exprdat_filter_conv_filterByExpr.Rdata\")\n# load pickrell data set \ndata(pickrell)\n\n# the conditions/phenotypes of the samples can be addressed with the following syntax: \npickrell.eset$gender\n#>  [1] male   male   female male   female male   female male  \n#>  [9] female male   female male   female male   female male  \n#> [17] female female male   female male   female female male  \n#> [25] female male   female female male   female female male  \n#> [33] female male   female female female female male   female\n#> [41] male   male   female female male   female female male  \n#> [49] female female male   female male   male   female female\n#> [57] male   female male   female male   female female male  \n#> [65] female female female male   female\n#> Levels: female male\n\n# store sample conditions \nsample_conditions <- pickrell.eset$gender"},{"path":"differential-expression-analysis.html","id":"differential-expression-analysis-with-entrez-gene-id","chapter":"3 Differential expression analysis","heading":"3.2 Differential Expression Analysis (with Entrez gene ID)","text":"brief description methods differential expression analysis provided supplement.","code":""},{"path":"differential-expression-analysis.html","id":"option-1-differential-expression-analysis-using-limma","chapter":"3 Differential expression analysis","heading":"3.2.1 Option 1: Differential expression analysis using limma","text":"1. Generate required input objectAt point, gene expression data set ‘exprdat_filter_conv_filterByExpr’ \ndata frame needs converted DGEList object.Required function arguments:counts: matrix contains RNA-Seq data (.e. count data)Optional function arguments:group: indicates condition sample/library. argument must specified sooner later (subsequent functions) just specify pointNote: leave remaining arguments default state since corresponding info added following pipeline functions.2. NormalizationThe following piece code generates normalization factor sample accounts sample-specific effects (differences library sizes effects compositionality). accounted , effects prevent comparison samples.Note function transform count data, rather generates normalization factor sample separately incorporated subsequent analysis.3. voom transformationPerform voom14 transformation make limma, initially developed microarray measurements, available RNA-Seq data. voom transforms RNA-Seq data log counts-per-million generates precision weight entry gene expression data sets incorporated limma pipeline.4. Test differential expression5. Rename columns results differential expression analysisWe rename columns results table unify across different methods differential expression analysis. , use function rename() provided library dplyr.6. Take look top 10 genes results table generated limma","code":"\n# store expression data with corresponding sample conditions in object of class DGEList\ny <- DGEList(counts = exprdat_filter_conv_filterByExpr, \n              group = sample_conditions)\ny <- calcNormFactors(y)\n# (i) generate design matrix (rows correspond to samples, columns indicate which coefficients are to be estimated)\ndesign_matrix <- model.matrix( ~ sample_conditions)\n\n# (ii) voom transformation \ny <- voom(y, design = design_matrix)\n# (i) fit a linear model for each gene\ny <- lmFit(y)\n\n# (ii) calculate the statistics for the assessment of differential expression \ny <- eBayes(y)\n\n# (iii) Get the result table for each gene whose differential expression was assessed \nDE_results_limma_Entrez <- topTable(fit = y, \n                                    number =  nrow(y))\n# note: 'number = nrow(y)' ensures that all genes are displayed in results\n# first, we transform the results table to a data frame so that we see the results table directly when accessing it through the name \"res\"\nDE_results_limma_Entrez <- as.data.frame(DE_results_limma_Entrez)\n\n# rename column that contains adjusted p-values: rename padj to p_adj\nDE_results_limma_Entrez <- dplyr::rename(DE_results_limma_Entrez, \n                                         p_adj = \"adj.P.Val\")\nhead(DE_results_limma_Entrez, n = 10)\n#>             logFC   AveExpr         t      P.Value\n#> 6192    9.2105431 1.9863048 47.186499 1.020114e-55\n#> 9087    5.0806396 0.5128935 26.668835 6.058859e-39\n#> 8228   -0.9240302 5.3334193 -8.779270 5.579187e-13\n#> 8226   -0.8544468 2.1626976 -4.415343 3.497072e-05\n#> 159013 -0.5508457 3.7163074 -4.251355 6.307821e-05\n#> 55787  -0.4042722 5.1160616 -4.045191 1.302619e-04\n#> 50486  -1.4703261 5.1922528 -3.855673 2.493894e-04\n#> 3725   -0.5880074 8.2731003 -3.920361 2.001855e-04\n#> 317     0.4046249 5.9681588  3.822268 2.791390e-04\n#> 3552   -1.4855077 3.5435981 -3.666767 4.682471e-04\n#>               p_adj           B\n#> 6192   6.133944e-52 84.20170055\n#> 9087   1.821596e-35 62.68255252\n#> 8228   1.118255e-09 19.22260877\n#> 8226   5.256973e-02  2.15126317\n#> 159013 7.585786e-02  1.55871370\n#> 55787  1.305441e-01  0.74145045\n#> 50486  1.864959e-01  0.15615850\n#> 3725   1.719594e-01  0.11995311\n#> 317    1.864959e-01 -0.07537785\n#> 3552   2.616375e-01 -0.24387530"},{"path":"differential-expression-analysis.html","id":"option-2-differential-expression-analysis-using-deseq2","chapter":"3 Differential expression analysis","heading":"3.2.2 option 2: Differential expression analysis using DESeq2","text":"1. Generate required input objectDESeq2 operates format DESeqDataSet contains information count data, conditions samples design. Note gene expression data sets must imported R, additional steps necessary following code can run.Generate data frame contains condition sampleHere, information sample conditions column data frame. However, variables (batch effects) controlled , corresponding variables must additionally added coldata.Generate DESeqDataSetRelevant arguments function DESeqDataSetFromMatrix:countData: count data gene expression data setcountData: count data gene expression data setcolData: data frame contains information samples (see ) conditions samples (required) possibly variables correct (batch effects)colData: data frame contains information samples (see ) conditions samples (required) possibly variables correct (batch effects)design: indicates variables colData used modelling\ndetailed: argument design used estimate dispersions log2 fold changes model\none variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: ‘design ~ batch + condition’\nmake sure variable interest (: variable represents conditions samples) placed end formula\ndesign: indicates variables colData used modellingmore detailed: argument design used estimate dispersions log2 fold changes modelmore detailed: argument design used estimate dispersions log2 fold changes modelif one variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: ‘design ~ batch + condition’one variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: ‘design ~ batch + condition’make sure variable interest (: variable represents conditions samples) placed end formulamake sure variable interest (: variable represents conditions samples) placed end formula2. Test differential expressionDESeq2 calculates normalization factor sample, estimates dispersion parameter, fits negative binomial model. p-value differential expression gene computed using Wald test.Note: function results() provides base mean across samples, estimated log2 fold changes, standard errors, test statistics, p-values, adjusted p-values gene.3. Rename columns results differential expression analysis4. Take look top 10 genes results table generated DESeq2","code":"\n# the names of the samples are stored as the row names of the data frame\n# -> important: make sure that the order of the conditions in sample_conditions corresponds to the order of the samples in expression_data\ncoldata <- data.frame(sample_conditions, \n                      row.names = colnames(exprdat_filter_conv_DESeq2))\n\n# rename the column header to \"condition\" \ncolnames(coldata) <- \"condition\"\n\n# recode the variable condition as a factor \n# rename the sample conditions (in this case from \"female\" and \"male\") to \"untreated\" and \"treated\"\n# note: make sure that the control level in variable condition is coded as the first level (i.e. \"untreated\")\ncoldata$condition <- factor(coldata$condition, \n                            labels = c(\"untreated\",\"treated\"))\ndds_Entrez <- DESeqDataSetFromMatrix(countData = exprdat_filter_conv_DESeq2, \n                                     colData = coldata, \n                                     design = ~ condition)\n# perform default differential expression analysis \ndds_Entrez <- DESeq(dds_Entrez)\n\n# generate results table which provides\nDE_results_DESeq2_Entrez <- results(dds_Entrez)\n# first, we transform to results table to a data frame so that we see the results\n# table directly when accessing it through the name \"res\"\nDE_results_DESeq2_Entrez <- as.data.frame(DE_results_DESeq2_Entrez)\n\n# rename column that contains adjusted p-values: rename padj to p_adj\nDE_results_DESeq2_Entrez <- dplyr::rename(DE_results_DESeq2_Entrez, \n                                          p_adj = padj)\nhead(DE_results_DESeq2_Entrez, n = 10 )\n#>         baseMean log2FoldChange      lfcSE        stat\n#> 8813   62.726871    0.039434784 0.11345444  0.34758255\n#> 57147  70.453343    0.028533065 0.11131002  0.25633868\n#> 55732  13.001060    0.164117365 0.15102073  1.08672080\n#> 2268   43.577756    0.113711805 0.19545410  0.58178266\n#> 2519   37.963998   -0.006527064 0.10803176 -0.06041801\n#> 4800  228.478329    0.051147440 0.09641906  0.53047024\n#> 81887  11.534031    0.025191913 0.18501229  0.13616346\n#> 22875 175.833526    0.299999462 0.16347952  1.83508896\n#> 5893    4.688308    0.280425754 0.19291917  1.45359198\n#> 572    66.369975   -0.264896424 0.10233495 -2.58852362\n#>            pvalue     p_adj\n#> 8813  0.728153713 0.9313348\n#> 57147 0.797689329 0.9506228\n#> 55732 0.277160217 0.7502690\n#> 2268  0.560713083 0.8849136\n#> 2519  0.951822712 0.9884098\n#> 4800  0.595785935 0.8982377\n#> 81887 0.891692065 0.9763145\n#> 22875 0.066492509 0.5209390\n#> 5893  0.146059463 0.6396912\n#> 572   0.009638834 0.3141234"},{"path":"differential-expression-analysis.html","id":"option-3-differential-expression-analysis-using-edger","chapter":"3 Differential expression analysis","heading":"3.2.3 option 3: Differential expression analysis using edgeR","text":"1. Generate required input objectNote edgeR operates DGEList object.Required function arguments:counts: matrix contains RNA-Seq data (.e. count data)Optional function arguments:group: indicates condition sample/library\nargument must specified sooner later (subsequent functions) just specify point\nargument must specified sooner later (subsequent functions) just specify pointNote leave remaining arguments default state since corresponding info added following pipeline functions.2. NormalizationThe following piece code generates normalization factor sample. accounts sample-specific effect (differences library sizes effects compositionality). accounted , effects prevent comparison samples.Note function transform count data, rather generates normalization factor sample incorporated subsequent analysis separately.3. Estimation dispersionThe following code estimates common tagwise dispersion, namely variation true abundance given gene different samples. required assess differential expression realistically.4. Test differential expressionNote argument ‘n’ specifies number top differentially expressed genes displayed results. Setting ‘n = nrow(DE_results_Entrez)’ ensures results genes whose differential expression assessed displayed.5. Rename columns results differential expression analysis4. Take look top 10 genes results table generated edgeR","code":"\ny <- DGEList(counts = exprdat_filter_conv_filterByExpr, \n             group = sample_conditions)\ny <- calcNormFactors(y)\ny <- estimateDisp(y)\n# test each gene for differential expression: \nDE_results_edgeR_Entrez <- exactTest(y)\n\n# extract pre-specified (n) number of genes\nDE_results_edgeR_Entrez <- topTags(DE_results_edgeR_Entrez, \n                                   n = nrow(DE_results_edgeR_Entrez))\n# first, we transform the results table to a data frame so that we see the results\n# table directly when accessing it through the name \"res\"\nDE_results_edgeR_Entrez <- as.data.frame(DE_results_edgeR_Entrez)\n\n# rename column that contains adjusted p-values: rename padj to p_adj\nDE_results_edgeR_Entrez <- dplyr::rename(DE_results_edgeR_Entrez, \n                                         p_adj = FDR)\nhead(DE_results_edgeR_Entrez, n = 20)\n#>                logFC   logCPM        PValue         p_adj\n#> 6192      10.1330599 6.154999  0.000000e+00  0.000000e+00\n#> 9087       5.5791707 2.519656 6.188599e-121 1.860602e-117\n#> 8228      -0.9448255 5.485319  1.821705e-17  3.651303e-14\n#> 8226      -0.7768228 2.571002  3.067361e-06  4.611011e-03\n#> 6615      -1.6460041 3.288135  4.698096e-06  5.627893e-03\n#> 10912     -1.5870378 2.679647  5.615726e-06  5.627893e-03\n#> 284486    -1.1257052 2.302952  1.949732e-05  1.674820e-02\n#> 1521       1.5019085 3.365855  2.906843e-05  2.184856e-02\n#> 55787     -0.4253221 5.207647  3.522694e-05  2.269295e-02\n#> 10732     -0.6028374 5.756558  3.773981e-05  2.269295e-02\n#> 100191040 -1.1506301 3.121643  4.727503e-05  2.584225e-02\n#> 412       -0.7312091 6.861545  1.064460e-04  5.333830e-02\n#> 159013    -0.5219775 3.911283  1.225919e-04  5.670349e-02\n#> 317        0.4048454 6.062183  2.164067e-04  9.294666e-02\n#> 51655     -1.3164084 3.094734  2.570863e-04  1.003474e-01\n#> 6662      -0.9774711 8.100796  2.804477e-04  1.003474e-01\n#> 9404       0.3361246 9.579044  2.837030e-04  1.003474e-01\n#> 171177    -0.6747490 6.350249  3.161790e-04  1.031954e-01\n#> 10479      0.3635303 6.142157  3.320976e-04  1.031954e-01\n#> 3725      -0.5320863 8.429198  3.593785e-04  1.031954e-01"},{"path":"transformation-of-the-rna-seq-data.html","id":"transformation-of-the-rna-seq-data","chapter":"4 Transformation of the RNA-Seq data","heading":"4 Transformation of the RNA-Seq data","text":"file, transform RNA-Seq data align characteristics microarray measurements using two approaches:approach 1: transformation using voomapproach 2: transformation using DESeq2’s varianceStabilizingTransformationNote PADOG web-based tool GSEA, two tools paper require (manual) transformation RNA-Seq data, require genes different format:PADOG: NCBI (Entrez) ID. Therefore requires gene expression data converted gene IDsGSEA: ENSEMBL ID. Therefore requires gene expression data initial gene IDsWe illustrate procedure transformation methods Entrez ID, identical procedure ENSEMBL ID provided corresponding R file ‘Instructions_RNASeq_Transformation.R’.","code":""},{"path":"transformation-of-the-rna-seq-data.html","id":"libraries-3","chapter":"4 Transformation of the RNA-Seq data","heading":"4.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load librariesDescription libraries:tweeDEseqCountData: methods transformation RNA-Seq data require conditions samples gene expression data set , case Pickrell data set, obtain library tweeDEseqCountData.tweeDEseqCountData: methods transformation RNA-Seq data require conditions samples gene expression data set , case Pickrell data set, obtain library tweeDEseqCountData.limma: Since first method transformation RNA-Seq data based limma’s voom, load corresponding library.limma: Since first method transformation RNA-Seq data based limma’s voom, load corresponding library.edgeR: Normalization additional component transformation RNA-Seq data first method employs (default) normalization technique provided edgeR library.edgeR: Normalization additional component transformation RNA-Seq data first method employs (default) normalization technique provided edgeR library.DESeq2: Since second method transformation RNA-Seq data provided DESeq2, load corresponding library.DESeq2: Since second method transformation RNA-Seq data provided DESeq2, load corresponding library.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"tweeDEseqCountData\")\nBiocManager::install(\"limma\")\nBiocManager::install(\"edgeR\")\nBiocManager::install(\"DESeq2\")\nlibrary(tweeDEseqCountData) \nlibrary(limma)\nlibrary(edgeR)\nlibrary(DESeq2)"},{"path":"transformation-of-the-rna-seq-data.html","id":"load-data-2","chapter":"4 Transformation of the RNA-Seq data","heading":"4.1.0.1 Load data","text":"load pre-filtered gene expression data sets genes identified initial NCBI (Entrez) ID format. Note purpose simplicity, assume gene expression measurements filtered using simple approach pre-filtering introduced DESeq2.obtain sample conditions pickrell data set (respective genders), also load data.purpose readability, assign gene expression data set neutral name “expression_data_filt_conv”.","code":"\n\nload(\"./data/Results_GeneID_Conversion_DuplicatesRemoval/exprdat_filter_conv_DESeq2.Rdata\")\n\n# for GSEA, we would load the pre-filtered RNA-Seq data with the genes identified in the ENSEMBL ID format \n#load(\"./data/Results_PreFiltering/expression_data_filterDESeq2.Rdata\")\n# load pickrell data \ndata(pickrell)\n\n# assign the conditions of the samples to object \"sample_conditions\"\nsample_conditions <- pickrell.eset$gender\n# gene expression data set with gene IDs converted to Entrez ID format: \nexpression_data_filt_conv <- exprdat_filter_conv_DESeq2"},{"path":"transformation-of-the-rna-seq-data.html","id":"transformation-of-the-gene-expression-data-set-with-converted-entrez-ids","chapter":"4 Transformation of the RNA-Seq data","heading":"4.2 Transformation of the gene expression data set with converted (Entrez) IDs","text":"","code":""},{"path":"transformation-of-the-rna-seq-data.html","id":"approach-1-transformation-using-voom","chapter":"4 Transformation of the RNA-Seq data","heading":"4.2.1 Approach 1: Transformation using voom","text":"Step 1: Generate DGEList object gene expression dataFunction arguments:counts: corresponds gene expression measurementscounts: corresponds gene expression measurementsgroup: corresponds conditions samplesgroup: corresponds conditions samplesStep 2: NormalizationNote use default normalization method TMM (“Trimmed mean M-values”).15 choices normalization can specified argument “method” function calcNormFactors().Step 3: Run voomNote make use precision weights official part voom. Instead, proceed cpm-transformed (normalized) gene expression measurements.Step 4: Convert resulting data set data frameAt point, transformed gene expression measurements stored object “expression_data_voomtransformed” form EList object. use GSA (specifically: PADOG), want convert transformed gene expression measurements data frame.Inspect first entries transformed RNA-Seq data set.","code":"\ncounts_voom <-DGEList(counts = expression_data_filt_conv, \n                      group = sample_conditions)\ncounts_voom <- calcNormFactors(counts_voom)\nexpression_data_voomtransformed <- voom(counts_voom)\nexpression_data_voomtransformed_Entrez <- as.data.frame(expression_data_voomtransformed)\nexpression_data_voomtransformed_Entrez[1:10, 1:5]\n#>         NA18486  NA18498   NA18499  NA18501  NA18502\n#> 8813  3.5635974 4.994885 4.0568571 5.047515 4.808758\n#> 57147 3.5635974 4.924837 5.4652000 4.994566 4.911852\n#> 55732 1.5311760 2.828374 2.1093245 3.462552 2.686139\n#> 2268  4.2615689 4.413337 4.0920466 4.319188 4.626761\n#> 2519  3.9543874 4.586669 3.7830963 4.230379 3.614586\n#> 4800  7.3077585 6.731166 7.1453673 6.716623 7.143454\n#> 81887 4.0941122 2.765639 0.8869321 2.340562 2.686139\n#> 22875 4.7859899 6.986313 6.1557990 6.356387 5.726296\n#> 5893  0.8790993 1.361248 1.4174468 1.953539 1.191375\n#> 572   4.6716572 4.622514 4.7504301 3.538501 4.626761"},{"path":"transformation-of-the-rna-seq-data.html","id":"approach-2-transformation-using-deseq2s-variancestabilizingtransformation-love2014moderated","chapter":"4 Transformation of the RNA-Seq data","heading":"4.2.2 Approach 2: Transformation using DESeq2’s VarianceStabilizingTransformation16","text":"Step 1: generate data frame contain condition sampleJust like starting point differential expression analysis, need generate input object(s) required working DESeq2. , generate data frame colnames contains sample (rownames) corresponding condition (form “treated” vs. “untreated”).Step 2: Generate DESeqDataSetDESeq2 eventually operates “DESeqDataSet”, contains gene expression measurements, information samples (: sample conditions) well indication variables count data sample depend .Relevant arguments function DESeqDataSetFromMatrix:countData: count data gene expression data setcountData: count data gene expression data setcolData: data frame contains information samples (see ) conditions samples (required) possibly variables correct (batch effects)colData: data frame contains information samples (see ) conditions samples (required) possibly variables correct (batch effects)design: indicates variables colData used modelling\ndetailed: argument design used estimate dispersions log2 fold changes model\none variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: “design ~ batch + condition”\ndesign: indicates variables colData used modellingmore detailed: argument design used estimate dispersions log2 fold changes modelif one variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: “design ~ batch + condition”, disregard possible batch effects focus conditions samples.Step 3: Perform DESeq2’s varianceStabilizingTransformationThis transformation results values variance approximately approximately constant throughout range mean. Furthermore, values normalized library size.Step 4: Convert data frameWe convert transformed gene expression data set data frame.Inspect first entries transformed gene expression data set","code":"\n# the names of the samples are stored as the row names of the data frame\n# -> important: make sure that the order of the conditions in sample_conditions corresponds to the order of the samples in expression_data\n  coldata <- data.frame(sample_conditions, \n                        row.names = colnames(expression_data_filt_conv))\n  \n# rename the column header to \"condition\" \ncolnames(coldata) <- \"condition\"\n  \n# recode the variable condition as a factor \n# rename the sample conditions (in this case from \"female\" and \"male\") to \"untreated\" and \"treated\"\n# note: make sure that the control level in variable condition is coded as the first level (i.e. \"untreated\")\ncoldata$condition <- factor(coldata$condition, \n                            labels = c(\"untreated\",\"treated\"))\n\n# inspect resulting data frame: \nhead(coldata, n = 10)\n#>         condition\n#> NA18486   treated\n#> NA18498   treated\n#> NA18499 untreated\n#> NA18501   treated\n#> NA18502 untreated\n#> NA18504   treated\n#> NA18505 untreated\n#> NA18507   treated\n#> NA18508 untreated\n#> NA18510   treated\ndds<-DESeqDataSetFromMatrix(countData = expression_data_filt_conv, \n                            colData = coldata, \n                            design = ~ condition)\n# perform variance stabilizing transformation\nexpression_data_vsttransformed <-vst(dds)\n    \n# since the data set is now in the format of a DESeqTransform data set, the transformed count data are not directly accessible use function assay() which lets us access the count data:\nexpression_data_vsttransformed <- assay(expression_data_vsttransformed)\nexpression_data_vsttransformed_Entrez <- as.data.frame(expression_data_vsttransformed)\nexpression_data_vsttransformed_Entrez[1:10, 1:5]\n#>        NA18486  NA18498  NA18499  NA18501  NA18502\n#> 8813  5.475282 6.471173 5.786311 6.551076 6.317231\n#> 57147 5.475282 6.416409 6.857113 6.508884 6.396753\n#> 55732 4.471560 5.050287 4.706549 5.425412 4.967019\n#> 2268  5.939797 6.032867 5.810294 5.996914 6.179690\n#> 2519  5.727813 6.159507 5.605070 5.933449 5.487017\n#> 4800  8.527528 7.963648 8.355275 7.998985 8.336457\n#> 81887 5.822793 5.018101 4.256734 4.818117 4.967019\n#> 22875 6.327592 8.199396 7.451246 7.670505 7.061865\n#> 5893  4.246067 4.421462 4.433534 4.644343 4.349009\n#> 572   6.240388 6.186132 6.286555 5.472331 6.179690"},{"path":"goseq.html","id":"goseq","chapter":"5 GOSeq","heading":"5 GOSeq","text":"","code":""},{"path":"goseq.html","id":"content-of-this-script","chapter":"5 GOSeq","heading":"5.1 Content of this script","text":"script, following two things:Based results differential expression analysis, generated voom/limma, DESeq2 , edgeR, go steps required run GOSeq.Based results differential expression analysis, generated voom/limma, DESeq2 , edgeR, go steps required run GOSeq.go (meaningful) researchers’ degrees freedom.go (meaningful) researchers’ degrees freedom.","code":""},{"path":"goseq.html","id":"libraries-4","chapter":"5 GOSeq","heading":"5.2 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load librariesDescription libraries:tweeDEseqCountData: addition results differential expression analysis, also need raw count data case want adjust bias account (see step 4 ‘Researcher’s degrees freedom’ end script).tweeDEseqCountData: addition results differential expression analysis, also need raw count data case want adjust bias account (see step 4 ‘Researcher’s degrees freedom’ end script).Biobase: Required access count data pickrell data set.Biobase: Required access count data pickrell data set.goseq: Offers implementation method GOSeq.goseq: Offers implementation method GOSeq.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"tweeDEseqCountData\")\nBiocManager::install(\"Biobase\")\nBiocManager::install(\"goseq\")\nlibrary(tweeDEseqCountData)  \nlibrary(Biobase)\nlibrary(goseq)"},{"path":"goseq.html","id":"load-data-3","chapter":"5 GOSeq","heading":"5.3 Load data","text":"starting point GOSeq results differential expression analysis. Since GOSeq works Ensembl gene IDs, load corresponding results differential expression analysis Ensembl gene IDs.Since relevant columns results table unified three methods differential expression analysis, subsequent steps identical results table. Therefore, arbitrarily proceed one results table differential expression analysis, namely DESeq2.simplified readability, store corresponding results object neutral name:Note easily change one results tables voom/limma edgeR:mentioned , need expression measurements pickrell data set one researchers’ degrees freedom.","code":"\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_limma_Ensembl.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_DESeq2_Ensembl.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_edgeR_Ensembl.Rdata\")\nDE_results <- DE_results_DESeq2_Ensembl\n# DE_results <- DE_results_limma_Ensembl\n# or \n# DE_results <- DE_results_DESeq2_Ensembl\n# load pickrell data set\ndata(pickrell)\n\n# set gene expression data set \nexpression_data <- Biobase::exprs(pickrell.eset)"},{"path":"goseq.html","id":"gene-set-analysis","chapter":"5 GOSeq","heading":"5.4 Gene Set Analysis","text":"","code":""},{"path":"goseq.html","id":"step-1-preparation-of-required-input-object","chapter":"5 GOSeq","heading":"5.4.1 Step 1: Preparation of required input object","text":"GOSeq’s required input object differs objects typically required ORA tools. Instead list differentially expressed genes, GOSeq accepts input “named binary vector” withvalues 0 (differentially expressed genes) 1 (differentially expressed genes).values 0 (differentially expressed genes) 1 (differentially expressed genes).names correspond associated gene IDs.names correspond associated gene IDs.Note methods differential expression analysis, DESeq2, set adjusted p-values genes NA. means genes assessed respects differential expression. Consequently, genes assigned neither value 1 0 input object. therefore remove genes adjusted p-value set NA creation named binary vector.Note “bin_vec_DEG” stands binary vector differentially expressed genes.illustration purposes: compare number differentially expressed genes results table differential expression analysis number differentially expressed genes named binary vector.","code":"\n# 1. for each gene from the experiment, indicate those that have an EXISTING (i.e.\n# NON-MISSING) p-value\nindicator_nonNA_p <- !is.na(DE_results$p_adj)\n\n# 2. using the indicator from 1., subset the results of differential expression\n# analysis to only those genes with an EXISTING (i.e. NON-MISSING) p-value\nDE_results_noNA <- DE_results[indicator_nonNA_p,]\n\n# 3. create vector with binary value (0 or 1) for each gene in DE_results_noNA\n# for this, we focus on the column p_adj which contains the adjusted p-values\nbin_vec_DEG <- ifelse(DE_results_noNA$p_adj < 0.05 , 1,0)\n\n# note: function ifelse() goes through each adjusted p-value in the results\n# of differential expression analysis and in a new vector, assigns value 1\n# if the adjusted p-value is < 0.05 and else value 0\n\n# 4. assign each value of the vector the corresponding gene ID\nnames(bin_vec_DEG) <- rownames(DE_results_noNA)\n\n# 5. results: named binary vector bin_vec_DEG\n# note that we here inspect only the first few entries \nhead(bin_vec_DEG, n = 20)\n#> ENSG00000000419 ENSG00000000457 ENSG00000000460 \n#>               0               0               0 \n#> ENSG00000000938 ENSG00000001036 ENSG00000001167 \n#>               0               0               0 \n#> ENSG00000001497 ENSG00000001561 ENSG00000002016 \n#>               0               0               0 \n#> ENSG00000002330 ENSG00000002587 ENSG00000002745 \n#>               0               0               0 \n#> ENSG00000002834 ENSG00000002919 ENSG00000003056 \n#>               0               0               0 \n#> ENSG00000003096 ENSG00000003249 ENSG00000003989 \n#>               0               0               0 \n#> ENSG00000004468 ENSG00000004478 \n#>               0               0\n# (i) initial results table of differential expression analysis\ntable(DE_results$p_adj < 0.05)\n#> \n#> FALSE  TRUE \n#> 10128    22\n\n# (ii) results table of differential expression analysis subsetted to those genes\n# with a non-missing adjusted p-value\ntable(DE_results_noNA$p_adj < 0.05)\n#> \n#> FALSE  TRUE \n#> 10128    22\n\n# (iii) named binary vector  \ntable(bin_vec_DEG)\n#> bin_vec_DEG\n#>     0     1 \n#> 10128    22"},{"path":"goseq.html","id":"step-2-calculate-probability-weight-for-each-gene","chapter":"5 GOSeq","heading":"5.4.2 Step 2: Calculate probability weight for each gene","text":"GOSeq works function nullp() calculate probability weight gene:overview available gene identifiers supported organisms see:Function arguments:DEgenes: named binary vector generated step 1DEgenes: named binary vector generated step 1genome: indicates organism gene expression measured\nspecify ‘organism = “hg19”’ human\norganisms, argument must adapted accordingly (“mm9” mouse)\ngenome: indicates organism gene expression measuredspecify ‘organism = “hg19”’ humanspecify ‘organism = “hg19”’ humanfor organisms, argument must adapted accordingly (“mm9” mouse)organisms, argument must adapted accordingly (“mm9” mouse)id: indicates gene identifier\nspecify ‘id = “knownGene”’ Entrez gene ID\nspecify ‘id = “ensGene”’ Ensembl gene ID (case )\nspecify ‘id = “geneSymbol”’ HGNC gene symbols\nid: indicates gene identifierspecify ‘id = “knownGene”’ Entrez gene IDspecify ‘id = “knownGene”’ Entrez gene IDspecify ‘id = “ensGene”’ Ensembl gene ID (case )specify ‘id = “ensGene”’ Ensembl gene ID (case )specify ‘id = “geneSymbol”’ HGNC gene symbolsspecify ‘id = “geneSymbol”’ HGNC gene symbolsNote 1: Argument bias.data specifies data detection differential expression\nmight dependent . default argument ‘bias.data = NULL’ specifies length gene retrieved UCSC genome browser, user can alternatively provide vector contains entry gene contained bin_vec_DEG. alternative suggested authors GOSeq account read count bias gene, .e. total number read counts across samples assigned individual gene.Note 2: default, probability weight function plotted nullp() run. can deactivated adding function argument ‘plot.fit = FALSE’.Inspect resulting data frame:results table nullp() provides one row data gene following information:DEgenes: indicates status differential expression (0/1). information can directly extracted input objectDEgenes: indicates status differential expression (0/1). information can directly extracted input objectbias.data: numeric value bias gene concerning detection differential expression. usually corresponds length genebias.data: numeric value bias gene concerning detection differential expression. usually corresponds length genepwf: value probability weighting function genepwf: value probability weighting function geneNote values bias.data resulting data frame depend function argument bias.data function nullp() (information ).","code":"\nsupportedGeneIDs()\nProbabilityWeightings <- nullp(DEgenes = bin_vec_DEG,\n             genome= \"hg19\",\n             id= \"ensGene\")\nhead(ProbabilityWeightings, n = 10)\n#>                 DEgenes bias.data        pwf\n#> ENSG00000000419       0    1079.5 0.00219934\n#> ENSG00000000457       0    3128.5 0.00219934\n#> ENSG00000000460       0    3126.0 0.00219934\n#> ENSG00000000938       0    2437.0 0.00219934\n#> ENSG00000001036       0    1365.0 0.00219934\n#> ENSG00000001167       0    6140.0 0.00219934\n#> ENSG00000001497       0    2398.5 0.00219934\n#> ENSG00000001561       0    4590.5 0.00219934\n#> ENSG00000002016       0    2712.5 0.00219934\n#> ENSG00000002330       0    1074.0 0.00219934"},{"path":"goseq.html","id":"step-3-test-for-differential-enrichment","chapter":"5 GOSeq","heading":"5.4.3 Step 3: Test for differential enrichment","text":"Function arguments:pwf: typically output nullp() function (step 2), .e. probability weighting function\ngenome: indicates organism gene expression measured (see also step 2)\nspecify organism = “hg19” human\norganisms, argument must adapted accordingly (“mm9” mouse)\npwf: typically output nullp() function (step 2), .e. probability weighting function\ngenome: indicates organism gene expression measured (see also step 2)specify organism = “hg19” humanspecify organism = “hg19” humanfor organisms, argument must adapted accordingly (“mm9” mouse)organisms, argument must adapted accordingly (“mm9” mouse)id: indicates gene identifier (see also step 2)\nspecify ‘id = “knownGene”’ Entrez gene ID\nspecify ‘id = “ensGene”’ Ensembl gene ID\nspecify ‘id = “geneSymbol”’ HGNC gene symbols\nid: indicates gene identifier (see also step 2)specify ‘id = “knownGene”’ Entrez gene IDspecify ‘id = “knownGene”’ Entrez gene IDspecify ‘id = “ensGene”’ Ensembl gene IDspecify ‘id = “ensGene”’ Ensembl gene IDspecify ‘id = “geneSymbol”’ HGNC gene symbolsspecify ‘id = “geneSymbol”’ HGNC gene symbolstest.cats: gene set database\n“GO:BP”, “GO:MF”, “GO:CC” : geneset database GO respective subontology\n“KEGG”: geneset database KEGG\ntest.cats: gene set database“GO:BP”, “GO:MF”, “GO:CC” : geneset database GO respective subontology“GO:BP”, “GO:MF”, “GO:CC” : geneset database GO respective subontology“KEGG”: geneset database KEGG“KEGG”: geneset database KEGG","code":"\nGOSeq_results <- goseq(pwf = ProbabilityWeightings,\n                       genome = \"hg19\",\n                       id = \"ensGene\",\n                       test.cats = \"GO:BP\")"},{"path":"goseq.html","id":"step-4-adjust-for-multiple-testing","chapter":"5 GOSeq","heading":"5.4.4 Step 4: Adjust for multiple testing","text":"Note GOSeq perform adjustment multiple testing internally MUST performed user manually. therefore add new column contains corresponding adjusted p-values. Relevant -representation test (unadjusted) p-values column “over_represented_pvalue” adjust multiple testing following:Note default, p.adjust() (library base) performs multiple test adjustment based method Benjamini Hochberg.","code":"\nGOSeq_results$p_adj_overrepresented <- p.adjust(GOSeq_results$over_represented_pvalue)"},{"path":"goseq.html","id":"step-5-interpretation-of-the-results-table","chapter":"5 GOSeq","heading":"5.4.5 Step 5: Interpretation of the results table","text":"Inspect final results table:Columns results table:Category: provides ID gene set (based choice gene set\ndatabase step 4)Category: provides ID gene set (based choice gene set\ndatabase step 4)over_represented_pvalue: p-value -representation\nIMPORTANT NOTE: use p-values assess differential enrichment\ngiven gene set, since p-value adjusted multiple\ntesting\nover_represented_pvalue: p-value -representationIMPORTANT NOTE: use p-values assess differential enrichment\ngiven gene set, since p-value adjusted multiple\ntestingunder_represented_p-value: p-value -representation\nrelevant want test -representation\nimportant note: interested testing -representation,\nmust adjust p-values multiple testing:\nunder_represented_p-value: p-value -representationnot relevant want test -representationnot relevant want test -representationimportant note: interested testing -representation,\nmust adjust p-values multiple testing:important note: interested testing -representation,\nmust adjust p-values multiple testing:numDEInCat: gives number differentially expressed genes input members given gene setnumDEInCat: gives number differentially expressed genes input members given gene setnumInCat: number genes members given gene setnumInCat: number genes members given gene setterm: description gene set\nNOTE: column provided geneset database GO\nterm: description gene setNOTE: column provided geneset database GOontology: subontology geneset database GO (based choice step 3)\ncolumn provided geneset database GO\nontology: subontology geneset database GO (based choice step 3)column provided geneset database GOp_adj_overrepresented: p-value -representation ADJUSTED\nmultiple testing\nbased adjusted p-values, differential enrichment (.e. significant\n-representation) can assessed\np_adj_overrepresented: p-value -representation ADJUSTED\nmultiple testingbased adjusted p-values, differential enrichment (.e. significant\n-representation) can assessedtypically: detect gene sets differentially enriched value \np_adj_overrepresented < 0.05typically: detect gene sets differentially enriched value \np_adj_overrepresented < 0.05","code":"\nhead(GOSeq_results, n = 10)\n#>        category over_represented_pvalue\n#> 9794 GO:0072132             0.001436536\n#> 8615 GO:0060806             0.001966139\n#> 3792 GO:0030036             0.003004745\n#> 5449 GO:0035965             0.003928626\n#> 6217 GO:0043503             0.003928626\n#> 9544 GO:0071557             0.003928626\n#> 3786 GO:0030029             0.004596282\n#> 2746 GO:0010957             0.005887469\n#> 8611 GO:0060800             0.005887469\n#> 9365 GO:0071205             0.005887469\n#>      under_represented_pvalue numDEInCat numInCat\n#> 9794                0.9999774          2       29\n#> 8615                1.0000000          1        1\n#> 3792                0.9997067          4      319\n#> 5449                0.9999963          1        2\n#> 6217                0.9999963          1        2\n#> 9544                0.9999963          1        2\n#> 3786                0.9994938          4      359\n#> 2746                0.9999891          1        3\n#> 8611                0.9999891          1        3\n#> 9365                0.9999891          1        3\n#>                                                                                        term\n#> 9794                                                               mesenchyme morphogenesis\n#> 8615 negative regulation of cell differentiation involved in embryonic placenta development\n#> 3792                                                        actin cytoskeleton organization\n#> 5449                                                      cardiolipin acyl-chain remodeling\n#> 6217                                                       skeletal muscle fiber adaptation\n#> 9544                                                           histone H3-K27 demethylation\n#> 3786                                                           actin filament-based process\n#> 2746                                  negative regulation of vitamin D biosynthetic process\n#> 8611          regulation of cell differentiation involved in embryonic placenta development\n#> 9365                                   protein localization to juxtaparanode region of axon\n#>      ontology p_adj_overrepresented\n#> 9794       BP                     1\n#> 8615       BP                     1\n#> 3792       BP                     1\n#> 5449       BP                     1\n#> 6217       BP                     1\n#> 9544       BP                     1\n#> 3786       BP                     1\n#> 2746       BP                     1\n#> 8611       BP                     1\n#> 9365       BP                     1\n#GOSeq_results$p_adj_underrepresented <- p.adjust(GOSeq_results$under_represented_pvalue)"},{"path":"goseq.html","id":"researchers-degrees-of-freedom","chapter":"5 GOSeq","heading":"5.5 Researchers’ degrees of freedom","text":"part, go parameters can adapted GOSeq workflow. important note intention behind going researchers’ degrees freedom give understanding can adapt given (parameter) setting research question. even important keep mind intention behind going flexible parameters change order help obtain preferable results systematically changing parameters since behaviour correspond “cherry-picking”. changes parameter choice must documented transparently.","code":""},{"path":"goseq.html","id":"change-1-change-gene-set-database","chapter":"5 GOSeq","heading":"5.5.1 Change 1: Change gene set database","text":"gene set database can adjusted function goseq() argument test.cats, arguments therefore also results function nullp() remain untouched., want change gene set database KEGGInspect resultsNote gene set database KEGG specified, column “term” provided results table give description corresponding gene set.\ngene set databases can specified setting argument totest.cats = “GO:CC”: GO subontology Cellular Componenttest.cats = “GO:MF”: GO subontology Molecular Function","code":"\nGOSeq_results_database <- goseq(pwf = ProbabilityWeightings,\n                                genome = \"hg19\",\n                                id = \"ensGene\",\n                                test.cats = \"KEGG\")\n\n\n# adjust the p-values of over-representation for multiple testing \nGOSeq_results_database$p_adj_overrepresented <- p.adjust(GOSeq_results_database$over_represented_pvalue)\nhead(GOSeq_results_database, n = 10)\n#>     category over_represented_pvalue\n#> 15     00140              0.05639237\n#> 74     00830              0.07679025\n#> 112    04115              0.10664353\n#> 137    04520              0.12606006\n#> 131    04360              0.17902850\n#> 110    04110              0.19106380\n#> 138    04530              0.19404770\n#> 87     03010              0.20294007\n#> 118    04142              0.22908991\n#> 88     03013              0.24046217\n#>     under_represented_pvalue numDEInCat numInCat\n#> 15                 0.9986285          1       16\n#> 74                 0.9973902          1       22\n#> 112                0.9948370          1       31\n#> 137                0.9926905          1       37\n#> 131                0.9848017          1       54\n#> 110                0.9825791          1       58\n#> 138                0.9820026          1       59\n#> 87                 0.9802242          1       62\n#> 118                0.9744602          1       71\n#> 88                 0.9716992          1       75\n#>     p_adj_overrepresented\n#> 15                      1\n#> 74                      1\n#> 112                     1\n#> 137                     1\n#> 131                     1\n#> 110                     1\n#> 138                     1\n#> 87                      1\n#> 118                     1\n#> 88                      1"},{"path":"goseq.html","id":"change-2-include-genes-that-are-no-member-of-any-gene-set-in-calculation-of-the-p-value","chapter":"5 GOSeq","heading":"5.5.2 Change 2: Include genes that are no member of any gene set in calculation of the p-value","text":"default, gene sets included calculation p-value member least one gene set. However, user choice include genes input object, thus particularly member gene set.additional inclusion genes members gene set can specified argument use_genes_without_cat function goseq().Inspect resultsNote argument ‘use_genes_without_cat = TRUE’ used default earlier versions library goseq.","code":"\nGOSeq_results_allgenes <- goseq(pwf = ProbabilityWeightings,\n                                    genome = \"hg19\",\n                                    id = \"ensGene\",\n                                    test.cats = \"GO:BP\",\n                                    use_genes_without_cat = TRUE)\n\n# adjust the p-values of over-representation for multiple testing \nGOSeq_results_allgenes$p_adj_overrepresented <- p.adjust(GOSeq_results_allgenes$over_represented_pvalue)\nhead(GOSeq_results_allgenes, n = 10)\n#>        category over_represented_pvalue\n#> 9794 GO:0072132             0.001757439\n#> 8615 GO:0060806             0.002167488\n#> 5449 GO:0035965             0.004330490\n#> 6217 GO:0043503             0.004330490\n#> 9544 GO:0071557             0.004330490\n#> 3792 GO:0030036             0.004473754\n#> 2746 GO:0010957             0.006489017\n#> 8611 GO:0060800             0.006489017\n#> 9365 GO:0071205             0.006489017\n#> 3786 GO:0030029             0.006791812\n#>      under_represented_pvalue numDEInCat numInCat\n#> 9794                0.9999689          2       29\n#> 8615                1.0000000          1        1\n#> 5449                0.9999955          1        2\n#> 6217                0.9999955          1        2\n#> 9544                0.9999955          1        2\n#> 3792                0.9994964          4      319\n#> 2746                0.9999866          1        3\n#> 8611                0.9999866          1        3\n#> 9365                0.9999866          1        3\n#> 3786                0.9991380          4      359\n#>                                                                                        term\n#> 9794                                                               mesenchyme morphogenesis\n#> 8615 negative regulation of cell differentiation involved in embryonic placenta development\n#> 5449                                                      cardiolipin acyl-chain remodeling\n#> 6217                                                       skeletal muscle fiber adaptation\n#> 9544                                                           histone H3-K27 demethylation\n#> 3792                                                        actin cytoskeleton organization\n#> 2746                                  negative regulation of vitamin D biosynthetic process\n#> 8611          regulation of cell differentiation involved in embryonic placenta development\n#> 9365                                   protein localization to juxtaparanode region of axon\n#> 3786                                                           actin filament-based process\n#>      ontology p_adj_overrepresented\n#> 9794       BP                     1\n#> 8615       BP                     1\n#> 5449       BP                     1\n#> 6217       BP                     1\n#> 9544       BP                     1\n#> 3792       BP                     1\n#> 2746       BP                     1\n#> 8611       BP                     1\n#> 9365       BP                     1\n#> 3786       BP                     1"},{"path":"goseq.html","id":"change-3-change-the-method-for-the-calculation-of-the-p-value","chapter":"5 GOSeq","heading":"5.5.3 Change 3: Change the method for the calculation of the p-value","text":"method calculation p-value can adapted function goseq() argument method., want change method calculation p-value Wallenius approximation computationally expensive resampling.Inspect resultsNote default, 2000 samples calculated course resampling (see argument repcnt). argument NEVER played around generate preferable results. Instead, advisable keep parameter default configuration.\nAlso note , theoretically, GOSeq additionally offers use standard hypergeometric distribution method calculate p-value -representation. However, users explicitly advised using option since standard hypergeometric distribution adjust biases might present data.","code":"\nGOSeq_results_method <- goseq(pwf = ProbabilityWeightings,\n                              genome = \"hg19\",\n                              id = \"ensGene\",\n                              test.cats = \"GO:BP\",\n                              method = \"Sampling\")\n\n\n# adjust the p-values of over-representation for multiple testing \nGOSeq_results_method$p_adj_overrepresented <- p.adjust(GOSeq_results_method$over_represented_pvalue)\nhead(GOSeq_results_method, n = 10 )\n#>        category over_represented_pvalue\n#> 9794 GO:0072132             0.001499250\n#> 3792 GO:0030036             0.001999000\n#> 8615 GO:0060806             0.001999000\n#> 3786 GO:0030029             0.002498751\n#> 5449 GO:0035965             0.003998001\n#> 6217 GO:0043503             0.004497751\n#> 3962 GO:0030833             0.005497251\n#> 9365 GO:0071205             0.005497251\n#> 1733 GO:0007015             0.005997001\n#> 2001 GO:0008064             0.005997001\n#>      under_represented_pvalue numDEInCat numInCat\n#> 9794                        1          2       29\n#> 3792                        1          4      319\n#> 8615                        1          1        1\n#> 3786                        1          4      359\n#> 5449                        1          1        2\n#> 6217                        1          1        2\n#> 3962                        1          2       62\n#> 9365                        1          1        3\n#> 1733                        1          3      210\n#> 2001                        1          2       71\n#>                                                                                        term\n#> 9794                                                               mesenchyme morphogenesis\n#> 3792                                                        actin cytoskeleton organization\n#> 8615 negative regulation of cell differentiation involved in embryonic placenta development\n#> 3786                                                           actin filament-based process\n#> 5449                                                      cardiolipin acyl-chain remodeling\n#> 6217                                                       skeletal muscle fiber adaptation\n#> 3962                                            regulation of actin filament polymerization\n#> 9365                                   protein localization to juxtaparanode region of axon\n#> 1733                                                            actin filament organization\n#> 2001                                 regulation of actin polymerization or depolymerization\n#>      ontology p_adj_overrepresented\n#> 9794       BP                     1\n#> 3792       BP                     1\n#> 8615       BP                     1\n#> 3786       BP                     1\n#> 5449       BP                     1\n#> 6217       BP                     1\n#> 3962       BP                     1\n#> 9365       BP                     1\n#> 1733       BP                     1\n#> 2001       BP                     1"},{"path":"goseq.html","id":"change-4-change-the-bias-to-account-for-in-the-analysis","chapter":"5 GOSeq","heading":"5.5.4 Change 4: Change the bias to account for in the analysis","text":"example taken user manual GOSeq, now want adjust total number counts gene. idea behind context RNA-Seq data, magnitude counts given gene set reflects overall expression level. RNA-Seq data, takes form count data, higher magnitude counts also leads increased statistical power (detect gene differentially expressed), shall accounted now. important note accounting total number counts might also remove bias results actual differential expression conditions.Step 1: create vector contains total number read counts geneStep 2: Provide countbias function nullp()custom bias can provided function nullp() argument bias.data:Step 3: Run function goseq() adjusted probability weightingsStep 4: Perform adjustment multiple testing inspect final resultsStep 5: Inspect results","code":"\n# 1. Compute the sum of read counts of each gene across all samples from the gene expression data set\ncountbias <- rowSums(expression_data)\n\n# 2. Subset the vector countbias to all genes that are part of the input object bin_vec_DEG\n\n# (i) indicate which genes are a part of the input object:\nind_input <- names(countbias) %in% names(bin_vec_DEG)\n\n# (ii) subset vector countbias\ncountbias <- countbias[ind_input]\nProbabilityWeightings_countbias <- nullp(DEgenes = bin_vec_DEG,\n                                        genome= \"hg19\",\n                                        id= \"ensGene\",\n                                        bias.data = countbias) \nGOSeq_results_countbias <- goseq(pwf = ProbabilityWeightings_countbias, # adjusted probability weightings\n                                 genome = \"hg19\",\n                                 id = \"ensGene\",\n                                 test.cats = \"GO:BP\")\n#> Fetching GO annotations...\n#> For 995 genes, we could not find any categories. These genes will be excluded.\n#> To force their use, please run with use_genes_without_cat=TRUE (see documentation).\n#> This was the default behavior for version 1.15.1 and earlier.\n#> Calculating the p-values...\n#> 'select()' returned 1:1 mapping between keys and\n#> columns\nGOSeq_results_countbias$p_adj_overrepresented <- p.adjust(GOSeq_results_countbias$over_represented_pvalue)\nhead(GOSeq_results_countbias, n = 10)\n#>        category over_represented_pvalue\n#> 9794 GO:0072132             0.001651374\n#> 8615 GO:0060806             0.002373709\n#> 3792 GO:0030036             0.002652747\n#> 9544 GO:0071557             0.003349445\n#> 3786 GO:0030029             0.004301984\n#> 5449 GO:0035965             0.004806876\n#> 6217 GO:0043503             0.004827855\n#> 3962 GO:0030833             0.005561337\n#> 9365 GO:0071205             0.005738523\n#> 2050 GO:0008360             0.006366822\n#>      under_represented_pvalue numDEInCat numInCat\n#> 9794                0.9999721          2       29\n#> 8615                1.0000000          1        1\n#> 3792                0.9997499          4      319\n#> 9544                0.9999973          1        2\n#> 3786                0.9995350          4      359\n#> 5449                0.9999945          1        2\n#> 6217                0.9999945          1        2\n#> 3962                0.9998202          2       62\n#> 9365                0.9999896          1        3\n#> 2050                0.9997791          2       64\n#>                                                                                        term\n#> 9794                                                               mesenchyme morphogenesis\n#> 8615 negative regulation of cell differentiation involved in embryonic placenta development\n#> 3792                                                        actin cytoskeleton organization\n#> 9544                                                           histone H3-K27 demethylation\n#> 3786                                                           actin filament-based process\n#> 5449                                                      cardiolipin acyl-chain remodeling\n#> 6217                                                       skeletal muscle fiber adaptation\n#> 3962                                            regulation of actin filament polymerization\n#> 9365                                   protein localization to juxtaparanode region of axon\n#> 2050                                                               regulation of cell shape\n#>      ontology p_adj_overrepresented\n#> 9794       BP                     1\n#> 8615       BP                     1\n#> 3792       BP                     1\n#> 9544       BP                     1\n#> 3786       BP                     1\n#> 5449       BP                     1\n#> 6217       BP                     1\n#> 3962       BP                     1\n#> 9365       BP                     1\n#> 2050       BP                     1"},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"clusterprofilers-gsea-with-gene-set-database-go","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6 clusterProfiler’s GSEA (with gene set database GO)","text":"script, following two things:Based results differential expression analysis voom/limma, DESeq2, edgeR, go \nsteps required run clusterProfiler’s GSEA gene set database GO.\nBased results differential expression analysis voom/limma, DESeq2, edgeR, go \nsteps required run clusterProfiler’s GSEA gene set database GO.go (meaningful) researchers’ degrees freedom.\ngo (meaningful) researchers’ degrees freedom.Note provide separate file gene set databases GO KEGG since clusterProfiler differs accepted gene ID formats . GO, variety formats, including Ensembl ID, accepted, gene IDs must converted NCBI (Entrez) ID choosing KEGG.","code":""},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"libraries-5","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6.0.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load Libraries Description packagesclusterProfiler: use clusterProfiler’s implementation GSEA.clusterProfiler: use clusterProfiler’s implementation GSEA.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (see chapter ‘’). Note library required running clusterProfiler’s GSEA gene set database GO.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (see chapter ‘’). Note library required running clusterProfiler’s GSEA gene set database GO.DESeq2: contrast detecting differential expressed genes, done solely based adjusted \\(p\\)-vaules, additionally use estimated log fold changes generating gene ranking. DESeq2, estimated log fold change values shrunken using additional function, hence loading library.DESeq2: contrast detecting differential expressed genes, done solely based adjusted \\(p\\)-vaules, additionally use estimated log fold changes generating gene ranking. DESeq2, estimated log fold change values shrunken using additional function, hence loading library.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"org.Hs.eg.db\")\nBiocManager::install(\"DESeq2\")\nBiocManager::install(\"apeglm\")\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db)\nlibrary(DESeq2)"},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"load-data-4","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6.1 Load data","text":"Note , described , clusterProfiler accepts Ensembl IDs working gene set database GO. generating ranking genes DESeq2, shrinkage log fold change estimates performed requires output function DESeq(), named ‘dds’ (see Chapter ‘Differential expression analysis’).","code":"\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_limma_Ensembl.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_DESeq2_Ensembl.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_edgeR_Ensembl.Rdata\")\n\n# load dds object \nload(\"./data/Results_Differential_Expression_Analysis/dds_Ensembl.Rdata\")"},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"run-gsea","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6.2 Run GSEA","text":"","code":""},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"step-1-generation-of-required-input-object","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6.2.1 Step 1: Generation of required input object","text":"following, illustrate creation required input object using three different methods differential expression analysis, voom/limma, DESeq2, edgeR, shall serve three options. required input object clusterProfiler “order ranked geneList”, .e. vector ranking value gene, named respective gene IDs ordered descending manner.\nchoose following gene-level statistic based can transform results differential expression analysis gene ranking:\n\\[(-1) * \\log_{10}(p\\text{-value}) * \\text{sign}(\\text{log fold change})\\].\nNote “\\(p\\)-value” denotes non-adjusted p-value.","code":""},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"option-1-generate-required-input-using-voomlimma","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6.2.1.1 Option 1: Generate required input using voom/limma","text":"starting, want short look results table differential expression analysis generated limma can identify relevant columns.Generate gene ranking:Inspect first entries ranking vector","code":"\nhead(DE_results_limma_Ensembl, n = 10)\n#>                      logFC   AveExpr         t      P.Value\n#> ENSG00000129824  9.2133770 1.9601987 47.132083 1.061719e-55\n#> ENSG00000099749  6.1709577 0.4153409 40.465602 4.024370e-51\n#> ENSG00000154620  5.0848991 0.4867874 26.729729 5.097737e-39\n#> ENSG00000006757 -0.9214380 5.3073131 -8.805751 4.963544e-13\n#> ENSG00000130021 -0.8516173 2.1365915 -4.388951 3.846411e-05\n#> ENSG00000185753 -0.5479423 3.6902013 -4.217130 7.121081e-05\n#> ENSG00000086712 -0.4017993 5.0899555 -4.023482 1.403927e-04\n#> ENSG00000123689 -1.4679601 5.1661467 -3.850433 2.537689e-04\n#> ENSG00000177606 -0.5844304 8.2469942 -3.910485 2.069770e-04\n#> ENSG00000120868  0.4076940 5.9420527  3.832337 2.697515e-04\n#>                        p_adj           B\n#> ENSG00000129824 6.631497e-52 94.00193786\n#> ENSG00000099749 1.256811e-47 86.16860821\n#> ENSG00000154620 1.061349e-35 68.53453635\n#> ENSG00000006757 7.750575e-10 19.36978341\n#> ENSG00000130021 4.804937e-02  2.04582318\n#> ENSG00000185753 7.413045e-02  1.30583651\n#> ENSG00000086712 1.252704e-01  0.48313770\n#> ENSG00000123689 1.684868e-01 -0.04984613\n#> ENSG00000177606 1.615973e-01 -0.13323415\n#> ENSG00000120868 1.684868e-01 -0.25078873\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e. which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes with an existing p-value\nind_nonNA_pvalue_limma_Ensembl <- !is.na(DE_results_limma_Ensembl$P.Value)\n\n# subset gene expression data set to those genes with an existing p-value\nDE_results_noNA_Ensembl <- DE_results_limma_Ensembl[ind_nonNA_pvalue_limma_Ensembl, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_limma_Ensembl <- sign(DE_results_noNA_Ensembl$logFC)*(-1)*log10(DE_results_noNA_Ensembl$P.Value)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_limma_Ensembl) <- rownames(DE_results_noNA_Ensembl)\n\n# 4. sort the vector in descending order\nrankvec_limma_Ensembl <- sort(rankvec_limma_Ensembl, decreasing=TRUE)\nhead(rankvec_limma_Ensembl , n = 10)\n#> ENSG00000129824 ENSG00000099749 ENSG00000154620 \n#>       54.973990       50.395302       38.292623 \n#> ENSG00000120868 ENSG00000110031 ENSG00000151445 \n#>        3.569036        3.262283        3.222725 \n#> ENSG00000065308 ENSG00000095015 ENSG00000198689 \n#>        3.198940        3.033258        2.949591 \n#> ENSG00000102893 \n#>        2.915174"},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"option-2-generate-required-input-using-deseq2","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6.2.1.2 Option 2: Generate required input using DESeq2","text":"Step 1: Perform differential expression analysisThis step performed Chapter ‘Differential expression analysis’. Note must exit DESeq2 workflow script steps early since additional step required creation required input object. proceed object “dds_Ensembl” ’ve obtained step 2 DESeq2’s workflow differential expression analysis.Step 2: Shrink estimated log fold change valuesThe intuition behind shrinkage log fold change values , mentioned paper, RNA-Seq data consists (raw form) count data inherently heteroscedastic, .e. variance count data depends mean count count data. observable ratios counts considerably noisier low magnitudes counts compared higher magnitudes, .e. log fold changes conditions higher overall magnitude counts lower.\nDESeq2 addresses issue shrinking estimated log fold changes direction 0 magnitude shrinkage higher available information gene lower (may low magnitude counts, high dispersion degrees freedom.). detailed description provided DESeq2 paper Love et al. (2014).17Perform shrinkage:Function arguments:type: method perform shrinkage. opt default ‘type = apeglm’, however, two alternative options user can choose .type: method perform shrinkage. opt default ‘type = apeglm’, however, two alternative options user can choose .coef: indicate coefficients shrunk. can obtain right argument following function call:coef: indicate coefficients shrunk. can obtain right argument following function call:command shows us can either shrink intercept “condition_treated_vs_untreated”. Since want shrink intercept estimated log fold changes, opt second option “condition_treated_vs_untreated”.generating ranking, want inspect results table generated DESeq2 (incl. shrinkage) can identify relevant columnsNow proceed generating ranking.Step 3: Generate gene ranking based results differential expression analysisInspect first entries ranking vector","code":"\ndds_Ensembl\n#> class: DESeqDataSet \n#> dim: 10151 69 \n#> metadata(1): version\n#> assays(6): counts mu ... replaceCounts replaceCooks\n#> rownames(10151): ENSG00000000419 ENSG00000000457 ...\n#>   ENSG00000254245 ENSG00000254290\n#> rowData names(23): baseMean baseVar ... maxCooks\n#>   replace\n#> colnames(69): NA18486 NA18498 ... NA19239 NA19257\n#> colData names(3): condition sizeFactor replaceable\nDE_results_DESeq2_shrink_Ensembl <- lfcShrink(dds_Ensembl,\n                                               coef = \"condition_treated_vs_untreated\",\n                                               type=\"apeglm\")\nresultsNames(dds_Ensembl)\n#> [1] \"Intercept\"                     \n#> [2] \"condition_treated_vs_untreated\"\nhead(DE_results_DESeq2_shrink_Ensembl, n = 10)\n#> log2 fold change (MAP): condition treated vs untreated \n#> Wald test p-value: condition treated vs untreated \n#> DataFrame with 10 rows and 5 columns\n#>                  baseMean log2FoldChange      lfcSE\n#>                 <numeric>      <numeric>  <numeric>\n#> ENSG00000000419  62.71639   -1.75964e-05 0.00144263\n#> ENSG00000000457  70.46817    2.47225e-06 0.00144258\n#> ENSG00000000460  13.00098    7.54395e-06 0.00144264\n#> ENSG00000000938  43.56413    7.35510e-06 0.00144267\n#> ENSG00000001036  37.95191    1.68099e-06 0.00144257\n#> ENSG00000001167 228.48025    6.71863e-07 0.00144253\n#> ENSG00000001497  11.52425    7.90345e-07 0.00144265\n#> ENSG00000001561 175.93013    1.18172e-05 0.00144266\n#> ENSG00000002016   4.68668    7.85799e-06 0.00144267\n#> ENSG00000002330  66.34023   -2.62299e-05 0.00144267\n#>                     pvalue      padj\n#>                  <numeric> <numeric>\n#> ENSG00000000419 0.72425162  0.971027\n#> ENSG00000000457 0.79118089  0.981324\n#> ENSG00000000460 0.27497228  0.820697\n#> ENSG00000000938 0.55928481  0.945493\n#> ENSG00000001036 0.95622491  0.997305\n#> ENSG00000001167 0.59046443  0.953105\n#> ENSG00000001497 0.88864354  0.992301\n#> ENSG00000001561 0.06610429  0.575449\n#> ENSG00000002016 0.14450244  0.703418\n#> ENSG00000002330 0.00949353  0.350398\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_Ensembl <- !is.na(DE_results_DESeq2_shrink_Ensembl$pvalue)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA_Ensembl <- DE_results_DESeq2_shrink_Ensembl[ind_nonNA_pvalue_Ensembl, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_DESeq2_Ensembl <- sign(DE_results_noNA_Ensembl$log2FoldChange)*(-1)*log10(DE_results_noNA_Ensembl$pvalue)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_DESeq2_Ensembl) <- rownames(DE_results_noNA_Ensembl)\n\n# 4. sort the vector in descending order\nrankvec_DESeq2_Ensembl <- sort(rankvec_DESeq2_Ensembl, decreasing=TRUE)\nhead(rankvec_DESeq2_Ensembl , n = 10)\n#> ENSG00000129824 ENSG00000099749 ENSG00000198692 \n#>      204.454993      105.507250       75.109639 \n#> ENSG00000154620 ENSG00000157828 ENSG00000183878 \n#>       64.872131       39.560339        7.260319 \n#> ENSG00000143632 ENSG00000172543 ENSG00000082397 \n#>        4.867166        4.469387        3.999177 \n#> ENSG00000107731 \n#>        3.973429"},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"option-3-generate-required-input-using-edger","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6.2.1.3 Option 3: Generate required input using edgeR","text":"generating ranking, want inspect results table differential expression analysis generated edgeR identify relevant columns.Now proceed generating ranking.Inspect first entries ranking vector:","code":"\nhead(DE_results_edgeR_Ensembl, n = 10)\n#>                      logFC   logCPM        PValue\n#> ENSG00000129824 10.1353289 6.130860  0.000000e+00\n#> ENSG00000099749  7.8142855 2.949875 3.594389e-197\n#> ENSG00000154620  5.5800954 2.493788 1.225959e-122\n#> ENSG00000006757 -0.9412925 5.457916  1.516865e-17\n#> ENSG00000130021 -0.7752345 2.545089  3.626637e-06\n#> ENSG00000124216 -1.6423626 3.261210  4.708108e-06\n#> ENSG00000130222 -1.5833419 2.652436  5.638958e-06\n#> ENSG00000196407 -1.1211411 2.276703  1.959274e-05\n#> ENSG00000172543  1.5008703 3.336720  2.836816e-05\n#> ENSG00000086712 -0.4218274 5.181013  3.922485e-05\n#>                         p_adj\n#> ENSG00000129824  0.000000e+00\n#> ENSG00000099749 1.122528e-193\n#> ENSG00000154620 2.552447e-119\n#> ENSG00000006757  2.368584e-14\n#> ENSG00000130021  4.530395e-03\n#> ENSG00000124216  4.901141e-03\n#> ENSG00000130222  5.031562e-03\n#> ENSG00000196407  1.529703e-02\n#> ENSG00000172543  1.968750e-02\n#> ENSG00000086712  2.449984e-02\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_Ensembl <- !is.na(DE_results_edgeR_Ensembl$PValue)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA_Ensembl <- DE_results_edgeR_Ensembl[ind_nonNA_pvalue_Ensembl, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_edgeR_Ensembl <- sign(DE_results_noNA_Ensembl$logFC)*(-1)*log10(DE_results_noNA_Ensembl$p_adj)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_edgeR_Ensembl) <- rownames(DE_results_noNA_Ensembl)\n\n# 4. sort the vector in descending order\nrankvec_edgeR_Ensembl <- sort(rankvec_edgeR_Ensembl, decreasing=TRUE)\n\n# inspect ranking vector: \nhead(rankvec_edgeR_Ensembl, n = 10)\n#> ENSG00000129824 ENSG00000099749 ENSG00000154620 \n#>             Inf     192.9498029     118.5930433 \n#> ENSG00000172543 ENSG00000120868 ENSG00000110031 \n#>       1.7058094       1.0563194       1.0370201 \n#> ENSG00000198689 ENSG00000065308 ENSG00000095015 \n#>       0.9865108       0.8790009       0.8790009 \n#> ENSG00000228253 \n#>       0.8654283\n\n# 5. special problem here: gene ENSG00000129824 has a ranking value Inf since its adjusted\n# p-value in the results table of differential expression analysis amounts to 0\n\n# here, we deal with this issue by resetting this ranking value to the highest ranking value\n# that occurs among the remaining genes\n# -> note that there is NO common way of dealing with this issue\nrankvec_edgeR_Ensembl[rankvec_edgeR_Ensembl == Inf] <- max(rankvec_edgeR_Ensembl[rankvec_edgeR_Ensembl != Inf])\nhead(rankvec_edgeR_Ensembl, n = 10)\n#> ENSG00000129824 ENSG00000099749 ENSG00000154620 \n#>     192.9498029     192.9498029     118.5930433 \n#> ENSG00000172543 ENSG00000120868 ENSG00000110031 \n#>       1.7058094       1.0563194       1.0370201 \n#> ENSG00000198689 ENSG00000065308 ENSG00000095015 \n#>       0.9865108       0.8790009       0.8790009 \n#> ENSG00000228253 \n#>       0.8654283"},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"step-2-run-gsea-with-gene-set-database-go","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6.2.2 Step 2: Run GSEA with gene set database GO","text":"purpose simplicity, work ranking generated using limma. However, can switch around discretion.Run GSEA gene set database GO. Note important set seed reproducibility.Arguments function gseGO():geneList: vector gene ranking (generated manner step 1)geneList: vector gene ranking (generated manner step 1)ont: subontology GO (must one “BP”, “CC”, “MF”)ont: subontology GO (must one “BP”, “CC”, “MF”)OrgDb: indicates organism gene expression measurements takenOrgDb: indicates organism gene expression measurements takenkeyTypes: purposes , argument keyType indicates gene ID format gene names vector rankvec\navailable keytypes can found following:\nkeyTypes: purposes , argument keyType indicates gene ID format gene names vector rankvecavailable keytypes can found following:seed = TRUE: set seed indicated (: seed = 1 )seed = TRUE: set seed indicated (: seed = 1 )additional arguments (appear code lines since keep default options)additional arguments (appear code lines since keep default options)exponent = 1: calculation enrichment score, gene weighted absolute value ranking metricexponent = 1: calculation enrichment score, gene weighted absolute value ranking metriceps = 1e-10: p-value smaller 1e-10 indicated 1e-10eps = 1e-10: p-value smaller 1e-10 indicated 1e-10pvalueCutoff = 0.05: gene sets p-value < 0.05 indicated results. Note want inspect gene sets results, set pvalueCutoff = 1pvalueCutoff = 0.05: gene sets p-value < 0.05 indicated results. Note want inspect gene sets results, set pvalueCutoff = 1pAdjustMethod = “BH”: adjustment multiple testing using method Benjamini HochbergpAdjustMethod = “BH”: adjustment multiple testing using method Benjamini Hochberg","code":"\nrankvec_Ensembl <- rankvec_limma_Ensembl\n\n# alternatively: \n#rankvec_Ensembl <- rankvec_DESeq2_Ensembl\n#rankvec_Ensembl <- rankvec_edgeR_Ensembl\n\n# important: set seed for reprodubibility\nset.seed(1)\n\nGSEA_GO <- gseGO(geneList = rankvec_Ensembl,\n                   ont = \"BP\",\n                   OrgDb = org.Hs.eg.db,\n                   keyType = \"ENSEMBL\",\n                   seed = TRUE) # set seed for reproducibility\nkeytypes(org.Hs.eg.db)\n#>  [1] \"ACCNUM\"       \"ALIAS\"        \"ENSEMBL\"     \n#>  [4] \"ENSEMBLPROT\"  \"ENSEMBLTRANS\" \"ENTREZID\"    \n#>  [7] \"ENZYME\"       \"EVIDENCE\"     \"EVIDENCEALL\" \n#> [10] \"GENENAME\"     \"GENETYPE\"     \"GO\"          \n#> [13] \"GOALL\"        \"IPI\"          \"MAP\"         \n#> [16] \"OMIM\"         \"ONTOLOGY\"     \"ONTOLOGYALL\" \n#> [19] \"PATH\"         \"PFAM\"         \"PMID\"        \n#> [22] \"PROSITE\"      \"REFSEQ\"       \"SYMBOL\"      \n#> [25] \"UCSCKG\"       \"UNIPROT\""},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"step-3-interpretation-of-the-results","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6.2.3 Step 3: Interpretation of the results","text":"Inspect results tableColumns results table:ID: ID gene setID: ID gene setDescription: Description Gene SetDescription: Description Gene SetsetSize: Size gene setsetSize: Size gene setenrichmentScore: Enrichment Score\nnote: enrichment score normalized gene set size\nmeans: larger gene sets automatically bigger (absolute) enrichment score, independent actual differential enrichment\nraw enrichment score therefore comparable different gene sets\nenrichmentScore: Enrichment Scorenote: enrichment score normalized gene set sizemeans: larger gene sets automatically bigger (absolute) enrichment score, independent actual differential enrichmentthe raw enrichment score therefore comparable different gene setsNES: Normalized version column enrichmentScore\nNES can compared different gene sets\nNES: Normalized version column enrichmentScoreNES can compared different gene setspvalue: p-value enrichment given gene set\nnote: raw p-value adjusted multiple testing\ntherefore: used assess differential enrichment given gene set\npvalue: p-value enrichment given gene setnote: raw p-value adjusted multiple testingtherefore: used assess differential enrichment given gene setp.adjust: adjusted p-value given gene set.\nNote p-value now adjusted multiple testing can therefore used assess differential enrichment. instance, detect genes p.adjust < 0.05 differentially enriched.\np.adjust: adjusted p-value given gene set.Note p-value now adjusted multiple testing can therefore used assess differential enrichment. instance, detect genes p.adjust < 0.05 differentially enriched.qvalue: adjusted p-value given gene set. Note qvalue analog p.adjust, adjusted multiple testing using different method.qvalue: adjusted p-value given gene set. Note qvalue analog p.adjust, adjusted multiple testing using different method.Note can either use column p.adjust qvalue assess whether gene set differentially enriched .rank: position ranked list genes maximum difference two sums occurs, .e. rank enrichment score extracted.rank: position ranked list genes maximum difference two sums occurs, .e. rank enrichment score extracted.leading_edge:\ntags: percentage genes ranked list members gene set (positive enrichment score) (negative enrichment score) position enrichment score extracted.\nlist: percentage genes ranked gene list (positive enrichment\nscore) (negative enrichment score) position enrichment score extracted.\nsignal: enrichment signal strength\ncombines statistics “tags” “list”\ncore_enrichment: genes contribute enrichment results\nleading_edge:tags: percentage genes ranked list members gene set (positive enrichment score) (negative enrichment score) position enrichment score extracted.tags: percentage genes ranked list members gene set (positive enrichment score) (negative enrichment score) position enrichment score extracted.list: percentage genes ranked gene list (positive enrichment\nscore) (negative enrichment score) position enrichment score extracted.list: percentage genes ranked gene list (positive enrichment\nscore) (negative enrichment score) position enrichment score extracted.signal: enrichment signal strength\ncombines statistics “tags” “list”signal: enrichment signal strength\ncombines statistics “tags” “list”core_enrichment: genes contribute enrichment resultscore_enrichment: genes contribute enrichment resultsNote detailed information leading_edge core_enrichment can found user manual provided GSEA:\n(https://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html):search Detailed Enrichment Results (section “Leading Edge”)search Detailed Enrichment Results (section “Leading Edge”)search CORE ENRICHMENTsearch CORE ENRICHMENT","code":"\nhead(GSEA_GO, n = 10 )\n#>                    ID\n#> GO:0002694 GO:0002694\n#> GO:0045321 GO:0045321\n#> GO:0001775 GO:0001775\n#> GO:0050865 GO:0050865\n#> GO:0050863 GO:0050863\n#> GO:0051249 GO:0051249\n#> GO:0002696 GO:0002696\n#> GO:0050867 GO:0050867\n#> GO:0046649 GO:0046649\n#> GO:0051240 GO:0051240\n#>                                                        Description\n#> GO:0002694                      regulation of leukocyte activation\n#> GO:0045321                                    leukocyte activation\n#> GO:0001775                                         cell activation\n#> GO:0050865                           regulation of cell activation\n#> GO:0050863                         regulation of T cell activation\n#> GO:0051249                     regulation of lymphocyte activation\n#> GO:0002696             positive regulation of leukocyte activation\n#> GO:0050867                  positive regulation of cell activation\n#> GO:0046649                                   lymphocyte activation\n#> GO:0051240 positive regulation of multicellular organismal process\n#>            setSize enrichmentScore       NES       pvalue\n#> GO:0002694     218      -0.4550306 -1.885682 1.443823e-07\n#> GO:0045321     335      -0.4102866 -1.776603 1.721317e-07\n#> GO:0001775     379      -0.3913563 -1.715310 1.627551e-07\n#> GO:0050865     231      -0.4475860 -1.862707 3.379430e-07\n#> GO:0050863     145      -0.5024266 -1.973006 6.812416e-07\n#> GO:0051249     185      -0.4654907 -1.896787 6.286296e-07\n#> GO:0002696     145      -0.4964230 -1.949430 1.090979e-06\n#> GO:0050867     148      -0.4941648 -1.945621 1.030633e-06\n#> GO:0046649     282      -0.4097538 -1.745495 1.526809e-06\n#> GO:0051240     490      -0.3558447 -1.593477 1.476326e-06\n#>                p.adjust       qvalue rank\n#> GO:0002694 0.0002129843 0.0001866874  841\n#> GO:0045321 0.0002129843 0.0001866874  841\n#> GO:0001775 0.0002129843 0.0001866874  782\n#> GO:0050865 0.0003136111 0.0002748900  778\n#> GO:0050863 0.0004214615 0.0003694242  841\n#> GO:0051249 0.0004214615 0.0003694242  910\n#> GO:0002696 0.0005062142 0.0004437126 1417\n#> GO:0050867 0.0005062142 0.0004437126 1417\n#> GO:0046649 0.0005667516 0.0004967755  910\n#> GO:0051240 0.0005667516 0.0004967755  841\n#>                              leading_edge\n#> GO:0002694 tags=26%, list=13%, signal=23%\n#> GO:0045321 tags=23%, list=13%, signal=21%\n#> GO:0001775 tags=22%, list=13%, signal=20%\n#> GO:0050865 tags=24%, list=12%, signal=22%\n#> GO:0050863 tags=29%, list=13%, signal=26%\n#> GO:0051249 tags=28%, list=15%, signal=24%\n#> GO:0002696 tags=42%, list=23%, signal=33%\n#> GO:0050867 tags=41%, list=23%, signal=33%\n#> GO:0046649 tags=24%, list=15%, signal=22%\n#> GO:0051240 tags=24%, list=13%, signal=23%\ncore_enrichment\nnn#> GO:0001775                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ENSG00000121594/ENSG00000125735/ENSG00000177697/ENSG00000120738/ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000154127/ENSG00000204287/ENSG00000197405/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000091972/ENSG00000215021/ENSG00000179388/ENSG00000232629/ENSG00000155760/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000135124/ENSG00000104951/ENSG00000183624/ENSG00000168264/ENSG00000012061/ENSG00000205220/ENSG00000126368/ENSG00000131981/ENSG00000119508/ENSG00000090776/ENSG00000090339/ENSG00000125726/ENSG00000153879/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000105438/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000010278/ENSG00000168447/ENSG00000196839/ENSG00000071564/ENSG00000184371/ENSG00000159958/ENSG00000131188/ENSG00000163874/ENSG00000198435/ENSG00000105374/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000176170/ENSG00000232810/ENSG00000103522/ENSG00000223496/ENSG00000167604/ENSG00000130164/ENSG00000078902/ENSG00000140968/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000186222/ENSG00000160683/ENSG00000106211/ENSG00000185338/ENSG00000171223/ENSG00000130522/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008/ENSG00000177606\nn#> GO:0050863                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ENSG00000121594/ENSG00000125735/ENSG00000095059/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000237541/ENSG00000172977/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000164430/ENSG00000112149/ENSG00000104951/ENSG00000131981/ENSG00000090776/ENSG00000125726/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000196839/ENSG00000159958/ENSG00000163874/ENSG00000198435/ENSG00000160223/ENSG00000113302/ENSG00000167604/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000185338/ENSG00000171223/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008\n#> GO:0051249                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ENSG00000196126/ENSG00000189114/ENSG00000121594/ENSG00000125735/ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000131981/ENSG00000090776/ENSG00000125726/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000196839/ENSG00000159958/ENSG00000163874/ENSG00000198435/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000223496/ENSG00000167604/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000185338/ENSG00000171223/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008\nnn#> GO:0046649                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ENSG00000196126/ENSG00000189114/ENSG00000114383/ENSG00000121594/ENSG00000125735/ENSG00000177697/ENSG00000120738/ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000215021/ENSG00000179388/ENSG00000232629/ENSG00000155760/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000168264/ENSG00000012061/ENSG00000205220/ENSG00000131981/ENSG00000090776/ENSG00000090339/ENSG00000125726/ENSG00000153879/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000105438/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000196839/ENSG00000071564/ENSG00000159958/ENSG00000131188/ENSG00000163874/ENSG00000198435/ENSG00000105374/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000103522/ENSG00000223496/ENSG00000167604/ENSG00000140968/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000160683/ENSG00000185338/ENSG00000171223/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008\n#> GO:0051240 ENSG00000128604/ENSG00000111012/ENSG00000064393/ENSG00000089094/ENSG00000092820/ENSG00000196126/ENSG00000189114/ENSG00000114383/ENSG00000136997/ENSG00000121594/ENSG00000125735/ENSG00000126262/ENSG00000095739/ENSG00000186350/ENSG00000121966/ENSG00000120738/ENSG00000073150/ENSG00000095059/ENSG00000131979/ENSG00000116670/ENSG00000126353/ENSG00000148834/ENSG00000183655/ENSG00000102103/ENSG00000103811/ENSG00000136717/ENSG00000204287/ENSG00000148926/ENSG00000197405/ENSG00000171791/ENSG00000237541/ENSG00000140678/ENSG00000133321/ENSG00000172977/ENSG00000213015/ENSG00000111725/ENSG00000171236/ENSG00000091972/ENSG00000185507/ENSG00000179388/ENSG00000187109/ENSG00000139146/ENSG00000232629/ENSG00000213626/ENSG00000124920/ENSG00000198053/ENSG00000110092/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000176788/ENSG00000060138/ENSG00000161638/ENSG00000111424/ENSG00000119508/ENSG00000140995/ENSG00000090776/ENSG00000158470/ENSG00000125726/ENSG00000153879/ENSG00000164442/ENSG00000117090/ENSG00000105372/ENSG00000197329/ENSG00000108561/ENSG00000130669/ENSG00000153487/ENSG00000204592/ENSG00000107338/ENSG00000173511/ENSG00000196839/ENSG00000184371/ENSG00000159958/ENSG00000111087/ENSG00000170345/ENSG00000163794/ENSG00000163874/ENSG00000073712/ENSG00000103257/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000168056/ENSG00000176170/ENSG00000232810/ENSG00000168779/ENSG00000186652/ENSG00000223496/ENSG00000101670/ENSG00000215301/ENSG00000131408/ENSG00000167604/ENSG00000124216/ENSG00000169992/ENSG00000140564/ENSG00000140968/ENSG00000105245/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000125398/ENSG00000143507/ENSG00000156127/ENSG00000196843/ENSG00000125657/ENSG00000106211/ENSG00000130222/ENSG00000185338/ENSG00000143878/ENSG00000130522/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008/ENSG00000123689"},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"researchers-degrees-of-freedom-1","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6.3 Researchers’ degrees of freedom","text":"part, go parameters can adapted GOSeq workflow. important note intention behind going researchers’ degrees freedom give understanding can adapt given (parameter) setting research question. even important keep mind intention behind going flexible parameters change order help obtain preferable results systematically changing parameters since behaviour correspond “cherry-picking”. changes parameter choice must documented transparently.","code":""},{"path":"clusterprofilers-gsea-with-gene-set-database-go.html","id":"change-1-change-exponent","chapter":"6 clusterProfiler’s GSEA (with gene set database GO)","heading":"6.3.1 Change 1: change exponent","text":"Note , contrast web-based tool GSEA, clusterProfiler make indication alternative exponent values allowed sensible. One can stick web-based tool GSEA suggests, addition default exponent value 1, alternative values 0, 1.5, 2., change exponent value 1.5.Inspect resultsWhen switching exponent 2, number differentially enriched gene sets decreased two.","code":"\n# important: set seed for reproducibility\nset.seed(1)\n\nGSEA_GO_exponent <- gseGO(geneList = rankvec_Ensembl,\n                            ont = \"BP\",\n                            OrgDb = org.Hs.eg.db,\n                            keyType = \"ENSEMBL\",\n                            exp = 1.5,\n                            seed = TRUE)\nhead(GSEA_GO_exponent, n = 10) \n#>                    ID                         Description\n#> GO:0042572 GO:0042572           retinol metabolic process\n#> GO:0045321 GO:0045321                leukocyte activation\n#> GO:0001775 GO:0001775                     cell activation\n#> GO:0006721 GO:0006721         terpenoid metabolic process\n#> GO:0001523 GO:0001523          retinoid metabolic process\n#> GO:0002694 GO:0002694  regulation of leukocyte activation\n#> GO:0050865 GO:0050865       regulation of cell activation\n#> GO:0055088 GO:0055088                   lipid homeostasis\n#> GO:0051249 GO:0051249 regulation of lymphocyte activation\n#> GO:0006629 GO:0006629             lipid metabolic process\n#>            setSize enrichmentScore       NES       pvalue\n#> GO:0042572      16      -0.9375514 -1.999582 1.516074e-06\n#> GO:0045321     335      -0.5323438 -1.717534 8.735337e-06\n#> GO:0001775     379      -0.5155165 -1.681090 8.893550e-06\n#> GO:0006721      24      -0.8807910 -2.037460 1.655703e-05\n#> GO:0001523      20      -0.9263665 -2.057425 3.114786e-05\n#> GO:0002694     218      -0.5788244 -1.797112 2.686939e-05\n#> GO:0050865     231      -0.5719874 -1.781633 3.022575e-05\n#> GO:0055088      52      -0.7733441 -2.026849 5.967564e-05\n#> GO:0051249     185      -0.5863351 -1.798671 7.530031e-05\n#> GO:0006629     441      -0.4774551 -1.573053 6.777393e-05\n#>               p.adjust      qvalue rank\n#> GO:0042572 0.005627665 0.005122733   22\n#> GO:0045321 0.011004286 0.010016946  782\n#> GO:0001775 0.011004286 0.010016946  782\n#> GO:0006721 0.015364923 0.013986333   22\n#> GO:0001523 0.016517266 0.015035284   22\n#> GO:0002694 0.016517266 0.015035284  778\n#> GO:0050865 0.016517266 0.015035284  778\n#> GO:0055088 0.027689495 0.025205104  285\n#> GO:0051249 0.027951474 0.025443577  778\n#> GO:0006629 0.027951474 0.025443577  836\n#>                              leading_edge\n#> GO:0042572  tags=12%, list=0%, signal=12%\n#> GO:0045321 tags=22%, list=13%, signal=20%\n#> GO:0001775 tags=21%, list=13%, signal=19%\n#> GO:0006721  tags=12%, list=0%, signal=13%\n#> GO:0001523  tags=10%, list=0%, signal=10%\n#> GO:0002694 tags=25%, list=12%, signal=22%\n#> GO:0050865 tags=24%, list=12%, signal=22%\n#> GO:0055088  tags=29%, list=5%, signal=28%\n#> GO:0051249 tags=25%, list=12%, signal=23%\n#> GO:0006629 tags=19%, list=13%, signal=18%\ncore_enrichment\nn#> GO:0045321                                                                                                                                                 ENSG00000120738/ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000197405/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000091972/ENSG00000215021/ENSG00000179388/ENSG00000232629/ENSG00000155760/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000168264/ENSG00000012061/ENSG00000205220/ENSG00000126368/ENSG00000131981/ENSG00000119508/ENSG00000090776/ENSG00000090339/ENSG00000125726/ENSG00000153879/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000105438/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000168447/ENSG00000196839/ENSG00000071564/ENSG00000184371/ENSG00000159958/ENSG00000131188/ENSG00000163874/ENSG00000198435/ENSG00000105374/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000176170/ENSG00000232810/ENSG00000103522/ENSG00000223496/ENSG00000167604/ENSG00000130164/ENSG00000078902/ENSG00000140968/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000160683/ENSG00000185338/ENSG00000171223/ENSG00000130522/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008/ENSG00000177606\nnnn#> GO:0002694                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000091972/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000126368/ENSG00000131981/ENSG00000119508/ENSG00000090776/ENSG00000125726/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000196839/ENSG00000159958/ENSG00000163874/ENSG00000198435/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000176170/ENSG00000232810/ENSG00000223496/ENSG00000167604/ENSG00000130164/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000185338/ENSG00000171223/ENSG00000130522/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008\n#> GO:0050865                                                                                                                                                                                                                                                                                                                                                                                                                                                 ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000154127/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000091972/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000126368/ENSG00000131981/ENSG00000119508/ENSG00000090776/ENSG00000125726/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000010278/ENSG00000196839/ENSG00000159958/ENSG00000163874/ENSG00000198435/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000176170/ENSG00000232810/ENSG00000223496/ENSG00000167604/ENSG00000130164/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000185338/ENSG00000171223/ENSG00000130522/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008\nn#> GO:0051249                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ENSG00000095059/ENSG00000116670/ENSG00000126353/ENSG00000183655/ENSG00000204287/ENSG00000171791/ENSG00000237541/ENSG00000172977/ENSG00000179388/ENSG00000232629/ENSG00000198053/ENSG00000164430/ENSG00000127666/ENSG00000112149/ENSG00000104951/ENSG00000183624/ENSG00000131981/ENSG00000090776/ENSG00000125726/ENSG00000108861/ENSG00000117090/ENSG00000197329/ENSG00000204592/ENSG00000107338/ENSG00000213689/ENSG00000196839/ENSG00000159958/ENSG00000163874/ENSG00000198435/ENSG00000167775/ENSG00000160223/ENSG00000113302/ENSG00000223496/ENSG00000167604/ENSG00000101017/ENSG00000110944/ENSG00000105246/ENSG00000002330/ENSG00000143507/ENSG00000156127/ENSG00000125657/ENSG00000185338/ENSG00000171223/ENSG00000172216/ENSG00000105974/ENSG00000101665/ENSG00000115008\n#> GO:0006629 ENSG00000101255/ENSG00000100889/ENSG00000141858/ENSG00000184207/ENSG00000099377/ENSG00000221968/ENSG00000079459/ENSG00000166908/ENSG00000120738/ENSG00000074660/ENSG00000126353/ENSG00000183260/ENSG00000183655/ENSG00000149084/ENSG00000130766/ENSG00000148926/ENSG00000133321/ENSG00000172977/ENSG00000163964/ENSG00000242372/ENSG00000110536/ENSG00000166394/ENSG00000111725/ENSG00000165175/ENSG00000174915/ENSG00000215021/ENSG00000103502/ENSG00000181513/ENSG00000169710/ENSG00000112531/ENSG00000121769/ENSG00000129474/ENSG00000100979/ENSG00000204386/ENSG00000133328/ENSG00000103642/ENSG00000126368/ENSG00000119508/ENSG00000125741/ENSG00000158470/ENSG00000145545/ENSG00000123179/ENSG00000213689/ENSG00000168447/ENSG00000073060/ENSG00000158715/ENSG00000119655/ENSG00000167468/ENSG00000165782/ENSG00000087237/ENSG00000083807/ENSG00000100294/ENSG00000176170/ENSG00000232810/ENSG00000196743/ENSG00000179598/ENSG00000167969/ENSG00000101670/ENSG00000167130/ENSG00000131408/ENSG00000173599/ENSG00000124216/ENSG00000120833/ENSG00000130164/ENSG00000086544/ENSG00000167508/ENSG00000089163/ENSG00000125398/ENSG00000087076/ENSG00000111666/ENSG00000110921/ENSG00000174326/ENSG00000100600/ENSG00000147383/ENSG00000185338/ENSG00000125652/ENSG00000062282/ENSG00000105974/ENSG00000172893/ENSG00000101846/ENSG00000196407/ENSG00000115008/ENSG00000006757"},{"path":"david.html","id":"david","chapter":"7 DAVID","heading":"7 DAVID","text":"script, willpreprocess export required input object ANDpreprocess export required input object ANDgenerate alternative universe part researchers’ degrees freedomgenerate alternative universe part researchers’ degrees freedomfor web-based tool DAVID.18The required input object DAVID consists list differentially expressed genes. \nalternative universe, choose genes whose differential expression assessed experiment. Note required provide alternative universe. illustrate use part researchers’ degrees freedom.","code":""},{"path":"david.html","id":"libraries-6","chapter":"7 DAVID","heading":"7.1 Libraries","text":"part instructions, libraries required.","code":""},{"path":"david.html","id":"load-data-5","chapter":"7 DAVID","heading":"7.2 Load data","text":"objects, list differentially expressed genes well alternative universe, can extracted results table differential expression analysis. Note DAVID works variety gene ID formats, including Ensembl ID., illustrate process limma results since process identical methods differential exression analysis (due unification column names refer adjusted p-values).Alternatively, can proceed results generated DESeq2 edgeR:purpose redability, store limma’s differential expression analysis results object neutral name:Take look results table:","code":"\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_limma_Ensembl.Rdata\")\n# load(\"./Results_Differential_Expression_Analysis/DE_results_DESeq2_Ensembl.Rdata\")\n# load(\"./Results_Differential_Expression_Analysis/DE_results_edgeR_Ensembl.Rdata\")\nDE_results <- DE_results_limma_Ensembl\nhead(DE_results, n  = 10)\n#>                      logFC   AveExpr         t      P.Value\n#> ENSG00000129824  9.2133770 1.9601987 47.132083 1.061719e-55\n#> ENSG00000099749  6.1709577 0.4153409 40.465602 4.024370e-51\n#> ENSG00000154620  5.0848991 0.4867874 26.729729 5.097737e-39\n#> ENSG00000006757 -0.9214380 5.3073131 -8.805751 4.963544e-13\n#> ENSG00000130021 -0.8516173 2.1365915 -4.388951 3.846411e-05\n#> ENSG00000185753 -0.5479423 3.6902013 -4.217130 7.121081e-05\n#> ENSG00000086712 -0.4017993 5.0899555 -4.023482 1.403927e-04\n#> ENSG00000123689 -1.4679601 5.1661467 -3.850433 2.537689e-04\n#> ENSG00000177606 -0.5844304 8.2469942 -3.910485 2.069770e-04\n#> ENSG00000120868  0.4076940 5.9420527  3.832337 2.697515e-04\n#>                        p_adj           B\n#> ENSG00000129824 6.631497e-52 94.00193786\n#> ENSG00000099749 1.256811e-47 86.16860821\n#> ENSG00000154620 1.061349e-35 68.53453635\n#> ENSG00000006757 7.750575e-10 19.36978341\n#> ENSG00000130021 4.804937e-02  2.04582318\n#> ENSG00000185753 7.413045e-02  1.30583651\n#> ENSG00000086712 1.252704e-01  0.48313770\n#> ENSG00000123689 1.684868e-01 -0.04984613\n#> ENSG00000177606 1.615973e-01 -0.13323415\n#> ENSG00000120868 1.684868e-01 -0.25078873"},{"path":"david.html","id":"prepare-and-export-required-input-oject","chapter":"7 DAVID","heading":"7.3 Prepare and export required input oject","text":"Step 1: Generate required input objectFrom results table differential expression analysis, generate list differentially expressed genes.take look first genes vector differentially expressed genes also want look number differentially expressed genes.Note specific example, differentially expressed genes.Step 2: Export vector differentially expressed genesWe store vector differentially expressed genes file “DEG_vec.txt” folder “Input_Objects_DAVID” (subfolder folder “data”).file “DEG_vec.txt” now appeared folder “Input_Objects_DAVID”.Step 3: Upload DAVIDThe resulting .txt file can directly uploaded DAVID website: https://david.ncifcrf.gov/","code":"\n# (i) indicate which genes have an (existing!) adjusted p-value < 0.05.\nind_DE <- (!is.na(DE_results$p_adj)) & (DE_results$p_adj < 0.05)\n\n# get overview of number of differentially expressed genes\ntable(ind_DE)\n#> ind_DE\n#> FALSE  TRUE \n#>  6241     5\n\n# (ii) use the indicator to obtain the list of differentially expressed genes\nDEG_vec <- rownames(DE_results)[ind_DE]\n# inspect the first genes from the vector\nhead(DEG_vec, n = 10)\n#> [1] \"ENSG00000129824\" \"ENSG00000099749\" \"ENSG00000154620\"\n#> [4] \"ENSG00000006757\" \"ENSG00000130021\"\n\n# get the number of differentially expressed genes\nlength(DEG_vec)\n#> [1] 5\n# the path indicates the location (folder(s) and file) of the vector to be stored in\npath <- \"./data/Input_Objects_DAVID/DEG_vec.txt\"\n\n# export \n write.table(DEG_vec,\n            file = path,\n            quote=FALSE,\n            row.names=FALSE,\n            col.names = FALSE)"},{"path":"david.html","id":"researchers-degrees-of-freedom-2","chapter":"7 DAVID","heading":"7.4 Researchers’ degrees of freedom","text":"part, illustrate create alternative universe DAVID, researchers’ degree freedom. important note intention behind going researchers’ degrees freedom give understanding can adapt given (parameter) setting research question. even important keep mind intention behind going flexible parameters change order help obtain preferable results systematically changing parameters since behaviour correspond “cherry-picking”. changes parameter choice must documented transparently.","code":""},{"path":"david.html","id":"change-1-alternative-universe","chapter":"7 DAVID","heading":"7.4.1 Change 1: Alternative universe","text":"Step 1: Generate alterative universeFor alternative universe, want consider genes whose differential expression measured experiment methods differential expression analysis, DESeq2, adjusted p-values genes set NA means genes detected neither differentially expressed differentially expressed. therefore want remove universe.Inspect first genes universeStep 2: Export alternative universeWe store vector differentially expressed genes file “alternative_universe.txt” folder “Input_Objects_DAVID” (subfolder folder “data”).file “alternative_universe.txt” now appeared folder “Input_Objects_DAVID”.","code":"\n# indicate which genes have an adjusted p-value in the results of differential expression analysis\nind_nona_p <- !is.na(DE_results$p_adj)\n\n# filter the list of genes to those with an existing adjusted p-value\nalternative_universe <- rownames(DE_results)[ind_nona_p]\nhead(alternative_universe, n = 10)\n#>  [1] \"ENSG00000129824\" \"ENSG00000099749\" \"ENSG00000154620\"\n#>  [4] \"ENSG00000006757\" \"ENSG00000130021\" \"ENSG00000185753\"\n#>  [7] \"ENSG00000086712\" \"ENSG00000123689\" \"ENSG00000177606\"\n#> [10] \"ENSG00000120868\"\npath_alt_universe <- \"./data/Input_Objects_DAVID/alternative_universe.txt\"\n\n# export \nwrite.table(alternative_universe,\n            file = path_alt_universe,\n            quote=FALSE,\n            row.names=FALSE,\n            col.names = FALSE)"},{"path":"gsea-web-based-tool.html","id":"gsea-web-based-tool","chapter":"8 GSEA (web-based tool)","heading":"8 GSEA (web-based tool)","text":"script, willexport transformed RNA-Seq measurementsexport transformed RNA-Seq measurementsprepare export sample conditionsprepare export sample conditionsNote preprocessing steps required Excel. preprocessing steps, click following link:http://software.broadinstitute.org/cancer/software/gsea/wiki/index.php/Data_formats.","code":""},{"path":"gsea-web-based-tool.html","id":"libraries-7","chapter":"8 GSEA (web-based tool)","heading":"8.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load libraries:Description library:tweeDEseqCountData: , need conditions samples pickrell data set (processed form) required web-based tool GSEA.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"tweeDEseqCountData\")\nlibrary(tweeDEseqCountData) "},{"path":"gsea-web-based-tool.html","id":"load-data-6","chapter":"8 GSEA (web-based tool)","heading":"8.2 Load data","text":"web-based tool, work pre-filtered transformed gene expression measurements. Since GSEA accepts wide variety gene ID formats, can input gene IDs Ensembl ID format.\nNote purpose simplicity, work voom-transformed data. However, can easily switch gene expression data set transformed using DESeq2’s varianceStabilizingTransformation.easier readability, store gene expression data set new object neutral name.mentioned , GSEA requires (preprocessed version ) sample conditions. case pickrell data set used illustrations, obtain using following commands:","code":"\nload(\"./data/Results_RNASeq_Transformation/expression_data_voomtransformed_Ensembl.Rdata\")\n\n# or alternatively:\n# load(\"./data/Results_RNASeq_Transformation/expression_data_vsttransformed_Ensembl.Rdata\")\nexpression_data_transformed <- expression_data_voomtransformed_Ensembl\n# load pickrell data \ndata(pickrell)\n\n# store sample conditions\nsample_conditions <- pickrell.eset$gender"},{"path":"gsea-web-based-tool.html","id":"step-1-export-the-transformed-gene-expression-measurements","chapter":"8 GSEA (web-based tool)","heading":"8.2.1 step 1: Export the (transformed) gene expression measurements","text":"export transformed gene expression measurements .txt file pre-specified folder “Input_Objects_GSEA_web”.Arguments function write.table():‘quote = FALSE’: ensures none characters (case gene sample\nidentifiers, .e. row column names) surrounded double quotes‘quote = FALSE’: ensures none characters (case gene sample\nidentifiers, .e. row column names) surrounded double quotes‘row.names = TRUE’: ensures gene IDs included export‘row.names = TRUE’: ensures gene IDs included export‘col.names = TRUE’: ensures samples IDs included export‘col.names = TRUE’: ensures samples IDs included export","code":"\n# 1. Generate the path that indicates that we will store the transformed gene expression measurements in the object \"expression_data_transformed.txt, which is located in the file \"Input_Objects_GSEA_web\"\npath_measurements  <- \"./data/Input_Objects_GSEA_web/expression_data_transformed.txt\"\n\n# export the gene expression measurements \nwrite.table(expression_data_transformed,\n            file = path_measurements,\n            quote = FALSE,\n            row.names = TRUE,\n            col.names = TRUE)"},{"path":"gsea-web-based-tool.html","id":"step-2-prepare-and-export-the-sample-conditions","chapter":"8 GSEA (web-based tool)","heading":"8.2.2 step 2: Prepare and export the sample conditions","text":"Prepare sample conditionsGSEA accepts sample conditions (binary) format values 0 1. pickrell data set, inspect current values sample conditions stored:Currently, sample conditions coded “female” “male”. now want convert levels 0 1:Inspect (first ) sample conditions:Export sample conditions:Arguments function write.table():‘quote = FALSE’: ensures none characters (case gene sample\nidentifiers, .e. row column names) surrounded double quotes‘quote = FALSE’: ensures none characters (case gene sample\nidentifiers, .e. row column names) surrounded double quotes‘row.names = TRUE’ ensures gene IDs included export‘row.names = TRUE’ ensures gene IDs included export‘col.names = TRUE’ ensures samples IDs included export‘col.names = TRUE’ ensures samples IDs included export","code":"\n# inspect the raw sample conditions:\nhead(sample_conditions, n = 10)\n#>  [1] male   male   female male   female male   female male  \n#>  [9] female male  \n#> Levels: female male\n\n# inspect the levels of the sample conditions:\nlevels(sample_conditions)\n#> [1] \"female\" \"male\"\n# (i) create vector to contain the sample conditions in the right format\nsample_conditions_prepared <- c()\n\n# (ii) assign all \"females\", which is the first level of the factor, the value 0\nsample_conditions_prepared[ pickrell.eset$gender == levels(pickrell.eset$gender)[[1]]] <- 0\n\n# (iii) assign all \"males\", which is the second level of the factor, the value 1\nsample_conditions_prepared[ pickrell.eset$gender == levels(pickrell.eset$gender)[[2]]] <- 1\nhead(sample_conditions_prepared, n = 10)\n#>  [1] 1 1 0 1 0 1 0 1 0 1\n# the following path indicates that we store the prepared sample conditions in the object \"sample_conditions_prepared.txt\" in the file \"Input_Objects_GSEA_web\". \npath_conditions <- \"./data/Input_Objects_GSEA_web/sample_conditions_prepared.txt\"\n\n# export \nwrite.table(x = sample_conditions_prepared,\n            file = path_conditions,\n            quote = FALSE,\n            row.names = FALSE,\n            col.names = TRUE)"},{"path":"gsea-web-based-tool.html","id":"step-3-further-preparation-of-input-object-in-excel","chapter":"8 GSEA (web-based tool)","heading":"8.2.3 step 3: Further preparation of input object in Excel","text":"instructions preparation text file Excel, open following link:http://software.broadinstitute.org/cancer/software/gsea/wiki/index.php/Data_formatsFollow instructions section‘GCT: Gene Cluster Text file format (.gct)’: preparation expression_data_transformed‘GCT: Gene Cluster Text file format (.gct)’: preparation expression_data_transformed‘CLS: Categorical (e.g tumor vs. normal) class file format (.cls)’: preparation sample_conditions_prepared‘CLS: Categorical (e.g tumor vs. normal) class file format (.cls)’: preparation sample_conditions_prepared","code":""},{"path":"clusterprofilers-gsea-with-gene-set-database-kegg.html","id":"clusterprofilers-gsea-with-gene-set-database-kegg","chapter":"9 clusterProfiler’s GSEA (with gene set database KEGG)","heading":"9 clusterProfiler’s GSEA (with gene set database KEGG)","text":"script, following two things:Based results differential expression analysis voom/limma, DESeq2, edgeR, go steps required run clusterProfiler’s GSEA gene set database GO.\nBased results differential expression analysis voom/limma, DESeq2, edgeR, go steps required run clusterProfiler’s GSEA gene set database GO.go (meaningful) researchers’ degrees freedom.\ngo (meaningful) researchers’ degrees freedom.Note provide separate file gene set databases GO KEGG since clusterProfiler differs accepted gene ID formats . GO, variety formats, including Entrez ID, accepted, gene IDs must converted NCBI (Entrez) ID choosing KEGG.","code":""},{"path":"clusterprofilers-gsea-with-gene-set-database-kegg.html","id":"libraries-8","chapter":"9 clusterProfiler’s GSEA (with gene set database KEGG)","heading":"9.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load LibrariesDescription packagesclusterProfiler: use clusterProfiler’s implementation GSEA.clusterProfiler: use clusterProfiler’s implementation GSEA.DESeq2: contrast detecting differential expressed genes, done solely based adjusted \\(p\\)-vaules, additionally use estimated log fold changes generating gene ranking. DESeq2, estimated log fold change values shrunken using additional function, hence loading library.DESeq2: contrast detecting differential expressed genes, done solely based adjusted \\(p\\)-vaules, additionally use estimated log fold changes generating gene ranking. DESeq2, estimated log fold change values shrunken using additional function, hence loading library.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"DESeq2\")\nlibrary(clusterProfiler)\nlibrary(DESeq2)"},{"path":"clusterprofilers-gsea-with-gene-set-database-kegg.html","id":"load-data-7","chapter":"9 clusterProfiler’s GSEA (with gene set database KEGG)","heading":"9.2 Load data","text":"Note , described , clusterProfiler accepts Entrez IDs working gene set database GO. generating ranking genes DESeq2, shrinkage log fold change estimates performed requires output function DESeq(), named dds (see Chapter ’Differential Expression Analysis).","code":"\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_limma_Entrez.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_DESeq2_Entrez.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_edgeR_Entrez.Rdata\")\n\n# load dds object \nload(\"./data/Results_Differential_Expression_Analysis/dds_Entrez.Rdata\")"},{"path":"clusterprofilers-gsea-with-gene-set-database-kegg.html","id":"run-gsea-1","chapter":"9 clusterProfiler’s GSEA (with gene set database KEGG)","heading":"9.3 Run GSEA","text":"","code":""},{"path":"clusterprofilers-gsea-with-gene-set-database-kegg.html","id":"step-1-generation-of-required-input-object-1","chapter":"9 clusterProfiler’s GSEA (with gene set database KEGG)","heading":"9.3.1 Step 1: Generation of Required Input Object","text":"following, illustrate creation required input object based results table three different methods differential expression analysis, voom/limma, DESeq2, edgeR, shall serve three options. required input object clusterProfiler “order ranked geneList”, .e. vector ranking value gene, named respective gene IDs ordered descending manner.formula generating gene ranking results table differential expression analysis \n\\[(-1) * \\log_{10}(p\\text{-value}) * \\text{sign}(\\text{log fold change})\\].\nNote “\\(p\\)-value” denotes non-adjusted p-value.","code":""},{"path":"clusterprofilers-gsea-with-gene-set-database-kegg.html","id":"option-1-generate-required-input-using-voomlimma-1","chapter":"9 clusterProfiler’s GSEA (with gene set database KEGG)","heading":"9.3.1.1 Option 1: Generate required input using voom/limma","text":"","code":"\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_limma_Entrez <- !is.na(DE_results_limma_Entrez$P.Value)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA_Entrez <- DE_results_limma_Entrez[ind_nonNA_pvalue_limma_Entrez, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_limma_Entrez <- sign(DE_results_noNA_Entrez$logFC)*(-1)*log10(DE_results_noNA_Entrez$P.Value)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_limma_Entrez) <- rownames(DE_results_noNA_Entrez)\n\n# 4. sort the vector in descending order\nrankvec_limma_Entrez <- sort(rankvec_limma_Entrez, decreasing=TRUE)\n\n# inspect the first entries of the ranking vector\nhead(rankvec_limma_Entrez , n = 10)\n#>      6192      9087       317      9404      9697     63894 \n#> 54.991351 38.217609  3.554179  3.200661  3.164203  3.071138 \n#>      4214     10479      5257     29915 \n#>  3.019720  2.924894  2.875024  2.814519"},{"path":"clusterprofilers-gsea-with-gene-set-database-kegg.html","id":"option-2-generate-required-input-using-deseq2-1","chapter":"9 clusterProfiler’s GSEA (with gene set database KEGG)","heading":"9.3.1.2 Option 2: Generate required input using DESeq2","text":"() Perform Differential Expression AnalysisThis step performed script Instructions_Differential_Expression_Analysis.R. Note must exit DESeq2 workflow script steps early since additional step required creation required input object. proceed object “dds_Entrez” ’ve obtained step 3 DESeq2’s workflow differential expression analysis.(ii) Shrink estimated log fold change valuesThe intuition behind shrinkage log fold change values , mentioned paper, RNA-Seq data consists (raw form) count data inherently heteroscedastic, .e. variance count data depends mean count count data. observable ratios counts considerably noisier low magnitudes counts compared higher magnitudes, .e. log fold changes conditions higher overall magnitude counts lower.\nDESeq2 addresses issue shrinking estimated log fold changes direction 0 magnitude shrinkage higher available information gene lower (may low magnitude counts, high dispersion degrees freedom.). detailed description provided DESeq2 paper Love et al. (2014).19Perform shrinkage:Function arguments:type: method perform shrinkage. opt default “apeglm” can choose two alternative options welltype: method perform shrinkage. opt default “apeglm” can choose two alternative options wellcoef: indicate coefficients shrunk. can obtain right argument following function call:coef: indicate coefficients shrunk. can obtain right argument following function call:command shows us can either shrink intercept “condition_treated_vs_untreated”. Since want shrink intercept estimated log fold changes, opt second option “condition_treated_vs_untreated”.(iii) Generate ranked list genes","code":"\ndds_Entrez\n#> class: DESeqDataSet \n#> dim: 9492 69 \n#> metadata(1): version\n#> assays(6): counts mu ... replaceCounts replaceCooks\n#> rownames(9492): 8813 57147 ... 56104 56112\n#> rowData names(23): baseMean baseVar ... maxCooks\n#>   replace\n#> colnames(69): NA18486 NA18498 ... NA19239 NA19257\n#> colData names(3): condition sizeFactor replaceable\nDE_results_DESeq2_shrink_Entrez <- lfcShrink(dds_Entrez,\n                                              coef = \"condition_treated_vs_untreated\",\n                                              type=\"apeglm\")\nresultsNames(dds_Entrez)\n#> [1] \"Intercept\"                     \n#> [2] \"condition_treated_vs_untreated\"\n# 1. Subset the DESeq2 results to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes with an existing p-value\nind_nonNA_pvalue_Entrez <- !is.na(DE_results_DESeq2_shrink_Entrez$pvalue)\n\n# subset the DESeq2 results to those genes with an existing p-value\nDE_results_noNA_Entrez <- DE_results_DESeq2_shrink_Entrez[ind_nonNA_pvalue_Entrez, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_DESeq2_Entrez <- sign(DE_results_noNA_Entrez$log2FoldChange)*(-1)*log10(DE_results_noNA_Entrez$pvalue)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_DESeq2_Entrez) <- rownames(DE_results_noNA_Entrez)\n\n# 4. sort the vector in descending order\nrankvec_DESeq2_Entrez <- sort(rankvec_DESeq2_Entrez, decreasing=TRUE)\n\n\n# inspect the first entries of the ranking vector\nhead(rankvec_DESeq2_Entrez , n = 10)\n#>       6192       9086       9087       7404         58 \n#> 204.374390  75.096224  64.815184   7.205688   4.854231 \n#>       1521      23136     219699     126129        317 \n#>   4.467907   3.996186   3.966326   3.918029   3.744345"},{"path":"clusterprofilers-gsea-with-gene-set-database-kegg.html","id":"option-3-generate-required-input-using-edger-1","chapter":"9 clusterProfiler’s GSEA (with gene set database KEGG)","heading":"9.3.1.3 Option 3: Generate required input using edgeR","text":"","code":"\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_Entrez <- !is.na(DE_results_edgeR_Entrez$PValue)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA_Entrez <- DE_results_edgeR_Entrez[ind_nonNA_pvalue_Entrez, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_edgeR_Entrez <- sign(DE_results_noNA_Entrez$logFC)*(-1)*log10(DE_results_noNA_Entrez$p_adj)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_edgeR_Entrez) <- rownames(DE_results_noNA_Entrez)\n\n# 4. sort the vector in descending order\nrankvec_edgeR_Entrez <- sort(rankvec_edgeR_Entrez, decreasing=TRUE)\n\n# inspect ranking vector\nhead(rankvec_edgeR_Entrez, n = 10)\n#>        6192        9087        1521         317        9404 \n#>         Inf 116.7303466   1.6605772   1.0317662   0.9984938 \n#>       10479        4214        9697        4509        9645 \n#>   0.9863396   0.8622382   0.8467278   0.8434267   0.8251273\n\n# 5. special problem here: gene 6192 has a ranking value Inf since its adjusted\n# p-value in the results table of differential expression analysis amounts to 0\n\n# here, we deal with this issue by resetting this ranking value to the highest ranking value\n# that occurs among the remaining genes\n# -> note that there is NO common way of dealing with this issue\nrankvec_edgeR_Entrez[rankvec_edgeR_Entrez == Inf] <- max(rankvec_edgeR_Entrez[rankvec_edgeR_Entrez != Inf])\n \n# inspect ranking vector once more \nhead(rankvec_edgeR_Entrez, n = 10)\n#>        6192        9087        1521         317        9404 \n#> 116.7303466 116.7303466   1.6605772   1.0317662   0.9984938 \n#>       10479        4214        9697        4509        9645 \n#>   0.9863396   0.8622382   0.8467278   0.8434267   0.8251273"},{"path":"clusterprofilers-gsea-with-gene-set-database-kegg.html","id":"step-2-run-gsea-with-gene-set-database-kegg","chapter":"9 clusterProfiler’s GSEA (with gene set database KEGG)","heading":"9.3.2 Step 2: Run GSEA with gene set database KEGG","text":"purpose simplicity, work ranking generated using limma. However, can switch around discretion.Run clusterProfiler gene set database KEGGadditional arguments (appear code lines since keep default options)‘exponent = 1’: calculation enrichment score, gene weighted absolute value ranking metric‘exponent = 1’: calculation enrichment score, gene weighted absolute value ranking metric‘organism = “hsa”’: human organism. Note list accepted organisms available following link:https://www.genome.jp/kegg/catalog/org_list.html‘organism = “hsa”’: human organism. Note list accepted organisms available following link:https://www.genome.jp/kegg/catalog/org_list.html‘seed = TRUE’: set seed indicated (: seed = 1 )‘seed = TRUE’: set seed indicated (: seed = 1 )‘eps = 1e-10’: (adjusted) p-value smaller 1e-10 indicated 1e-10‘eps = 1e-10’: (adjusted) p-value smaller 1e-10 indicated 1e-10‘pvalueCutoff’ = 0.05: gene sets p-value < 0.05 indicated results‘pvalueCutoff’ = 0.05: gene sets p-value < 0.05 indicated resultsnote: want inspect gene sets results, set pvalueCutoff = 1note: want inspect gene sets results, set pvalueCutoff = 1pAdjustMethod = “BH”: adjustment multiple testing using Benjamini HochbergpAdjustMethod = “BH”: adjustment multiple testing using Benjamini Hochberg","code":"\nrankvec_Entrez <- rankvec_limma_Entrez\n\n# alternatively: \n# rankvec_Entrez <- rankvec_DESeq2_Entrez\n# rankvec_Entrez <- rankvec_edgeR_Entrez\n# important: set seed for reproducibility \nset.seed(1)\n  \nGSEA_KEGG <- gseKEGG(geneList = rankvec_Entrez, \n                     seed = TRUE)  "},{"path":"clusterprofilers-gsea-with-gene-set-database-kegg.html","id":"step-3-interpretation-of-the-results-1","chapter":"9 clusterProfiler’s GSEA (with gene set database KEGG)","heading":"9.3.3 step 3: Interpretation of the results","text":"inspect results first 10 gene setsColumns Result Tables:ID: ID gene setID: ID gene setDescription: Description Gene SetDescription: Description Gene SetsetSize: Size gene setsetSize: Size gene setenrichmentScore: Enrichment Score\nnote: enrichment score normalized gene set size\nmeans: larger gene sets automatically bigger (absolute) enrichment score independent actual differential enrichment\nraw enrichment score therefore comparable different gene sets\nenrichmentScore: Enrichment Scorenote: enrichment score normalized gene set sizemeans: larger gene sets automatically bigger (absolute) enrichment score independent actual differential enrichmentthe raw enrichment score therefore comparable different gene setsNES: Normalized version column enrichmentScore\nNES can compared different gene sets\nNES: Normalized version column enrichmentScoreNES can compared different gene setspvalue: p-value enrichment given gene set\nnote: raw p-value adjusted multiple testing\ntherefore: used assess differential enrichment given gene set\npvalue: p-value enrichment given gene setnote: raw p-value adjusted multiple testingtherefore: used assess differential enrichment given gene setp.adjust: adjusted p-value given gene set\np-value now adjusted multiple testing can therefore\ncan therefore used assess differential enrichment\nexample: detect genes p.adjust < 0.05 differentially enriched\np.adjust: adjusted p-value given gene setthis p-value now adjusted multiple testing can thereforecan therefore used assess differential enrichmentexample: detect genes p.adjust < 0.05 differentially enrichedqvalue: ADJUSTED p-value given gene set\nnote: qvalue analog p.adjust, adjusted multiple testing\nusing different method\nqvalue: ADJUSTED p-value given gene setnote: qvalue analog p.adjust, adjusted multiple testing\nusing different methodYou can either use column p.adjust qvalue assess whether gene set\ndifferentially enriched notrank: position ranked list genes maximum difference two sums occurs, .e. rank enrichment score extractedrank: position ranked list genes maximum difference two sums occurs, .e. rank enrichment score extractedleading_edge:\ntags: percentage genes ranked list members gene set (positive enrichment score) (negative enrichment score) position enrichment score extracted.\nlist: percentage genes ranked gene list (positive enrichment\nscore) (negative enrichment score) position enrichment score extracted.\nsignal: enrichment signal strength combines statistics “tags” “list”\nleading_edge:tags: percentage genes ranked list members gene set (positive enrichment score) (negative enrichment score) position enrichment score extracted.list: percentage genes ranked gene list (positive enrichment\nscore) (negative enrichment score) position enrichment score extracted.signal: enrichment signal strength combines statistics “tags” “list”core_enrichment: genes contribute enrichment resultscore_enrichment: genes contribute enrichment resultsNote detailed information leading_edge core_enrichment can found user\nmanual provided GSEA:\nhttps://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.html\nsearch Detailed Enrichment Results (section “Leading Edge”)\nsearch CORE ENRICHMENT\nNote detailed information leading_edge core_enrichment can found user\nmanual provided GSEA:\nhttps://www.gsea-msigdb.org/gsea/doc/GSEAUserGuideFrame.htmlsearch Detailed Enrichment Results (section “Leading Edge”)search CORE ENRICHMENT","code":"\n#head(GSEA_KEGG, n = 10 )"},{"path":"clusterprofilers-ora.html","id":"clusterprofilers-ora","chapter":"10 clusterProfiler’s ORA","heading":"10 clusterProfiler’s ORA","text":"script, willrun clusterProfiler’s ORA tool based results table differential expression analysis gene set databasesKEGGKEGGGO (default subontology “MF”)GO (default subontology “MF”)go meaningful researchers’ degrees freedomNote clusterProfiler’s ORA accepts gene IDs NCBI (Entrez) ID format, independent chosen gene set database.","code":""},{"path":"clusterprofilers-ora.html","id":"libraries-9","chapter":"10 clusterProfiler’s ORA","heading":"10.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load LibrariesDescription packagesclusterProfiler: use clusterProfiler’s implementation ORA.clusterProfiler: use clusterProfiler’s implementation ORA.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (see Chapter 1 ‘’). Note library required running clusterProfiler’s ORA gene set database GO.org.Hs.eg.db: Provides genome-wide annotation humans. working different organism, user provide different package (see Chapter 1 ‘’). Note library required running clusterProfiler’s ORA gene set database GO.","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"org.Hs.eg.db\")\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db)"},{"path":"clusterprofilers-ora.html","id":"load-data-8","chapter":"10 clusterProfiler’s ORA","heading":"10.2 Load data","text":"arbitrarily set object DE_results work resulting DESeq2. However, can switch around discretion.","code":"\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_limma_Entrez.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_DESeq2_Entrez.Rdata\")\nload(\"./data/Results_Differential_Expression_Analysis/DE_results_edgeR_Entrez.Rdata\")\nDE_results <- DE_results_DESeq2_Entrez\n\n# alternatively: \n#DE_results <- DE_results_limma_Entrez\n#DE_results <- DE_results_edgeR_Entrez"},{"path":"clusterprofilers-ora.html","id":"run-clusterprofilers-ora","chapter":"10 clusterProfiler’s ORA","heading":"10.3 Run clusterProfiler’s ORA","text":"","code":""},{"path":"clusterprofilers-ora.html","id":"step-1-preparation-of-required-input-object-1","chapter":"10 clusterProfiler’s ORA","heading":"10.3.1 step 1: Preparation of required input object","text":"clusterProfiler’s ORA requires input list differentially expressed genes. extract list results table differential expression analysis.\ngene results differential expression analysis, indicate whether differentially expressed (TRUE) differentially expressed (FALSE) based following two criteria:tested differential expression, .e. non-missing adjusted p-value ANDit tested differential expression, .e. non-missing adjusted p-value ANDit adjusted p-value < 0.05it adjusted p-value < 0.05inspect first genes input list differentially expressed genes","code":"\n# indicate which gene fulfills BOTH criteria: \nind_differentially_expressed <- ((!is.na(DE_results$p_adj)) & (DE_results$p_adj<0.05))\n\n# using this indicator, we extract the vector of differentially expressed genes from the results\n# of differential expression analysis \nDEG_vec <- rownames(DE_results[ind_differentially_expressed,])\nhead(DEG_vec, n = 10)\n#>  [1] \"8228\"   \"23136\"  \"55787\"  \"10732\"  \"412\"    \"219699\"\n#>  [7] \"6615\"   \"6192\"   \"8226\"   \"10912\""},{"path":"clusterprofilers-ora.html","id":"step-2-run-clusterprofilers-ora","chapter":"10 clusterProfiler’s ORA","heading":"10.3.2 step 2: Run clusterProfiler’s ORA","text":"ORA can run common geneset databases KEGG GO well user-defined gene set databases. , focus two common gene set databases GO KEGG.","code":""},{"path":"clusterprofilers-ora.html","id":"option-1-gene-set-database-go","chapter":"10 clusterProfiler’s ORA","heading":"10.3.2.1 option 1: gene set database GO","text":", work subontology specified default, namely Molecular Function (“MF”)Inspect results tableFunction arguments:gene: vector differentially expressed genesgene: vector differentially expressed genesOrgDb: annotation package organism hand (: human)OrgDb: annotation package organism hand (: human)ont: subontology (“MF” default, alternatives: “BP” “CC”)ont: subontology (“MF” default, alternatives: “BP” “CC”)","code":"\nORA_results_GO <- enrichGO(gene = DEG_vec, \n                           OrgDb = org.Hs.eg.db, \n                           ont = \"MF\") \nhead(ORA_results_GO , n = 10)\n#> [1] ID          Description GeneRatio   BgRatio    \n#> [5] pvalue      p.adjust    qvalue      geneID     \n#> [9] Count      \n#> <0 rows> (or 0-length row.names)"},{"path":"clusterprofilers-ora.html","id":"option-2-gene-set-database-kegg","chapter":"10 clusterProfiler’s ORA","heading":"10.3.2.2 option 2: gene set database KEGG","text":"Function arguments:gene: vector differentially expressed genesgene: vector differentially expressed genesorganism: organism gene expression measurements obtained\ndefault, set ‘organism = “hsa”’.\nmust adapted organisms (organism = “mmu” mice)\norganism: organism gene expression measurements obtainedby default, set ‘organism = “hsa”’.default, set ‘organism = “hsa”’.must adapted organisms (organism = “mmu” mice)must adapted organisms (organism = “mmu” mice)","code":"\nORA_results_KEGG <- enrichKEGG(gene = DEG_vec, \n                               organism = \"hsa\")\n#> Reading KEGG annotation online: \"https://rest.kegg.jp/link/hsa/pathway\"...\n#> Reading KEGG annotation online: \"https://rest.kegg.jp/list/pathway/hsa\"...\n\n# inspect results table \nhead(ORA_results_KEGG , n = 10)\n#> [1] ID          Description GeneRatio   BgRatio    \n#> [5] pvalue      p.adjust    qvalue      geneID     \n#> [9] Count      \n#> <0 rows> (or 0-length row.names)"},{"path":"clusterprofilers-ora.html","id":"step-4-interpretation-of-the-results","chapter":"10 clusterProfiler’s ORA","heading":"10.3.3 step 4: Interpretation of the results","text":"Description columns results table:GeneRatio: number genes input list members given gene set divided number genes input list members given gene setGeneRatio: number genes input list members given gene set divided number genes input list members given gene setBgRatio: number genes universe members gene set divided total number genes universeBgRatio: number genes universe members gene set divided total number genes universepvalue: p-value enrichment given gene setpvalue: p-value enrichment given gene setp.adjust: p-value enrichment ADJUSTED multiple testingp.adjust: p-value enrichment ADJUSTED multiple testingqvalue: p-value enrichment ADJUSTED multiple testing\nnote: p.adjust qvalue adjusted using slightly different approaches\nqvalue: p-value enrichment ADJUSTED multiple testingnote: p.adjust qvalue adjusted using slightly different approachesgeneID: list genes input list members given gene setgeneID: list genes input list members given gene setcount: number genes input list members given gene setcount: number genes input list members given gene set","code":""},{"path":"clusterprofilers-ora.html","id":"researchers-degrees-of-freedom-3","chapter":"10 clusterProfiler’s ORA","heading":"10.4 Researchers’ degrees of freedom","text":"part, go parameters can adapted GOSeq workflow. important note intention behind going researchers’ degrees freedom give understanding can adapt given (parameter) setting research question. even important keep mind intention behind going flexible parameters change order help obtain preferable results systematically changing parameters since behaviour correspond “cherry-picking”. changes parameter choice must documented transparently.","code":""},{"path":"clusterprofilers-ora.html","id":"change-1-change-universe","chapter":"10 clusterProfiler’s ORA","heading":"10.4.1 change 1: Change universe","text":", change universe genes measured experiment.Note change universe interception genes experiment list genes annotated given gene set database since found way obtain latter list genes.\nAlso note want restrict genes experiment adjusted p-value (.e. whose expression indeed measured). intuition , e.g. DESeq2, genes filtered internally \ntherefore adjusted p-value. genes therefore neither detected differentially expressed differentially expressed feasible include universe.Step 1: Set alternative universeStep 2: Add alternative universe parameter ORAIn functions enrichGO() enrichKEGG(), alternative universe can specified argument universe.() gene set database GO: specify parameter universeInspect results table:(b) gene set database KEGG: specify parameter universeInspect results table:","code":"\n# (i) indicate which genes have an adjusted p-value\nind_adjp <- !is.na(DE_results$p_adj)\n\n# (ii) filter the genes from the experiment to those genes that do have an adjusted p-value \nalternative_universe <- rownames(DE_results)[ind_adjp]\n\n# inspect the first few genes in the universe\nhead(alternative_universe, n = 10)\n#>  [1] \"8813\"  \"57147\" \"55732\" \"2268\"  \"2519\"  \"4800\"  \"81887\"\n#>  [8] \"22875\" \"5893\"  \"572\"\nORA_results_GO_universe  <- enrichGO(gene = DEG_vec, \n                                     OrgDb = org.Hs.eg.db, \n                                     universe = alternative_universe)\nhead(ORA_results_GO_universe, n = 10)\n#> [1] ID          Description GeneRatio   BgRatio    \n#> [5] pvalue      p.adjust    qvalue      geneID     \n#> [9] Count      \n#> <0 rows> (or 0-length row.names)\nORA_results_KEGG_universe <- enrichKEGG(gene = DEG_vec, \n                                        organism = \"hsa\",\n                                        universe = alternative_universe)\nhead(ORA_results_KEGG_universe, n = 10)\n#> [1] ID          Description GeneRatio   BgRatio    \n#> [5] pvalue      p.adjust    qvalue      geneID     \n#> [9] Count      \n#> <0 rows> (or 0-length row.names)"},{"path":"padog.html","id":"padog","chapter":"11 PADOG","heading":"11 PADOG","text":"script, go process running PADOG. Note PADOG requires transformed RNA-Seq data genes Entrez ID format.","code":""},{"path":"padog.html","id":"libraries-10","chapter":"11 PADOG","heading":"11.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load librariesSummary packages:PADOG: Provides implementation method PADOGPADOG: Provides implementation method PADOGtweeDEseqCountData: addition preprocessed Pickrell data set, load following step, PADOG requires conditions samplestweeDEseqCountData: addition preprocessed Pickrell data set, load following step, PADOG requires conditions samplesKEGGREST: obtain character value variety organisms user required provide function padog(). human organism indicated default, might become necessary consult KEGGREST package working different organismKEGGREST: obtain character value variety organisms user required provide function padog(). human organism indicated default, might become necessary consult KEGGREST package working different organism","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"PADOG\")\nBiocManager::install(\"tweeDEseqCountData\")\nBiocManager::install(\"KEGGREST\")\nlibrary(PADOG)\nlibrary(tweeDEseqCountData)\nlibrary(KEGGREST)"},{"path":"padog.html","id":"load-data-9","chapter":"11 PADOG","heading":"11.2 Load Data","text":"sample conditions (.e. phenotype labels) pickrell data set can accessed usingWe proceed voom-transformed pickrell data set corresponding phenotype labels.","code":"\n# we load the voom-transformed Pickrell data set \nload(\"data/Results_RNASeq_Transformation/expression_data_voomtransformed_Entrez.Rdata\")\n\n# alternatively: load the gene expression measurements that have been transformed using \n# load(\"data/expression_data_vsttransformed_Entrez.Rdata\")\n\n# additionally, we load the pickrell data set so that we can access the sample conditions\ndata(pickrell)\npickrell.eset$gender \n#>  [1] male   male   female male   female male   female male  \n#>  [9] female male   female male   female male   female male  \n#> [17] female female male   female male   female female male  \n#> [25] female male   female female male   female female male  \n#> [33] female male   female female female female male   female\n#> [41] male   male   female female male   female female male  \n#> [49] female female male   female male   male   female female\n#> [57] male   female male   female male   female female male  \n#> [65] female female female male   female\n#> Levels: female male\n# gene expression measurements (transformed)\n# note: you can also proceed with the vst-transformed gene expression measurements \nexpression_data_transformed <- expression_data_voomtransformed_Entrez\n\n# sample conditions\nsample_conditions <- pickrell.eset$gender"},{"path":"padog.html","id":"padog-1","chapter":"11 PADOG","heading":"11.3 PADOG","text":"","code":""},{"path":"padog.html","id":"step-1-prepare-sample-conditions","chapter":"11 PADOG","heading":"11.3.1 Step 1: Prepare Sample Conditions","text":"First, inspect form initial (raw) sample conditions.PADOG requires character vector class labels samples. can contain “c” control samples “d” disease samples.Inspect prepared sample conditions:","code":"\n# look at the class: \nclass(sample_conditions)\n#> [1] \"factor\"\n# -> the sample labels are already coded as factors\n\n# the current levels are:\nlevels(sample_conditions)\n#> [1] \"female\" \"male\"\n# prepare sample conditions\n# we want to convert \n# (i) \"female\" to \"c\"\n# (ii) \"male\" to \"d\"\nsample_conditions_prep <- factor(sample_conditions, \n                                levels=c(\"female\",\"male\"), \n                                labels=c(\"c\",\"d\"))\nsample_conditions_prep\n#>  [1] d d c d c d c d c d c d c d c d c c d c d c c d c d c c\n#> [29] d c c d c d c c c c d c d d c c d c c d c c d c d d c c\n#> [57] d c d c d c c d c c c d c\n#> Levels: c d"},{"path":"padog.html","id":"step-2-run-padog","chapter":"11 PADOG","heading":"11.3.2 Step 2: Run PADOG","text":"recommended set seed ensure exact reproducibility results code run multiple time pointsYou can specify integer number seed. IMPORTANT choose seed arbitrarily WITHOUT INSPECTING results. seed NEVER specified based value yields preferable results.Function arguments:esetm: matrix contains expression measurements\nnote: since expression data initially stored data frame, transform matrix running PADOG\nesetm: matrix contains expression measurementsnote: since expression data initially stored data frame, transform matrix running PADOGgroup: sample conditions (values “c” “d”)group: sample conditions (values “c” “d”)dseed : seed random number generation (used process phenotype permutation)dseed : seed random number generation (used process phenotype permutation)additional arguments (use ):paired: indicates whether samples groups pairedpaired: indicates whether samples groups pairedblock: samples paired (.e. argument paired = TRUE), paired samples must block valueblock: samples paired (.e. argument paired = TRUE), paired samples must block valuegslist: gives instructions cluster genes gene sets\n‘gslist = “KEGGRESTpathway”’ (default): gene sets correspond KEGG pathways\nalternative: provide user-defined list gene sets\ngslist: gives instructions cluster genes gene sets‘gslist = “KEGGRESTpathway”’ (default): gene sets correspond KEGG pathways‘gslist = “KEGGRESTpathway”’ (default): gene sets correspond KEGG pathwaysalternative: provide user-defined list gene setsalternative: provide user-defined list gene setsorganism: organism gene expression measurements taken\nhuman, set organism = “hsa”\nrequired character value organisms can extracted KEGGREST package:\nobtain required organisms column organism\norganism: organism gene expression measurements takenfor human, set organism = “hsa”human, set organism = “hsa”required character value organisms can extracted KEGGREST package:required character value organisms can extracted KEGGREST package:obtain required organisms column organismobtain required organisms column organismannotation: required gslist set “KEGGRESTpathway” rownames esetm probe IDs\ncan set NULL gslist set “KEGGRESTpathway” rownames esetm Entrez gene ID format\nrownames gene IDs, sett annotation = NULL make sure rownames elements gslist (unique!)\nannotation: required gslist set “KEGGRESTpathway” rownames esetm probe IDscan set NULL gslist set “KEGGRESTpathway” rownames esetm Entrez gene ID formatcan set NULL gslist set “KEGGRESTpathway” rownames esetm Entrez gene ID formatif rownames gene IDs, sett annotation = NULL make sure rownames elements gslist (unique!)rownames gene IDs, sett annotation = NULL make sure rownames elements gslist (unique!)gs.names: contains names gene sets -> character vector\nmust length gslist\ngs.names: contains names gene sets -> character vectormust length gslistNI: number phenotype permutations employed assessment significance given gene setNI: number phenotype permutations employed assessment significance given gene setWe want take first look results table. Note, however, still add adjusted p-values (see next step), based differential enrichment eventually assessed.","code":"\n# run PADOG: \nPADOG_results <- padog(esetm = as.matrix(expression_data_transformed), \n                        group = sample_conditions_prep, \n                        dseed = 1)\nhead(PADOG_results , n = 10)\n#>       Name    ID Size meanAbsT0   padog0 PmeanAbsT Ppadog\n#> 04380 <NA> 04380   66  2.622104 3.832812     0.005  0.002\n#> 04810 <NA> 04810  111  2.326027 5.476170     0.004  0.004\n#> 03010 <NA> 03010   89  5.378671 9.659220     0.014  0.010\n#> 05213 <NA> 05213   23  1.528150 1.461810     0.027  0.010\n#> 05171 <NA> 05171  118  4.788746 8.020661     0.013  0.013\n#> 05417 <NA> 05417  112  2.094534 3.096663     0.015  0.017\n#> 05162 <NA> 05162   73  2.089532 3.042040     0.010  0.020\n#> 00760 <NA> 00760   17  1.871113 3.583774     0.026  0.023\n#> 04064 <NA> 04064   59  1.931306 3.552921     0.019  0.025\n#> 04010 <NA> 04010  169  1.987648 4.770146     0.018  0.028"},{"path":"padog.html","id":"step-3-adjust-for-multiple-testing","chapter":"11 PADOG","heading":"11.3.3 Step 3: Adjust for Multiple Testing","text":"PADOG perform multiple testing adjustment internally must performed user. work function R package base uses method Benjamini Hochberg default.","code":"\n# add adjusted p-value in column Ppadog_adjusted\nPADOG_results$Ppadog_adjusted <- p.adjust(PADOG_results$Ppadog)"},{"path":"padog.html","id":"step-4-interpretation-of-the-results-1","chapter":"11 PADOG","heading":"11.3.4 Step 4: Interpretation of the results","text":"want inspect (part ) results interpret columns provided results table.Differential enrichment given gene set can now assessed based adjusted p-value column Ppadog_adjusted. instance: detect gene sets Ppadog_adjusted < 0.05 differentially enriched.Additional columns:Name: Name gene setName: Name gene setID: Identifier gene setID: Identifier gene setSize: number genes gene setSize: number genes gene setmeanAbsT0: Mean absolute (moderated) t-statistic genes member given gene setmeanAbsT0: Mean absolute (moderated) t-statistic genes member given gene setpadog0: Mean abolute weighted moderate t-statistic genes member given gene setpadog0: Mean abolute weighted moderate t-statistic genes member given gene setPmeanAbsT: significance meanAbsT0PmeanAbsT: significance meanAbsT0Ppadog: significance padog0Ppadog: significance padog0","code":"\nhead(PADOG_results, n = 10)\n#>       Name    ID Size meanAbsT0   padog0 PmeanAbsT Ppadog\n#> 04380 <NA> 04380   66  2.622104 3.832812     0.005  0.002\n#> 04810 <NA> 04810  111  2.326027 5.476170     0.004  0.004\n#> 03010 <NA> 03010   89  5.378671 9.659220     0.014  0.010\n#> 05213 <NA> 05213   23  1.528150 1.461810     0.027  0.010\n#> 05171 <NA> 05171  118  4.788746 8.020661     0.013  0.013\n#> 05417 <NA> 05417  112  2.094534 3.096663     0.015  0.017\n#> 05162 <NA> 05162   73  2.089532 3.042040     0.010  0.020\n#> 00760 <NA> 00760   17  1.871113 3.583774     0.026  0.023\n#> 04064 <NA> 04064   59  1.931306 3.552921     0.019  0.025\n#> 04010 <NA> 04010  169  1.987648 4.770146     0.018  0.028\n#>       Ppadog_adjusted\n#> 04380           0.696\n#> 04810           1.000\n#> 03010           1.000\n#> 05213           1.000\n#> 05171           1.000\n#> 05417           1.000\n#> 05162           1.000\n#> 00760           1.000\n#> 04064           1.000\n#> 04010           1.000"},{"path":"gseapreranked.html","id":"gseapreranked","chapter":"12 GSEAPreranked","heading":"12 GSEAPreranked","text":"script, go process preparing required input GSEAPreranked20 (part web-based tool GSEA21 ).\nNote contrast remaining tools considered work, recom-\nmended GSEAPreranked provide input genes ID HGNC (HUGO) gene\nsymbols.22 reason described supplement paper.Therefore, starting point pre-filtered gene expression data set \ngene IDs initial (Ensembl) ID format.proceed following order:Conversion gene IDs HGNC (HUGO) symbols removal resulting duplicated gene IDsConversion gene IDs HGNC (HUGO) symbols removal resulting duplicated gene IDsDifferential expression analysis using voom/limma, DESeq2, edgeRDifferential expression analysis using voom/limma, DESeq2, edgeRGeneration gene ranking results table generated (ii)Generation gene ranking results table generated (ii)Export gene rankings text fileExport gene rankings text fileLink information process gene rankings ExcelLink information process gene rankings Excel","code":""},{"path":"gseapreranked.html","id":"libraries-11","chapter":"12 GSEAPreranked","heading":"12.1 Libraries","text":"necessary packages available Bioconductor, installed already available machine.Load libraries:Description libraries:clusterProfiler: convert Ensembl ID format HGNC (HUGO) gene symbolsclusterProfiler: convert Ensembl ID format HGNC (HUGO) gene symbolsorg.Hs.eg.db: indicate work human gene expression data (must adapted working different organism)org.Hs.eg.db: indicate work human gene expression data (must adapted working different organism)tweeDEseqCountData: obtain conditions samples gene expression data settweeDEseqCountData: obtain conditions samples gene expression data setlimma: differential expression analysis (based gene ranking generated)limma: differential expression analysis (based gene ranking generated)edgeR: differential expression analysis (based gene ranking generated)edgeR: differential expression analysis (based gene ranking generated)DESeq2: differential expression analysis (based gene ranking generated)DESeq2: differential expression analysis (based gene ranking generated)dplyr: unify relevant columns results differential expression analysis across three methodsdplyr: unify relevant columns results differential expression analysis across three methods","code":"\ninstall.packages(\"BiocManager\")\nBiocManager::install(\"clusterProfiler\")\nBiocManager::install(\"org.Hs.eg.db\")\nBiocManager::install(\"tweeDEseqCountData\")\nBiocManager::install(\"limma\")\nBiocManager::install(\"edgeR\")\nBiocManager::install(\"DESeq2\")\nBiocManager::install(\"dplyr\")\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db) \nlibrary(tweeDEseqCountData)\nlibrary(limma)\nlibrary(edgeR)\nlibrary(DESeq2)\nlibrary(dplyr)"},{"path":"gseapreranked.html","id":"load-data-10","chapter":"12 GSEAPreranked","heading":"12.2 Load data","text":"proceed gene expression data set pre-filtered using edgeR’s filterByExpr().Alternatively, can also load gene expression data set manually pre-filtered (proposed DESeq2):simplified readability, proceed pre-filtered gene expression data set different name:","code":"\nload(\"./data/Results_PreFiltering/expression_data_filterByExpr.Rdata\")\n# load(\"./data/Results_PreFiltering/expression_data_filterDESeq2.Rdata\")\nexpression_data_filtered <- expression_data_filterByExpr"},{"path":"gseapreranked.html","id":"step-1-convert-ensembl-ids-to-hgnc-symbols","chapter":"12 GSEAPreranked","heading":"12.3 Step 1: Convert Ensembl IDs to HGNC symbols","text":"() Obtain mapping initial (Ensembl) gene IDs required HGNC gene symbolsFunction arguments:geneID: gene IDs converted (stored rownames gene expression data set)geneID: gene IDs converted (stored rownames gene expression data set)fromType: initial gene ID format convertedfromType: initial gene ID format convertedtoType: gene ID format converted totoType: gene ID format converted toOrgDb: annotation data base organisms gene expression measurements originate. corresponding argument must loaded library (see )OrgDb: annotation data base organisms gene expression measurements originate. corresponding argument must loaded library (see )Note arguments “fromType” “toType” must set one following, depending given required gene ID format:ACCNUM, ALIAS, Ensembl, EnsemblPROT, EnsemblTRANS, ENTREZID, ENZYME, EVIDENCE, EVIDENCEALL, GENENAME, GENETYPE, GO, GOALL, IPI, MAP, OMIM, ONTOLOGY, ONTOLOGYALL, PATH, PFAM, PMID, PROSITE, REFSEQ, SYMBOL, UCSCKG, UNIPROT.(ii) Concatenate initial gene expression data set mapping initial (Ensembl) required HGNC symbolsMerge row names expression data set ENSEMBL ID gene ID mapping.Description function arguments:.x .y: specify columns expression_data_filterByExpr bitr_EnsToEntr, respectively, data sets concatenated:\n.x = 0: use row names expression_data_filterByExpr (row names contain gene IDs)\n.y = “ENSEMBL”: use column contains Ensembl gene IDs\n.x .y: specify columns expression_data_filterByExpr bitr_EnsToEntr, respectively, data sets concatenated:.x = 0: use row names expression_data_filterByExpr (row names contain gene IDs).x = 0: use row names expression_data_filterByExpr (row names contain gene IDs).y = “ENSEMBL”: use column contains Ensembl gene IDsby.y = “ENSEMBL”: use column contains Ensembl gene IDsAnalogous Chapter ‘Gene ID conversion removal resulting duplicated gene IDs’, work three separate ways remove duplicate gene IDs result fromvgene ID conversion. apply three approaches removal.","code":"\nbitr_EnsToSymb <- bitr(geneID = rownames(expression_data_filtered),\n                       fromType = \"ENSEMBL\",\n                       toType = \"SYMBOL\",\n                       OrgDb = org.Hs.eg.db)\n#> 'select()' returned 1:many mapping between keys and\n#> columns\n#> Warning in bitr(geneID =\n#> rownames(expression_data_filtered), fromType = \"ENSEMBL\", :\n#> 3.84% of input gene IDs are fail to map...\nexpression_data_merged <- merge(x = expression_data_filtered,\n                                             y = bitr_EnsToSymb,\n                                             by.x = 0, \n                                             by.y = \"ENSEMBL\",\n                                             sort=TRUE)"},{"path":"gseapreranked.html","id":"step-2-take-a-closer-look-at-the-duplicated-gene-ids-1","chapter":"12 GSEAPreranked","heading":"12.4 Step 2: Take a closer look at the duplicated gene IDs","text":"Case 1: single ENSEMBL ID mapped multiple HGNC symbolsIn case, denote corresponding ENSEMBL IDs duplicated IDsIn following, can inspect conversion pattern Ensembl ID mapped multiple distinct HGNC symbols:can see perfectly Ensembl ID mapped multiple individual HGNC symbols.Case 2: multiple ENSEMBL IDs mapped HGNC symbolIn case, denote corresponding HGNC symbols duplicated IDs.Obtain number cases multiple distinct Ensembl IDs converted HGNC gene symbolIn following, want take look conversion pattern duplicated HGNC symbols.","code":"\n# obtain number of cases in which an ENSEMBL gene ID was converted to several HGNC symbols, i.e. the number of\n# times an Ensembl ID appears more than once in the mapping\nsum(duplicated(bitr_EnsToSymb$ENSEMBL))\n#> [1] 34\n# determine all duplicated ENSEMBL gene IDS (i.e. all ENSEMBL gene IDs that were mapped to multiple distinct HGNC gene symbols):\ndupl_ensembl <- unique(bitr_EnsToSymb$ENSEMBL[duplicated(bitr_EnsToSymb$ENSEMBL)])\n# number of ENSEMBL IDs that have at least one duplicate\nlength(dupl_ensembl)\n#> [1] 34\n# get subset conversion pattern of all duplicated Ensembl IDs \nduplicated_conversion_ens<-bitr_EnsToSymb[bitr_EnsToSymb$ENSEMBL %in% dupl_ensembl,]\n# take a look at conversion pattern for some of the duplicated Ensembl gene IDs:\nhead(duplicated_conversion_ens, n = 6)\n#>             ENSEMBL          SYMBOL\n#> 303 ENSG00000063587          ZNF275\n#> 304 ENSG00000063587    LOC105373378\n#> 615 ENSG00000088298           EDEM2\n#> 616 ENSG00000088298 MMP24-AS1-EDEM2\n#> 683 ENSG00000090857            PDPR\n#> 684 ENSG00000090857    LOC124907803\n# in these cases, the corresponding HGNC symbols appear repeatedly in the mapping:\nsum(duplicated(bitr_EnsToSymb$SYMBOL))\n#> [1] 3\n\n# determine all HGNC gene symbols affected by this duplication\ndupl_symbol <- unique(bitr_EnsToSymb$SYMBOL[duplicated(bitr_EnsToSymb$SYMBOL)])\n\n# inspect the first few HGNC symbols affected by a duplication\nhead(dupl_symbol, n = 10)\n#> [1] \"H4C15\" \"OPN3\"\n\n# get number of HGNC symbols that have at least one duplicate\nlength(dupl_symbol)\n#> [1] 2\n# subset the conversion pattern to that of the duplicated HGNC symbols\nduplicated_conversion <- bitr_EnsToSymb[bitr_EnsToSymb$SYMBOL %in% dupl_symbol,]\n\n# for visibility: order the conversion pattern by the HGNC symbols\nduplicated_conversion <- duplicated_conversion[order(duplicated_conversion$SYMBOL),]\n\n# take a look at conversion pattern of the first few duplicated HGNC symbols:\nhead(duplicated_conversion, n = 6 )\n#>              ENSEMBL SYMBOL\n#> 3605 ENSG00000158406  H4C15\n#> 5675 ENSG00000197061  H4C15\n#> 5736 ENSG00000197837  H4C15\n#> 250  ENSG00000054277   OPN3\n#> 5875 ENSG00000203668   OPN3"},{"path":"gseapreranked.html","id":"step-3-remove-the-duplicated-gene-ids","chapter":"12 GSEAPreranked","heading":"12.5 Step 3: Remove the duplicated gene IDs","text":"subsequent analysis (whether differential expression analysis gene set analysis), need deal duplicated gene IDs remove suitable way one unique gene expression measurement among duplicates remains. recommended way proceed, .e. common approach presented official scientific puplicatios, instead several approaches suggested users corresponding user platforms. observed manner duplicate gene ID removal seems chosen discretion user. therefore present three approaches duplicate gene ID removal.","code":""},{"path":"gseapreranked.html","id":"option-1-keep-the-duplicate-with-the-lowest-subscript","chapter":"12 GSEAPreranked","heading":"12.5.1 Option 1: Keep the duplicate with the lowest subscript","text":"simplest approach among three.1. Remove duplicated HGNC gene symbols2. Remove duplicated ENSEMBL gene IDs3. Set HGNC gene symbols rownamesWe now want inspect small part gene expression data set:","code":"\n# indicate which HGNC gene symbols are NO duplicate of any other gene ID\nind_nodupl <- !duplicated(expression_data_merged$SYMBOL)\n\n# filter the gene expression data set to the genes that are NO duplicate of any other gene ID \nexprdat_symbol_dupl1 <- expression_data_merged[ind_nodupl,]\n# indicate which Ensembl IDs are NO duplicate of any other gene ID \nind_nodupl <- !duplicated(exprdat_symbol_dupl1$Row.names)\n\n# filter the gene expression data set to the genes that are NO duplicate of any other gene ID \nexprdat_symbol_dupl1 <- exprdat_symbol_dupl1[ind_nodupl,]\nrownames(exprdat_symbol_dupl1) <- exprdat_symbol_dupl1$SYMBOL\n\n#Remove columns containing ENSEMBL and HGNC symbols\nexprdat_symbol_dupl1 <- subset(exprdat_symbol_dupl1, select=-c(Row.names,SYMBOL))\n\n# Inspect the dimension of the resulting gene expression data set\ndim(exprdat_symbol_dupl1)\n#> [1] 6006   69\n# we particularly see that the number of columns is now at its initial number\nexprdat_symbol_dupl1[1:10, 1:10]\n#>        NA18486 NA18498 NA18499 NA18501 NA18502 NA18504\n#> DPM1        22     105      40      55      67      37\n#> SCYL3       22     100     107      53      72      38\n#> FIRRM        5      23      10      18      15       8\n#> FGR         36      70      41      33      59      29\n#> FUCA2       29      79      33      31      29      21\n#> NFYA       301     351     344     176     340     170\n#> LAS1L       32      22       4       8      15       5\n#> ENPP4       52     419     173     137     127      72\n#> BAD         48      81      65      19      59      57\n#> HS3ST1       8      15       8      18       4      27\n#>        NA18505 NA18507 NA18508 NA18510\n#> DPM1        88     127      70      43\n#> SCYL3       98      69      66      43\n#> FIRRM       11      16      18       7\n#> FGR         22      71      12      43\n#> FUCA2       42      62      41      25\n#> NFYA       238     247     226     227\n#> LAS1L       15      16      19      15\n#> ENPP4      267     247     154      81\n#> BAD         44      79      71      79\n#> HS3ST1       3      11       5       3"},{"path":"gseapreranked.html","id":"option-2-keep-the-rounded-mean-expression-value-of-all-duplicated-gene-ids-1","chapter":"12 GSEAPreranked","heading":"12.5.2 Option 2: Keep the (rounded) mean expression value of all duplicated gene IDs","text":", remove duplicated HGNC gene symbols (case 2) removing duplicated Ensembl gene IDs (case 1). reason elaborated .1. Remove duplicated HGNC gene symbols2. Remove duplicated ENSEMBL IDsCaution: Single ENSEMBL IDs mapped multiple HGNC symbol naturally generate identical count data corresponding HGNC symbols. therefore pointless compute mean expression values. verifiable looking data set containing ENSEMBL IDs mapped multiple HGNC symbols:see rows originate Ensembl ID contain identical count data.therefore proceed option 1 use HGNC symbol occurs first remove rest.3. Set HGNC symbol rownames","code":"\n#generate matrix to contain (rounded) mean expression values of all rows that have same HGNC gene symbol\n#ncol=ncol(expression_data_filterByExpr)-2 since data set contains 2 columns with IDs at this point\nmean_symbol <- matrix(nrow=0, ncol=ncol(expression_data_merged)-2)\n\n\n# for each duplicated HGNC gene symbol separately, we gather all rows with the corresponding gene expression data and then extract the (rounded) mean expression value of all rows\nfor(i in 1:length(dupl_symbol)){\n\n# go through each HGNC symbols which occurs multiple times\n# determine all rows whose HGNC symbols correspond to currently considered HGNC symbol\ncounts_dupl <- expression_data_merged[expression_data_merged$SYMBOL %in% unique(dupl_symbol)[i],]\n\n#compute the mean expression value of all rows that contain to the given HGNC gene symbol\ndupl_id <- round(colMeans(counts_dupl[,c(2:(ncol(expression_data_merged)-1))]))\n\n# store rounded mean expression value in matrix\n# this matrix is extended by a single row of gene expression data which corresponds to the (rounded) mean expression data that corresponds to the given HGNC gene symbol\nmean_symbol <- rbind(mean_symbol,dupl_id)\n\n}\n\n#set corresponding HGNC gene symbols as rownames\nrownames(mean_symbol) <- unique(dupl_symbol)\n\n# after completing the for-loop, mean_symbol contains the mean expression measurements of each HGNC gene symbol which contains duplicates resulting from gene ID conversion\n# We want to take a look at a part of the data set \nmean_symbol[, 1:9]\n#>       NA18486 NA18498 NA18499 NA18501 NA18502 NA18504\n#> H4C15      27     109      31      50      57      18\n#> OPN3       50     182      82     118      60      52\n#>       NA18505 NA18507 NA18508\n#> H4C15      56      34      52\n#> OPN3      102      80      78\n\n\n# test whether the number of rows in mean_symbol corresponds to the number HGNC symbols\n# that occur more than once\n# result should be TRUE\nnrow(mean_symbol) == length(dupl_symbol)\n#> [1] TRUE\n\n# remove all rows from the expression data whose HGNC symbol has at least one duplicate\n# intuition: we have just dealt with the corresponding rows and do not want them to be considered in the second step (which deals with case 2\nexprdat_symbol_dupl2 <- expression_data_merged[!expression_data_merged$SYMBOL %in% dupl_symbol,]\n\n# test whether the number of rows in resulting data set equals nrow of inital data set minus number of genes with at least one duplicate\nnrow(exprdat_symbol_dupl2) == nrow(expression_data_merged)-nrow(duplicated_conversion)\n#> [1] TRUE\ntest_dupl_ensembl <- exprdat_symbol_dupl2[exprdat_symbol_dupl2$Row.names %in% dupl_ensembl,]\n\n# take a look at a few entries of the data set:\n# note that we additionally include the last column of the data set which corresponds to the HGNC symbols\ntest_dupl_ensembl[1:6, c(1:5, ncol(test_dupl_ensembl))]\n#>           Row.names NA18486 NA18498 NA18499 NA18501\n#> 299 ENSG00000063587     143     116     244      76\n#> 300 ENSG00000063587     143     116     244      76\n#> 610 ENSG00000088298     202     384     368     207\n#> 611 ENSG00000088298     202     384     368     207\n#> 678 ENSG00000090857      59      41     102      96\n#> 679 ENSG00000090857      59      41     102      96\n#>              SYMBOL\n#> 299          ZNF275\n#> 300    LOC105373378\n#> 610           EDEM2\n#> 611 MMP24-AS1-EDEM2\n#> 678            PDPR\n#> 679    LOC124907803\n# Keep HGNC symbol that occurs first\nexprdat_symbol_dupl2<-exprdat_symbol_dupl2[!duplicated(exprdat_symbol_dupl2$Row.names),]\nrownames(exprdat_symbol_dupl2)<-exprdat_symbol_dupl2$SYMBOL\n\n# Remove the columns containing ENSEMBL and HGNC symbols\nexprdat_symbol_dupl2<-subset(exprdat_symbol_dupl2,select= -c(Row.names,SYMBOL))\n\n# Add those rows to the data set that contain mean expression values of duplicate HGNC symbols\nexprdat_symbol_dupl2 <- rbind(exprdat_symbol_dupl2,mean_symbol)\n\n\n#Inspect the dimension of the remaining gene expression data set\ndim(exprdat_symbol_dupl2)\n#> [1] 6007   69"},{"path":"gseapreranked.html","id":"option-3-among-the-duplicates-keep-row-with-highest-overall-expression-values-i.e-highest-counts-across-all-samples","chapter":"12 GSEAPreranked","heading":"12.5.3 Option 3: Among the duplicates, keep row with highest overall expression values (i.e highest counts across all samples)","text":"intuition behind approach row highest counts values highest power detected differentially expressed. option 2, applies duplicates result multiple ENSEMBL IDs mapped HGNC symbol.1. Remove duplicated HGNC symbols2. Remove duplicated ENSEMBL IDsAs option 2, pointless detect row highest count values rows correspond ENSEMBL ID rows naturally contain identical count data. therefore remove duplicate ENSEMBL ID occurs first (option 1).3. Set HGNC symbols rownames","code":"\n# Generate a matrix to later contain row with highest count values among ID duplicates this data set is to be filled gradually and with each iteration of the follwing for-loop\nhighest_count_symbol<-matrix(, nrow=0, ncol=ncol(expression_data_filterByExpr))\n\n\n# For each duplicated HGNC gene symbol separately, we gather all rows with the corresponding gene expression data and then extract the row with the highest overall magnitude of counts\n\nfor(i in 1:length(dupl_symbol)){\n\n# Go through each HGNC symbols which occurs multiple times\n# determine all rows whose HGNC symbols correspond to currently considered HGNC symbol\ncounts_dupl<-expression_data_merged[expression_data_merged$SYMBOL %in% unique(dupl_symbol)[i],]\n\n# Order rows in decreasing manner by their number of read counts across all samples\norder_rowsums<-order(rowSums(counts_dupl[,2:(ncol(counts_dupl)-1)]),decreasing=TRUE)\n  \n# Detect row with highest number of read counts across all samples (i.e. row with rank 1)\ndupl_id<-counts_dupl[order_rowsums==1,]\n  \n#store corresponding expression\nhighest_count_symbol<-rbind(highest_count_symbol,dupl_id)\n  \n}\n\n\n#Remove all initial values with HGNC duplicates from the dataset initial gene expression data set\nexprdat_symbol_dupl3<-expression_data_merged[! expression_data_merged$SYMBOL %in% unique(dupl_symbol),]\n# Keep the corresponding ENSEMBL ID that occurs first\nexprdat_symbol_dupl3<-exprdat_symbol_dupl3[!duplicated(exprdat_symbol_dupl3$Row.names),]\n\n# Add the gene expression rows of all HGNC gene symbols that were initially duplicated\nexprdat_symbol_dupl3<-rbind(exprdat_symbol_dupl3,highest_count_symbol )\nrownames(exprdat_symbol_dupl3)<-exprdat_symbol_dupl3$SYMBOL\n#Remove any column that contains information on gene IDs\nexprdat_symbol_dupl3<-subset(exprdat_symbol_dupl3, select=-c(Row.names,SYMBOL))\n\n# Inspect the dimension of the resulting gene expression data set \ndim(exprdat_symbol_dupl3)\n#> [1] 6007   69\n# we see that the sample size (number of columns) is now back at its initial number"},{"path":"gseapreranked.html","id":"intermediate-step-choose-which-converted-gene-expression-data-sets-to-proceed-with","chapter":"12 GSEAPreranked","heading":"12.6 Intermediate step: Choose which converted gene expression data sets to proceed with","text":"illustration, proceed one three gene expression data sets result conversion gene IDs removal duplications. , proceed first approach \nremoval duplicated gene IDs. However, can easily switch another approach discretion.proceed gene expression data set stored object “expression_data_filt_symbol”.","code":"\nexpression_data_filt_symbol <- exprdat_symbol_dupl1"},{"path":"gseapreranked.html","id":"step-3-differential-expression-analysis","chapter":"12 GSEAPreranked","heading":"12.7 Step 3: Differential expression analysis","text":"corresponding results table differential expression analysis, later transform certain metrics (.e. columns) gene-level statistic gene based gene ranking generated.proceed analogously Chapter ‘Differential Expression Analysis’, perform differential expression analysis using three established methods, namelyvoom/limmaDESeq2edgeRWhile already count data hand working , additionally need conditions samples. Since work Pickrell data set illustrations, load corresponding data.","code":"\n# Load pickrell data \ndata(pickrell)\n\n# Store the sample conditions in the object sample_conditions \nsample_conditions <- pickrell.eset$gender"},{"path":"gseapreranked.html","id":"option-1-differential-expression-analysis-using-limma-1","chapter":"12 GSEAPreranked","heading":"12.7.1 Option 1: Differential expression analysis using limma","text":"Note code illustrations based following user manual:  (https://bioconductor.org/packages/devel/bioc/vignettes/limma/inst/doc/usersguide.pdf)1. Generate required input object limmaAs described “Instructions_Differential_Expression_Analysis”, gene expression data set expression_data_filt_symbol currently data frame needs converted DGEList object.Required function arguments:counts: matrix contains RNA-Seq data (.e. count data)Optional function arguments:group: indicates condition sample/library\nargument must specified sooner later (subsequent functions) just specify point.\nargument must specified sooner later (subsequent functions) just specify point.Note leave remaining arguments default state since corresponding info added following pipeline functions.2. NormalizationThe following piece code generates normalization factor sample. accounts sample-specific effects (differences library sizes effects compositionality). accounted , effects prevent comparison samples.Note function transform count data, rather generates normalization factor sample incorporated subsequent analysis separately.3. voom transformationNote voom transformation facilitates use subsequent functions initially developed microarray data.4. Differential expression analysis5. Rename columns results tableThis step required differential expression analysis subsequent use gene set analysis GENERAL.renaming columns (adjusted p-value) necessary context illustrations since different methods differential expression analysis typically differ column names results tables. unification column names required can use code illustrate conduct GSA subsequent code.6. Inspect first 10 genes results table ","code":"\n# store expression data with corresponding sample conditions in object of class DGEList\ny <- DGEList(counts = expression_data_filt_symbol,\n             group = sample_conditions)\ny <- calcNormFactors(y)\n# design matrix (rows correspond to samples, columns indicate which coefficients are to be estimated)\ndesign_matrix <- model.matrix(~sample_conditions)\n\n# voom transformation (transformation of count data to log-cpm values, computation of observation weight for each\n# gene based on mean-variance relationship)\ny <- voom(y, design = design_matrix)\n# Fit a linear model for each gene\ny <- lmFit(y)\n\n# Calculate the statistics for the assessment of differential expression\ny <- eBayes(y)\n\n# Get the results table for each gene whose differential expression was assessed\nDE_results_limma <- topTable(y, number =  nrow(y))\n#> Removing intercept from test coefficients\n# Note that number = nrow(y) ensures that all genes are displayed in results, not just a subset\n# First, we transform to results table to a data frame so that we see the results table directly when accessing it through the name \"res\"\nDE_results_limma <- as.data.frame(DE_results_limma)\n\n# Rename the column that contains the adjusted p-values: rename padj to p_adj\nDE_results_limma <- dplyr::rename(DE_results_limma, p_adj = `adj.P.Val`)\nhead(DE_results_limma, n = 10)\n#>              logFC  AveExpr         t      P.Value\n#> RPS4Y1   9.2106424 1.986675 47.198797 1.005487e-55\n#> TMSB4Y   5.0807298 0.513264 26.672932 6.011554e-39\n#> PNPLA4  -0.9239961 5.333790 -8.777656 5.619670e-13\n#> PUDP    -0.8543759 2.163068 -4.414608 3.506569e-05\n#> CXorf38 -0.5507332 3.716678 -4.250337 6.330976e-05\n#> TXLNG   -0.4042256 5.116432 -4.043565 1.310034e-04\n#> G0S2    -1.4700846 5.192623 -3.855239 2.497623e-04\n#> JUN     -0.5879335 8.273471 -3.919967 2.004610e-04\n#> APAF1    0.4047167 5.968529  3.823276 2.782012e-04\n#> IL1A    -1.4856099 3.543969 -3.666732 4.683127e-04\n#>                p_adj           B\n#> RPS4Y1  6.038958e-52 84.22462726\n#> TMSB4Y  1.805270e-35 62.69727996\n#> PNPLA4  1.125058e-09 19.21578210\n#> PUDP    5.265113e-02  2.14888617\n#> CXorf38 7.604769e-02  1.55522518\n#> TXLNG   1.311344e-01  0.73590696\n#> G0S2    1.856530e-01  0.15458026\n#> JUN     1.719955e-01  0.11850631\n#> APAF1   1.856530e-01 -0.07239398\n#> IL1A    2.623670e-01 -0.24410772"},{"path":"gseapreranked.html","id":"option-2-differential-expression-analysis-using-deseq2-1","chapter":"12 GSEAPreranked","heading":"12.7.2 Option 2: Differential expression analysis using DESeq2","text":"official DESeq2 vignette can found following link:http://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html1. Generate required input object DESeq2DESeq2 operates format DESeqDataSet contains information count data, conditions samples design (information see ). Note gene expression data sets must imported R, additional steps necessary following code can run.Generate data frame contains condition sampleHere, information sample conditions column data frame. However, variables (batch effects) controlled , corresponding variables must additionally added coldata.Generate DESeqDataSetRelevant function arguments:countData: count data gene expression data setcountData: count data gene expression data setcolData: data frame contains information samples (see )\nconditions samples (required) possibly variables correct (batch effects)\ncolData: data frame contains information samples (see )conditions samples (required) possibly variables correct (batch effects)design: indicates variables colData used modelling\ndetailed: argument design used estimate dispersions log2 fold changes model\none variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: design ~ batch + condition\nmake sure variable interest (: variable represents conditions samples) placed end formula\ndesign: indicates variables colData used modellingmore detailed: argument design used estimate dispersions log2 fold changes modelmore detailed: argument design used estimate dispersions log2 fold changes modelif one variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: design ~ batch + conditionif one variable colData used argument design (e.g. second variable “batch”), syntax changes following formula: design ~ batch + conditionmake sure variable interest (: variable represents conditions samples) placed end formulamake sure variable interest (: variable represents conditions samples) placed end formula2. Differential expression analysisDescription functions:DESeq(): Estimation normalization factors, estimation dispersions, fitting generalized linear model, Wald statisticsresults(): Provides base mean across samples, estimated log2 fold changes, standard errors, test statistics, p-values, adjusted p-values3. Rename columns results tableThis step required differential expression analysis subsequent use gene set analysis GENERAL.renaming columns (adjusted p-value) necessary context illustrations since different methods differential expression analysis typically differ column names results tables. unification column names required can use code illustrate conduct GSA subsequent code.4. Inspect first 10 genes results table","code":"\n# Here, the information on the sample conditions is the only column in the data frame\n# However, if further variables (such as batch effects) are to be controlled for, the corresponding variables must additionally be added to coldata\n\n# The names of the samples are stored as the row names of the data frame\n# Important: make sure that the order of the conditions in sample_conditions corresponds to the order of the\n# samples in expression_data\ncoldata <- data.frame(sample_conditions,\n                      row.names = colnames(expression_data_filt_symbol))\n\n# Rename the column header to \"condition\"\ncolnames(coldata) <- \"condition\"\n\n# Recode the variable \"condition\" as a factor\n# Rename the sample conditions (in this case from \"female\" and \"male\") to \"untreated\" and \"treated\"\n# Note: make sure that the control level in variable condition is coded as the first level (i.e. \"untreated\")\ncoldata$condition <- factor(coldata$condition,\n                            labels = c(\"untreated\",\"treated\"))\ndds <- DESeqDataSetFromMatrix(countData = expression_data_filt_symbol,\n                            colData = coldata,\n                            design = ~ condition)\n# 1. Perform default differential expression analysis\ndds <- DESeq(dds)\n# 2. Generate results table which provides\nDE_results_DESeq2 <- results(dds)\n# First, we transform to results table to a data frame so that we see the results table directly when accessing it through the name \"res\"\nDE_results_DESeq2 <- as.data.frame(DE_results_DESeq2)\n\n# Rename the column that contains the adjusted p-values: rename padj to p_adj\nDE_results_DESeq2 <- dplyr::rename(DE_results_DESeq2, p_adj = \"padj\")\nhead(DE_results_DESeq2, n = 10)\n#>         baseMean log2FoldChange      lfcSE        stat\n#> DPM1    62.75664    0.039694123 0.11391433  0.34845593\n#> SCYL3   70.48320    0.028962410 0.11169085  0.25930870\n#> FIRRM   13.00620    0.165415797 0.15394501  1.07451223\n#> FGR     43.59415    0.114144611 0.19558025  0.58362034\n#> FUCA2   37.98066   -0.006462503 0.10902544 -0.05927518\n#> NFYA   228.56697    0.051476343 0.09634771  0.53427676\n#> LAS1L   11.53865    0.025240854 0.18770526  0.13447068\n#> ENPP4  175.91248    0.300292682 0.16292585  1.84312480\n#> BAD     66.39379   -0.264391459 0.10275324 -2.57307183\n#> HS3ST1  10.12757   -0.199051398 0.31889483 -0.62419137\n#>            pvalue     p_adj\n#> DPM1   0.72749780 0.9221933\n#> SCYL3  0.79539707 0.9423095\n#> FIRRM  0.28259317 0.7199487\n#> FGR    0.55947577 0.8668104\n#> FUCA2  0.95273293 0.9859714\n#> NFYA   0.59315007 0.8787295\n#> LAS1L  0.89303039 0.9706589\n#> ENPP4  0.06531079 0.4826632\n#> BAD    0.01008003 0.2998836\n#> HS3ST1 0.53250191 0.8522833"},{"path":"gseapreranked.html","id":"option-3-differential-expression-analysis-using-edger-1","chapter":"12 GSEAPreranked","heading":"12.7.3 Option 3: Differential expression analysis using edgeR","text":"instructions edgeR based following vignette:  (https://www.bioconductor.org/packages/release/bioc/vignettes/edgeR/inst/doc/edgeRUsersGuide.pdf)1. Generate required input object edgeRStore expression data corresponding sample conditions object class DGEListRequired function arguments:counts: matrix contains RNA-Seq data (.e. count data)Optional function arguments:group: indicates condition sample/library\nargument must specified sooner later (subsequent functions) just specify point\nargument must specified sooner later (subsequent functions) just specify pointNote leave remaining arguments default state since corresponding info added subsequent pipeline functions.2. NormalizationThe following piece code generates normalization factor sample. accounts sample-specific effects (differences library sizes effects compositionality). accounted , effects prevent comparison samplesNote: function transform count data, rather generates normalization factor sample incorporated subsequent analysis separately.3. Estimation dispersionEstimate common tagwise dispersion quantify variation true abundance given gene different samples required assess differential expression realistically.4. Differential expression analysis5.Rename columns results tableThis step required differential expression analysis subsequent use gene set analysis GENERAL.renaming columns (adjusted p-value) necessary context illustrations since different methods differential expression analysis typically differ column names results tables. unification column names required can use code illustrate conduct GSA subsequent code.6. Inspect first 10 genes results tableNote one gene adjusted p-value 0. deal issue generating gene ranking edgeR.","code":"\ny <- DGEList(counts = expression_data_filt_symbol,\n             group = sample_conditions)\ny <- calcNormFactors(y)\ny <- estimateDisp(y)\n#> Using classic mode.\n# Test each gene for differential expression:\nDE_results_edgeR <- exactTest(y)\n\n# Extract pre-specified number (n) of genes\nDE_results_edgeR <- topTags(DE_results_edgeR, n = nrow(DE_results_edgeR))\n\n# Note: argument n specifies the number of top differentially expressed genes to be displayed in the results\n# n = nrow(DE_results) ensures the results of all genes whose differential expression was assessed are displayed\n# first, we transform to results table to a data frame so that we see the results\n# table directly when accessing it through the name \"res\"\nDE_results_edgeR <- as.data.frame(DE_results_edgeR)\n\n# rename column that contains adjusted p-values: rename padj to p_adj\nDE_results_edgeR <- dplyr::rename(DE_results_edgeR, p_adj = \"FDR\")\nhead(DE_results_edgeR, n = 10)\n#>              logFC   logCPM        PValue         p_adj\n#> RPS4Y1  10.1331218 6.155421  0.000000e+00  0.000000e+00\n#> TMSB4Y   5.5792120 2.520038 6.284371e-121 1.887197e-117\n#> PNPLA4  -0.9446936 5.485702  1.873415e-17  3.750577e-14\n#> PUDP    -0.7768043 2.571376  3.072736e-06  4.613713e-03\n#> SNAI1   -1.6460183 3.288600  4.708446e-06  5.469265e-03\n#> GADD45G -1.5871184 2.680046  5.463801e-06  5.469265e-03\n#> THEM5   -1.1256488 2.303307  1.949582e-05  1.672742e-02\n#> CTSW     1.5020170 3.366261  2.908599e-05  2.183631e-02\n#> TXLNG   -0.4252126 5.208043  3.558631e-05  2.271802e-02\n#> TCFL5   -0.6027710 5.756923  3.782554e-05  2.271802e-02"},{"path":"gseapreranked.html","id":"step-4-generate-gene-ranking","chapter":"12 GSEAPreranked","heading":"12.8 Step 4: Generate gene ranking","text":"now apply gene-level statistic results table differential expression analysis generate gene ranking serve input GSEAPreranked.performed differential expression analysis \n- voom/limma\n- DESeq2\n- edgeR,\nalso generate three gene rankings, one three methods.formula gene-level ranking metric  \n\\[ (-1) * \\log_{10}(p\\text{-value}) * \\text{sign}(\\text{log fold change})\\].\nNote “p-value”, refer non-adjusted p-value.","code":""},{"path":"gseapreranked.html","id":"option-1-generate-gene-ranking-from-limmavoom-results","chapter":"12 GSEAPreranked","heading":"12.8.1 Option 1: Generate gene ranking from limma/voom results","text":"Inspect first 10 genes gene ranking","code":"\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue_limma <- !is.na(DE_results_limma$P.Value)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA <- DE_results_limma[ind_nonNA_pvalue_limma, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_limma <- sign(DE_results_noNA$logFC)*(-1)*log10(DE_results_noNA$P.Value)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_limma) <- rownames(DE_results_noNA)\n\n# 4. sort the vector in descending order\nrankvec_limma <- sort(rankvec_limma, decreasing=TRUE)\nhead(rankvec_limma, n = 10)\n#>    RPS4Y1    TMSB4Y     APAF1      LPXN     TRAM2   VIPAS39 \n#> 54.997623 38.221013  3.555641  3.201891  3.165236  3.072060 \n#>    MAP3K1    SLC9A6      PHKB     HCFC2 \n#>  3.019964  2.925713  2.875909  2.816500"},{"path":"gseapreranked.html","id":"option-2-generate-gene-ranking-from-deseq2-results","chapter":"12 GSEAPreranked","heading":"12.8.2 Option 2: Generate gene ranking from DESeq2 results","text":"1.Shrink estimated log fold change valuesBefore generating gene ranking DESeq2 results, need perform additional shrinkage specific DESeq2. intuition behind shrinkage log fold change values follows: mentioned paper, RNA-Seq data consists (rare form) count data inherently heteroscedastic, .e. variance count data depends mean count count data. observable ratios counts considerably noisier lower magnitudes counts compared higher magnitudes, .e.log fold changes conditions higher overall magnitude counts lower, independent actual extent gene differentially expressed conditions. DESeq2 addresses issue shrinking estimated log fold changes direction 0. magnitude shrinkage higher available information gene lower (may low magnitude counts, high dispersion degrees freedom.) detailed description provided DESeq2 paper Love et al. (2014).shrinkage performed object dds, result function DESeq():Function arguments:type: method perform shrinkage\nopt default “apeglm” can choose two alternative options well\nopt default “apeglm” can choose two alternative options wellcoef: indicate coefficients shrunk\ncan obtain right argument following function call:\ncan obtain right argument following function call:shows us can either shrink intercept “condition_treated_vs_untreated”. Since want shrink intercept log fold changes, opt second option “condition_treated_vs_untreated”.Finish results table:Note estimated log fold change values (column log2FoldChange) smaller (absolute terms!) compared regular DESeq2 results, (adjusted non-adjusted) p-value remain unchanged.\nAlso, performed shrinkage Chapter ‘Differential Expression Analysis’ , goal get list differentially expressed genes detected solely based adjusted p-value.2. Generate gene rankingInspect first 10 genes gene ranking","code":"\nif (!any(installed.packages() %in% \"apeglm\")) {\n  BiocManager::install(\"apeglm\", update = FALSE, ask = FALSE)\n}\nDE_results_DESeq2_shrink <- lfcShrink(dds,\n                                      coef = \"condition_treated_vs_untreated\",\n                                      type=\"apeglm\")\nresultsNames(dds)\n#> [1] \"Intercept\"                     \n#> [2] \"condition_treated_vs_untreated\"\n# transform results table to data frame\nDE_results_DESeq2_shrink <- as.data.frame(DE_results_DESeq2_shrink)\n\n# Inspect the first 10 genes from the results table: \nhead(DE_results_DESeq2_shrink, n = 10)\n#>         baseMean log2FoldChange      lfcSE     pvalue\n#> DPM1    62.75664    0.007288891 0.04890425 0.72749780\n#> SCYL3   70.48320    0.005422660 0.04847084 0.79539707\n#> FIRRM   13.00620    0.018798782 0.05470876 0.28259317\n#> FGR     43.59415    0.008038882 0.05231455 0.55947577\n#> FUCA2   37.98066   -0.001246862 0.04796503 0.95273293\n#> NFYA   228.56697    0.012392873 0.04812269 0.59315007\n#> LAS1L   11.53865    0.001891725 0.05141019 0.89303039\n#> ENPP4  175.91248    0.035023088 0.06667768 0.06531079\n#> BAD     66.39379   -0.153104170 0.13823651 0.01008003\n#> HS3ST1  10.12757   -0.005389391 0.05306809 0.53250191\n#>             padj\n#> DPM1   0.9221933\n#> SCYL3  0.9423095\n#> FIRRM  0.7199487\n#> FGR    0.8668104\n#> FUCA2  0.9859714\n#> NFYA   0.8787295\n#> LAS1L  0.9706589\n#> ENPP4  0.4826632\n#> BAD    0.2998836\n#> HS3ST1 0.8522833\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e.\n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue <- !is.na(DE_results_DESeq2_shrink$pvalue)\n\n# subset gene expression data set to those genes with a p-value\nDE_results_noNA <- DE_results_DESeq2_shrink[ind_nonNA_pvalue, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene\nrankvec_DESeq2 <- sign(DE_results_noNA$log2FoldChange)*(-1)*log10(DE_results_noNA$pvalue)\n\n# 3. assign respective gene ID to each value in the vector\nnames(rankvec_DESeq2) <- rownames(DE_results_noNA)\n\n# 4. sort the vector in descending order\nrankvec_DESeq2 <- sort(rankvec_DESeq2, decreasing=TRUE)\nhead(rankvec_DESeq2, n = 10)\n#>     RPS4Y1     TMSB4Y       CTSW      APAF1     SLC9A6 \n#> 204.393649  63.913902   4.462277   3.748896   3.567843 \n#>       LPXN      HCFC2     MAP3K1    VIPAS39      TRAM2 \n#>   3.558986   3.341867   3.281130   3.272801   3.175153"},{"path":"gseapreranked.html","id":"option-3-generate-gene-ranking-from-edger-results","chapter":"12 GSEAPreranked","heading":"12.8.3 Option 3: Generate gene ranking from edgeR results","text":"Inspect first 10 genes gene rankingNote gene RPS4Y1 ranking value “Inf” (infinity). reason behind gene adjusted p-value \\(0\\) edgeR results differential expression analysis (already observed ). solve issue, however, common default approach. illustration purposes , replace value Inf second biggest ranking value ranking.","code":"\n# 1. Subset the gene expression data set to those genes that have a p-value (i.e. \n# which have been NOT been excluded from differential expression analysis)\n\n# indicate those genes WITH a p-value\nind_nonNA_pvalue <- !is.na(DE_results_edgeR$PValue)\n\n# subset gene expression data set to those genes with a p-value \nDE_results_noNA <- DE_results_edgeR[ind_nonNA_pvalue, ]\n\n# 2. create vector that contains the value of the gene-level ranking metric for each gene \nrankvec_edgeR <- sign(DE_results_noNA$logFC)*(-1)*log10(DE_results_noNA$p_adj)\n\n# 3. assign respective gene ID to each value in the vector \nnames(rankvec_edgeR) <- rownames(DE_results_noNA)\n\n# 4. sort the vector in descending order \nrankvec_edgeR <- sort(rankvec_edgeR, decreasing = TRUE)\nhead(rankvec_edgeR, n = 10)\n#>      RPS4Y1      TMSB4Y        CTSW       APAF1        LPXN \n#>         Inf 116.7241828   1.6608208   1.0328005   1.0016012 \n#>      SLC9A6      MAP3K1       TRAM2        ATP8      MICAL2 \n#>   0.9854321   0.8638818   0.8499991   0.8447814   0.8258597\n# replace value Inf by second biggest value in the ranking \nrankvec_edgeR[rankvec_edgeR == Inf] <- max(rankvec_edgeR[rankvec_edgeR != Inf])\n\n# inspect ranking again\nhead(rankvec_edgeR, n = 10)\n#>      RPS4Y1      TMSB4Y        CTSW       APAF1        LPXN \n#> 116.7241828 116.7241828   1.6608208   1.0328005   1.0016012 \n#>      SLC9A6      MAP3K1       TRAM2        ATP8      MICAL2 \n#>   0.9854321   0.8638818   0.8499991   0.8447814   0.8258597"},{"path":"gseapreranked.html","id":"step-5-export-gene-ranking-to-text-file","chapter":"12 GSEAPreranked","heading":"12.9 Step 5: Export gene ranking to text file","text":"purpose simplicity, export one gene rankings text file. , export ranking generated limma.Function arguments:x: object exported text filex: object exported text filefile: location (.e. folder file) object storedfile: location (.e. folder file) object storedquote = FALSE ensures none characters (case gene sample identifiers) surrounded double quotesquote = FALSE ensures none characters (case gene sample identifiers) surrounded double quotesrow.names = TRUE ensures gene IDs included exportrow.names = TRUE ensures gene IDs included exportcol.names = TRUE ensures gene information first row since web-based tool ignores whatever first rowcol.names = TRUE ensures gene information first row since web-based tool ignores whatever first row","code":"\n# this path indicates that we store the gene ranking as the text file \n# \"gene_ranking.txt\" in folder \"Input_Objects_GSEAPreranked\"\npath_conditions <- \"./data/Input_Objects_GSEAPreranked/gene_ranking.txt\"\n\nwrite.table(x = rankvec_limma,\n            file = path_conditions,\n            quote = FALSE,\n            row.names = TRUE,\n            col.names = TRUE)"},{"path":"gseapreranked.html","id":"step-6-further-preparation-in-excel","chapter":"12 GSEAPreranked","heading":"12.10 Step 6: Further preparation in Excel","text":"step, follow instructions bottom following link:\n(http://software.broadinstitute.org/cancer/software/gsea/wiki/index.php/Data_formats), scroll section “RNK: Ranked list file format (*.rnk)“.","code":""}]
